generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model TbChiNhanh {
  id             String       @id @default(uuid())
  MaAdmin        String
  TenChiNhanh    String       @db.VarChar(255)
  SDTChiNhanh    String?      @db.VarChar(255)
  DiaChiChiNhanh String?      @db.VarChar(255)
  KhachSan       TbKhachSan[]
  TaiKhoanAdmin  User         @relation(fields: [MaAdmin], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_maadmin_foreign_key_idx")

  @@index([MaAdmin], map: "MaAdmin")
}

model TbChiTietDichVuDatCho {
  id               String               @id @default(uuid())
  MaDatCho         String
  MaDichVu         String
  MoTa             String               @db.Text
  createAt         DateTime             @default(now()) @db.Timestamp(0)
  ChiTietKhuyenMai TbChiTietKhuyenMai[]
  DatCho           TbDatCho             @relation(fields: [MaDatCho], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietdichvudatcho_madatcho_foreign_key_idx")
  DichVu           TbDichVu             @relation(fields: [MaDichVu], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietdichvudatcho_madichvu_foreign_key_idx")

  @@index([MaDatCho], map: "MaDatCho")
  @@index([MaDichVu], map: "MaDichVu")
}

model TbChiTietPhongTienNghi {
  id         String     @id @default(uuid())
  MaPhong    String
  MaTienNghi String
  Phong      TbPhong    @relation(fields: [MaPhong], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietphongtiennghi_maphong_foreign_key_idx")
  TienNghi   TbTienNghi @relation(fields: [MaTienNghi], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietphongtiennghi_matiennghi_foreign_key_idx")

  @@index([MaPhong], map: "MaPhong")
  @@index([MaTienNghi], map: "MaTienNghi")
}

model TbDanhGia {
  id         String            @id @default(uuid())
  MaKhachSan String
  XepHang    tbdanhgia_XepHang
  BinhLuan   String            @db.Text
  KhachSan   TbKhachSan        @relation(fields: [MaKhachSan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbdanhgia_makhachsan_foreign_key_idx")

  @@index([MaKhachSan], map: "MaKhachSan")
}

model TbDatCho {
  id                  String                  @id @default(uuid())
  MaKH                String
  MaPhong             String
  NgayDatCho          DateTime                @default(now())
  NgayNhanPhong       DateTime
  NgayTraPhong        DateTime
  ChiTietDichVuDatCho TbChiTietDichVuDatCho[]
  HoaDon              TbHoaDon[]

  KhachHang TbKhachHang @relation(fields: [MaKH], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbdatcho_makhachhang_foreign_key_idx")
  Phong     TbPhong     @relation(fields: [MaPhong], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbdatcho_makphong_foreign_key_idx")

  @@index([MaKH], map: "MaKH")
  @@index([MaPhong], map: "MaPhong")
}

model TbDichVu {
  id                  String                  @id @default(uuid())
  MaNhomDichVu        String
  TenDichVu           String                  @db.VarChar(255)
  DonViTinh           String?                 @db.VarChar(255)
  GiaVon              Decimal                 @db.Decimal(20, 2)
  GiaBan              Decimal                 @db.Decimal(20, 2)
  ThoiLuong           Int                     @db.Int
  NhomDichVu          TbNhomDichVu            @relation(fields: [MaNhomDichVu], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbdichvu_manhomdichvu_foreign_key_idx")
  ChiTietDichVuDatCho TbChiTietDichVuDatCho[]
  CacLinkAnhDichVu    TbCacLinkAnhDichVu[]

  @@index([MaNhomDichVu], map: "MaNhomDichVu")
}

model TbNhomDichVu {
  id            String     @id @default(uuid())
  TenNhomDichVu String     @db.VarChar(255)
  DichVu        TbDichVu[]
}

model TbHangHoa {
  id                  String                @id @default(uuid())
  MaNhomHangHoa       String
  TenHangHoa          String                @db.VarChar(255)
  DonViTinh           String?               @db.VarChar(255)
  GiaVon              Decimal               @db.Decimal(20, 2)
  GiaBan              Decimal               @db.Decimal(20, 2)
  SLTonKho            Int                   @db.Int
  DinhMucTonItNhat    Int?                  @db.Int
  DinhMucTonNhieuNhat Int?                  @db.Int
  TrongLuong          String?               @db.VarChar(255)
  MoTa                String                @db.Text
  GhiChu              String                @db.Text
  ViTri               String?                @db.VarChar(255)
  NhomHangHoa         TbNhomHangHoa         @relation(fields: [MaNhomHangHoa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbhanghoa_manhomhanghoa_foreign_key_idx")
  CacLinkAnhHangHoa   TbCacLinkAnhHangHoa[]

  @@index([MaNhomHangHoa], map: "MaNhomHangHoa")
}

model TbNhomHangHoa {
  id             String      @id @default(uuid())
  TenNhomHangHoa String      @db.VarChar(255)
  HangHoa        TbHangHoa[]
}

model TbHoaDon {
  id                  String                       @id @default(uuid())
  MaDatCho            String
  TongHoaDon          Decimal                      @db.Decimal(20, 2)
  NgayThanhToan       DateTime                     @default(now()) @db.Timestamp(0)
  PhuongThucThanhToan tbhoadon_PhuongThucThanhToan
  DatCho              TbDatCho                     @relation(fields: [MaDatCho], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbhoadon_madatcho_foreign_key_idx")

  @@index([MaDatCho], map: "MaDatCho")
}

model TbKhachHang {
  id             String     @id @default(uuid())
  TenKH          String?    @db.VarChar(255)
  SDTKH          String?    @db.VarChar(255)
  EmailKH        String     @unique(map: "tbkhachhang_emailkh_unique") @db.VarChar(255)
  TaiKhoanKH     String     @db.VarChar(255)
  MatKhauMaHoaKH String     @db.VarChar(255)
  createAt       DateTime   @default(now()) @db.Timestamp(0)
  updateAt       DateTime   @updatedAt
  DatCho         TbDatCho[]
}

model TbKhachSan {
  id                        String                        @id @default(uuid())
  MaNhaCungCap              String?
  MaChiNhanh                String
  TenKhachSan               String                        @db.VarChar(255)
  DiaChiKhachSan            String?                        @db.VarChar(255)
  SDTKhachSan               String?                        @db.VarChar(255)
  EmailKhachSan             String?                        @unique(map: "tbkhachsan_emailks_unique") @db.VarChar(255)
  TaiKhoanSub               SubUser[]
  Phong                     TbPhong[]
  DanhGia                   TbDanhGia[]
  ChiTietNhaCungCapKhachSan TbChiTietNhaCungCapKhachSan[]
  ChiNhanh                  TbChiNhanh                    @relation(fields: [MaChiNhanh], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbkhachsan_machinhanh_foreign_key_idx")

  @@index([MaNhaCungCap], map: "MaNhaCungCap")
  @@index([MaChiNhanh], map: "MaChiNhanh")
}

model TbChiTietNhaCungCapKhachSan {
  id           String       @id @default(uuid())
  MaNhaCungCap String
  MaKhachSan   String
  NhaCungCap   TbNhaCungCap @relation(fields: [MaNhaCungCap], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietnhacungcapkhachsan_manhacungcap_foregin_key_idx")
  KhachSan     TbKhachSan   @relation(fields: [MaKhachSan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietnhacungcapkhachsan_makhachsan_foregin_key_idx")

  @@index([MaNhaCungCap], map: "MaNhaCungCap")
  @@index([MaKhachSan], map: "MaKhachSan")
}


model TbKhuyenMai {
  id               String               @id @default(uuid())
  TenKhuyenMai     String               @db.VarChar(255)
  MucGiamGia       Decimal              @db.Decimal(20, 2)
  NgayBatDau       DateTime             @db.Date
  NgayKetThuc      DateTime             @db.Date
  ChiTietKhuyenMai TbChiTietKhuyenMai[]
}

model TbChiTietKhuyenMai {
  id                    String                 @id @default(uuid())
  MaKhuyenMai           String?
  MaChiTietDichVuDatCho String?
  MoTa                  String?                @db.Text
  KhuyenMai             TbKhuyenMai?           @relation(fields: [MaKhuyenMai], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietkhuyenmai_makhuyenmai_foregin_key_idx")
  ChiTietDichVuDatCho   TbChiTietDichVuDatCho? @relation(fields: [MaChiTietDichVuDatCho], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietkhuyenmai_machitietdichvudatcho_foregin_key_idx")

  @@index([MaKhuyenMai], map: "MaKhuyenMai")
  @@index([MaChiTietDichVuDatCho], map: "MaChiTietDichVuDatCho")
}

model TbLoaiPhong {
  id                  String                  @id @default(uuid())
  TenLoaiPhong        String                  @db.VarChar(255)
  GiaTheoGio          Decimal                 @db.Decimal(20, 2)
  GiaTheoNgay         Decimal                 @db.Decimal(20, 2)
  CacLinkAnhLoaiPhong TbCacLinkAnhLoaiPhong[]
  Phong               TbPhong[]
}

model TbCacLinkAnhLoaiPhong {
  id          String      @id @default(uuid())
  MaLoaiPhong String
  LinkAnh     String      @db.Text
  LoaiPhong   TbLoaiPhong @relation(fields: [MaLoaiPhong], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbcaclinkanh_maloaiphong_foreign_key_idx")

  @@index([MaLoaiPhong], map: "MaLoaiPhong")
}

model TbCacLinkAnhDichVu {
  id       String   @id @default(uuid())
  MaDichVu String
  LinkAnh  String   @db.Text
  DichVu   TbDichVu @relation(fields: [MaDichVu], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbcaclinkanhhanghoa_madichvu_foreign_key_idx")

  @@index([MaDichVu], map: "MaDichVu")
}

model TbCacLinkAnhHangHoa {
  id        String    @id @default(uuid())
  MaHangHoa String
  LinkAnh   String    @db.Text
  HangHoa   TbHangHoa @relation(fields: [MaHangHoa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbcaclinkanhhanghoa_mahanghoa_foreign_key_idx")

  @@index([MaHangHoa], map: "MaHangHoa")
}

model TbCacLinkAnhPhong {
  id      String  @id @default(uuid())
  MaPhong String
  LinkAnh String  @db.Text
  Phong   TbPhong @relation(fields: [MaPhong], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbcaclinkanhphong_maphong_foreign_key_idx")

  @@index([MaPhong], map: "MaPhong")
}

model TbNhaCungCap {
  id                        String                        @id @default(uuid())
  TenNhaCungCap             String                        @db.VarChar(255)
  SDTNhaCungCap             String                        @db.VarChar(255)
  EmailNhaCungCap           String                        @unique(map: "tbnhacungcap_emailnhacungcap_unique") @db.VarChar(255)
  ChiTietNhaCungCapKhachSan TbChiTietNhaCungCapKhachSan[]
}

model TbPhong {
  id                   String                   @id @default(uuid())
  MaLoaiPhong          String
  MaKhachSan           String
  MaNhomKhuVucPhong    String
  TenPhong             String                   @db.VarChar(255)
  GhiChu               String?                  @db.Text
  Status               tbphong_Status
  NhomKhuVucPhong      TbNhomKhuVucPhong        @relation(fields: [MaNhomKhuVucPhong], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbphong_manhomkhuvucphong_foreign_key_idx")
  LoaiPhong            TbLoaiPhong              @relation(fields: [MaLoaiPhong], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbphong_maloaiphong_foreign_key_idx")
  KhachSan             TbKhachSan               @relation(fields: [MaKhachSan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbphong_makhachsan_foreign_key_idx")
  DatCho               TbDatCho[]
  ChiTietPhongTienNghi TbChiTietPhongTienNghi[]
  CacLinkAnhPhong      TbCacLinkAnhPhong[]

  @@index([MaLoaiPhong], map: "MaLoaiPhong")
  @@index([MaKhachSan], map: "MaKhachSan")
  @@index([MaNhomKhuVucPhong], map: "MaNhomKhuVucPhong")
}

model TbNhomKhuVucPhong {
  id            String    @id @default(uuid())
  TenNhomKhuVuc String    @db.VarChar(255)
  GhiChu        String?   @db.Text
  Phong         TbPhong[]
}

model User {
  id           String            @id @default(uuid())
  name         String
  phone_number Float?
  address      String?
  password     String
  email        String            @unique
  avatar       Avatars?
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  role         tbtaikhoan_VaiTro @default(Admin)
  TaiKhoanCon  SubUser[]
  ChiNhanh     TbChiNhanh[]

  @@unique([email, phone_number], name: "uniquee_email_phone_number")
}

model SubUser {
  id           String               @id @default(uuid())
  MaKhachSan   String?
  MaAdmin      String
  name         String
  phone_number Float?
  address      String?
  password     String
  email        String               @unique
  subAvatar    SubAvatars?
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  role         tbtaikhoancon_VaiTro
  TaiKhoan     User                 @relation(fields: [MaAdmin], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbtaikhoancon_maadmin_foreign_key_idx")
  KhachSan     TbKhachSan?          @relation(fields: [MaKhachSan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbtaikhoancon_makhachsan_foreign_key_idx")

  @@unique([email, phone_number], name: "uniquee_sub_email_phone_number")
  @@index([MaKhachSan], map: "MaKhachSan")
  @@index([MaAdmin], map: "MaAdmin")
}

model TbTienNghi {
  id                   String                   @id @default(uuid())
  TenTienNghi          String                   @db.VarChar(255)
  MoTa                 String                   @db.Text
  ChiTietPhongTienNghi TbChiTietPhongTienNghi[]
}

model Avatars {
  id        String @id @default(uuid())
  public_id String
  url       String
  user      User   @relation(fields: [userId], references: [id])
  userId    String @unique
}

model SubAvatars {
  id        String  @id @default(uuid())
  public_id String
  url       String
  sub_user  SubUser @relation(fields: [subUserId], references: [id])
  subUserId String  @unique
}

enum tbdanhgia_XepHang {
  Zero
  One
  Two
  Three
  Four
  Five
}

enum tbphong_Status {
  HasRoom
  NoRoom
}

enum tbhoadon_PhuongThucThanhToan {
  TienMat
  ChuyenKhoan
  PhieuNo
}

enum tbtaikhoan_VaiTro {
  Admin
}

enum tbtaikhoancon_VaiTro {
  LeTan
  PhucVu
}
