generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model TbChiNhanh {
  id             String       @id @default(uuid())
  TenChiNhanh    String       @db.VarChar(255)
  SDTChiNhanh    String       @db.VarChar(255)
  DiaChiChiNhanh String       @db.VarChar(255)
  KhachSan       TbKhachSan[]
  TaiKhoan       TbTaiKhoan[]
}

model TbChiTietDichVuDatCho {
  id               String               @id @default(uuid())
  MaDatCho         String
  MaDichVu         String
  MoTa             String               @db.Text
  createAt         DateTime             @default(now()) @db.Timestamp(0)
  ChiTietKhuyenMai TbChiTietKhuyenMai[]
  DatCho           TbDatCho             @relation(fields: [MaDatCho], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietdichvudatcho_madatcho_foreign_key_idx")
  DichVu           TbDichVu             @relation(fields: [MaDichVu], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietdichvudatcho_madichvu_foreign_key_idx")

  @@index([MaDatCho], map: "MaDatCho")
  @@index([MaDichVu], map: "MaDichVu")
}

model TbChiTietPhongTienNghi {
  id         String     @id @default(uuid())
  MaPhong    String
  MaTienNghi String
  Phong      TbPhong    @relation(fields: [MaPhong], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietphongtiennghi_maphong_foreign_key_idx")
  TienNghi   TbTienNghi @relation(fields: [MaTienNghi], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietphongtiennghi_matiennghi_foreign_key_idx")

  @@index([MaPhong], map: "MaPhong")
  @@index([MaTienNghi], map: "MaTienNghi")
}

model TbDanhGia {
  id         String            @id @default(uuid())
  MaKhachSan String
  XepHang    tbdanhgia_XepHang
  BinhLuan   String            @db.Text
  KhachSan   TbKhachSan        @relation(fields: [MaKhachSan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbdanhgia_makhachsan_foreign_key_idx")

  @@index([MaKhachSan], map: "MaKhachSan")
}

model TbDatCho {
  id                  String                  @id @default(uuid())
  MaKH                String
  MaPhong             String
  NgayDatCho          DateTime                @default(now())
  NgayNhanPhong       DateTime
  NgayTraPhong        DateTime
  ChiTietDichVuDatCho TbChiTietDichVuDatCho[]
  HoaDon              TbHoaDon[]

  KhachHang TbKhachHang @relation(fields: [MaKH], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbdatcho_makhachhang_foreign_key_idx")
  Phong     TbPhong     @relation(fields: [MaPhong], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbdatcho_makphong_foreign_key_idx")

  @@index([MaKH], map: "MaKH")
  @@index([MaPhong], map: "MaPhong")
}

model TbDichVu {
  id                  String                  @id @default(uuid())
  TenDichVu           String                  @db.VarChar(255)
  GiaCa               Decimal                 @db.Decimal(8, 2)
  ChiTietDichVuDatCho TbChiTietDichVuDatCho[]
}

model TbHoaDon {
  id                  String                       @id @default(uuid())
  MaDatCho            String
  TongHoaDon          Decimal                      @db.Decimal(8, 2)
  NgayThanhToan       DateTime                     @default(now()) @db.Timestamp(0)
  PhuongThucThanhToan tbhoadon_PhuongThucThanhToan
  DatCho              TbDatCho                     @relation(fields: [MaDatCho], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbhoadon_madatcho_foreign_key_idx")

  @@index([MaDatCho], map: "MaDatCho")
}

model TbKhachHang {
  id             String     @id @default(uuid())
  TenKH          String?    @db.VarChar(255)
  SDTKH          String?    @db.VarChar(255)
  EmailKH        String     @unique(map: "tbkhachhang_emailkh_unique") @db.VarChar(255)
  TaiKhoanKH     String     @db.VarChar(255)
  MatKhauMaHoaKH String     @db.VarChar(255)
  createAt       DateTime   @default(now()) @db.Timestamp(0)
  updateAt       DateTime   @updatedAt
  DatCho         TbDatCho[]
}

model TbKhachSan {
  id             String       @id @default(uuid())
  MaNhaCungCap   String
  MaChiNhanh     String
  TenKhachSan    String       @db.VarChar(255)
  DiaChiKhachSan String       @db.VarChar(255)
  SDTKhachSan    String       @db.VarChar(255)
  EmailKhachSan  String       @unique(map: "tbkhachsan_emailks_unique") @db.VarChar(255)
  TaiKhoan       TbTaiKhoan[]
  Phong          TbPhong[]
  DanhGia        TbDanhGia[]
  NhaCungCap     TbNhaCungCap @relation(fields: [MaNhaCungCap], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbkhachsan_manhacungcap_foreign_key_idx")
  ChiNhanh       TbChiNhanh   @relation(fields: [MaChiNhanh], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbkhachsan_machinhanh_foreign_key_idx")

  @@index([MaNhaCungCap], map: "MaNhaCungCap")
  @@index([MaChiNhanh], map: "MaChiNhanh")
}

model TbKhuyenMai {
  id               String               @id @default(uuid())
  TenKhuyenMai     String               @db.VarChar(255)
  MucGiamGia       Decimal              @db.Decimal(8, 2)
  NgayBatDau       DateTime             @db.Date
  NgayKetThuc      DateTime             @db.Date
  ChiTietKhuyenMai TbChiTietKhuyenMai[]
}

model TbChiTietKhuyenMai {
  id                    String                 @id @default(uuid())
  MaKhuyenMai           String?
  MaChiTietDichVuDatCho String?
  MoTa                  String?                @db.Text
  KhuyenMai             TbKhuyenMai?           @relation(fields: [MaKhuyenMai], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietkhuyenmai_makhuyenmai_foregin_key_idx")
  ChiTietDichVuDatCho   TbChiTietDichVuDatCho? @relation(fields: [MaChiTietDichVuDatCho], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbchitietkhuyenmai_machitietdichvudatcho_foregin_key_idx")

  @@index([MaKhuyenMai], map: "MaKhuyenMai")
  @@index([MaChiTietDichVuDatCho], map: "MaChiTietDichVuDatCho")
}

model TbLoaiPhong {
  id           String    @id @default(uuid())
  TenLoaiPhong String    @db.VarChar(255)
  MoTa         String    @db.Text
  GiaCa        Decimal   @db.Decimal(8, 2)
  Phong        TbPhong[]
}

model TbNhaCungCap {
  id              String       @id @default(uuid())
  TenNhaCungCap   String       @db.VarChar(255)
  SDTNhaCungCap   String       @db.VarChar(255)
  EmailNhaCungCap String       @unique(map: "tbnhacungcap_emailnhacungcap_unique") @db.VarChar(255)
  KhachSan        TbKhachSan[]
}

model TbPhong {
  id                   String                   @id @default(uuid())
  MaLoaiPhong          String
  MaKhachSan           String
  TenPhong             String                   @db.VarChar(255)
  Status               tbphong_Status
  LoaiPhong            TbLoaiPhong              @relation(fields: [MaLoaiPhong], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbphong_maloaiphong_foreign_key_idx")
  KhachSan             TbKhachSan               @relation(fields: [MaKhachSan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbphong_makhachsan_foreign_key_idx")
  DatCho               TbDatCho[]
  ChiTietPhongTienNghi TbChiTietPhongTienNghi[]

  @@index([MaLoaiPhong], map: "MaLoaiPhong")
  @@index([MaKhachSan], map: "MaKhachSan")
}

model TbTaiKhoan {
  id            String            @id @default(uuid())
  MaChiNhanh    String?
  MaKhachSan    String?
  TenTaiKhoan   String            @db.VarChar(255)
  MatKhauMaHoa  String            @db.VarChar(255)
  TenNhanVien   String?           @db.VarChar(255)
  SDTNhanVien   String?           @db.VarChar(255)
  EmailNhanVien String            @unique(map: "tbtaikhoan_emailnv_unique") @db.VarChar(255)
  createdAt     DateTime          @default(now()) @db.Timestamp(0)
  updatedAt     DateTime          @updatedAt
  VaiTro        tbtaikhoan_VaiTro
  ChiNhanh      TbChiNhanh?       @relation(fields: [MaChiNhanh], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbtaikhoan_mataikhoan_foreign_key_idx")
  KhachSan      TbKhachSan?       @relation(fields: [MaKhachSan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbtaikhoan_makhachsan_foreign_key_idx")

  @@index([MaChiNhanh], map: "MaChiNhanh")
  @@index([MaKhachSan], map: "MaKhachSan")
}

model TbTienNghi {
  id                   String                   @id @default(uuid())
  TenTienNghi          String                   @db.VarChar(255)
  MoTa                 String                   @db.Text
  ChiTietPhongTienNghi TbChiTietPhongTienNghi[]
}

model Avatars {
  id        String @id @default(uuid())
  public_id String 
  url       String
  user      User   @relation(fields: [userId], references: [id])
  userId    String @unique
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  // phone_number Float? @unique  ===> we can't use this line because sometime our phone number is null and then we can't compare it
  phone_number Float?
  address      String?
  password     String
  avatar       Avatars?
  role         Role     @default(User)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  @@unique([email, phone_number], name: "unique_email_phone_number") // In this approach, a composite unique constraint (@@unique) is created on both email and phone_number. This allows phone_number to be null but enforces uniqueness when phone_number is not null.
}


enum Role {
  Admin
  User
}

enum tbdanhgia_XepHang {
  Zero
  One
  Two
  Three
  Four
  Five
}

enum tbphong_Status {
  HasRoom
  NoRoom
}

enum tbhoadon_PhuongThucThanhToan {
  TienMat
  ChuyenKhoan
  PhieuNo
}

enum tbtaikhoan_VaiTro {
  Admin
  QLChiNhanh
  LeTan
  PhucVu
}
