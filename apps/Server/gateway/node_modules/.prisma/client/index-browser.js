
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.10.2
 * Query Engine version: 5a9203d0590c951969e85a7d07215503f4672eb9
 */
Prisma.prismaVersion = {
  client: "5.10.2",
  engine: "5a9203d0590c951969e85a7d07215503f4672eb9"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TbChiNhanhScalarFieldEnum = {
  id: 'id',
  MaAdmin: 'MaAdmin',
  TenChiNhanh: 'TenChiNhanh',
  SDTChiNhanh: 'SDTChiNhanh',
  DiaChiChiNhanh: 'DiaChiChiNhanh'
};

exports.Prisma.TbChiTietDichVuDatChoScalarFieldEnum = {
  id: 'id',
  MaDatCho: 'MaDatCho',
  MaDichVu: 'MaDichVu',
  MaHoaDon: 'MaHoaDon',
  MoTa: 'MoTa',
  createAt: 'createAt'
};

exports.Prisma.TbDatChoScalarFieldEnum = {
  id: 'id',
  MaKH: 'MaKH',
  MaPhong: 'MaPhong',
  NgayDatCho: 'NgayDatCho',
  NgayNhanPhong: 'NgayNhanPhong',
  NgayTraPhong: 'NgayTraPhong',
  SLNguoiLonDiKem: 'SLNguoiLonDiKem',
  SLTreEmDiKem: 'SLTreEmDiKem',
  LoaiKhach: 'LoaiKhach',
  StatusThongBao: 'StatusThongBao',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.TbDichVuScalarFieldEnum = {
  id: 'id',
  MaNhomDichVu: 'MaNhomDichVu',
  TenDichVu: 'TenDichVu',
  DonViTinh: 'DonViTinh',
  GiaVon: 'GiaVon',
  GiaBan: 'GiaBan',
  ThoiLuong: 'ThoiLuong',
  StatusThongBao: 'StatusThongBao',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.TbNhomDichVuScalarFieldEnum = {
  id: 'id',
  MaKhachSan: 'MaKhachSan',
  TenNhomDichVu: 'TenNhomDichVu'
};

exports.Prisma.TbHangHoaScalarFieldEnum = {
  id: 'id',
  MaNhomHangHoa: 'MaNhomHangHoa',
  TenHangHoa: 'TenHangHoa',
  DonViTinh: 'DonViTinh',
  GiaGocHangHoa: 'GiaGocHangHoa',
  GiaBanHangHoa: 'GiaBanHangHoa',
  SLTonKho: 'SLTonKho',
  DinhMucTonItNhat: 'DinhMucTonItNhat',
  DinhMucTonNhieuNhat: 'DinhMucTonNhieuNhat',
  TrongLuong: 'TrongLuong',
  MoTa: 'MoTa',
  GhiChu: 'GhiChu',
  ViTri: 'ViTri',
  StatusThongBao: 'StatusThongBao'
};

exports.Prisma.TbPhieuNhapScalarFieldEnum = {
  id: 'id',
  MaKhachSan: 'MaKhachSan',
  MaNhaCungCap: 'MaNhaCungCap',
  CacKhoanChiPhiPhatSinhHangHoa: 'CacKhoanChiPhiPhatSinhHangHoa',
  TongTienCanTra: 'TongTienCanTra',
  TienDaTra: 'TienDaTra',
  Status: 'Status',
  StatusThongBao: 'StatusThongBao',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.TbChiTietNoiDungNhapScalarFieldEnum = {
  id: 'id',
  MaHangHoa: 'MaHangHoa',
  MaPhieuNhap: 'MaPhieuNhap',
  ThanhTien: 'ThanhTien',
  SLNhap: 'SLNhap',
  GiamGia: 'GiamGia',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.TbNhomHangHoaScalarFieldEnum = {
  id: 'id',
  MaKhachSan: 'MaKhachSan',
  TenNhomHangHoa: 'TenNhomHangHoa'
};

exports.Prisma.TbHoaDonScalarFieldEnum = {
  id: 'id',
  MaTaiKhoanSub: 'MaTaiKhoanSub',
  MaKhachSan: 'MaKhachSan',
  TongHoaDon: 'TongHoaDon',
  KhachThanhToan: 'KhachThanhToan',
  NgayThanhToan: 'NgayThanhToan',
  GhiChu: 'GhiChu',
  Status: 'Status',
  StatusThongBao: 'StatusThongBao',
  createAt: 'createAt',
  updateAt: 'updateAt',
  PhuongThucThanhToan: 'PhuongThucThanhToan'
};

exports.Prisma.TbKhachHangScalarFieldEnum = {
  id: 'id',
  TenKH: 'TenKH',
  SDTKH: 'SDTKH',
  EmailKH: 'EmailKH',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.TbKhachSanScalarFieldEnum = {
  id: 'id',
  MaChiNhanh: 'MaChiNhanh',
  TenKhachSan: 'TenKhachSan',
  DiaChiKhachSan: 'DiaChiKhachSan',
  SDTKhachSan: 'SDTKhachSan',
  EmailKhachSan: 'EmailKhachSan'
};

exports.Prisma.TbLoaiPhongScalarFieldEnum = {
  id: 'id',
  MaKhachSan: 'MaKhachSan',
  TenLoaiPhong: 'TenLoaiPhong',
  GiaTheoGio: 'GiaTheoGio',
  GiaTheoNgay: 'GiaTheoNgay'
};

exports.Prisma.TbCacLinkAnhLoaiPhongScalarFieldEnum = {
  id: 'id',
  MaLoaiPhong: 'MaLoaiPhong',
  LinkAnh: 'LinkAnh'
};

exports.Prisma.TbCacLinkAnhDichVuScalarFieldEnum = {
  id: 'id',
  MaDichVu: 'MaDichVu',
  LinkAnh: 'LinkAnh'
};

exports.Prisma.TbCacLinkAnhHangHoaScalarFieldEnum = {
  id: 'id',
  MaHangHoa: 'MaHangHoa',
  LinkAnh: 'LinkAnh'
};

exports.Prisma.TbCacLinkAnhPhongScalarFieldEnum = {
  id: 'id',
  MaPhong: 'MaPhong',
  LinkAnh: 'LinkAnh'
};

exports.Prisma.TbNhaCungCapScalarFieldEnum = {
  id: 'id',
  TenNhaCungCap: 'TenNhaCungCap',
  SDTNhaCungCap: 'SDTNhaCungCap',
  EmailNhaCungCap: 'EmailNhaCungCap'
};

exports.Prisma.TbPhongScalarFieldEnum = {
  id: 'id',
  MaLoaiPhong: 'MaLoaiPhong',
  MaNhomKhuVucPhong: 'MaNhomKhuVucPhong',
  TenPhong: 'TenPhong',
  GhiChu: 'GhiChu',
  Status: 'Status',
  StatusDatCho: 'StatusDatCho',
  StatusThongBao: 'StatusThongBao',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.TbNhomKhuVucPhongScalarFieldEnum = {
  id: 'id',
  MaKhachSan: 'MaKhachSan',
  TenNhomKhuVuc: 'TenNhomKhuVuc',
  GhiChu: 'GhiChu'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  phone_number: 'phone_number',
  address: 'address',
  password: 'password',
  email: 'email',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  role: 'role'
};

exports.Prisma.SubUserScalarFieldEnum = {
  id: 'id',
  MaKhachSan: 'MaKhachSan',
  name: 'name',
  phone_number: 'phone_number',
  address: 'address',
  password: 'password',
  email: 'email',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  role: 'role'
};

exports.Prisma.AvatarsScalarFieldEnum = {
  id: 'id',
  public_id: 'public_id',
  url: 'url',
  userId: 'userId'
};

exports.Prisma.SubAvatarsScalarFieldEnum = {
  id: 'id',
  public_id: 'public_id',
  url: 'url',
  subUserId: 'subUserId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.loaikhach_Status = exports.$Enums.loaikhach_Status = {
  KhachLe: 'KhachLe',
  KhachTheoNhom: 'KhachTheoNhom'
};

exports.thongbao_Status = exports.$Enums.thongbao_Status = {
  On: 'On',
  Off: 'Off'
};

exports.tbphieunhap_Status = exports.$Enums.tbphieunhap_Status = {
  PhieuTam: 'PhieuTam',
  PhieuHoanThanh: 'PhieuHoanThanh'
};

exports.tbhoadon_Status = exports.$Enums.tbhoadon_Status = {
  Ready: 'Ready',
  Done: 'Done',
  Canncel: 'Canncel'
};

exports.tbhoadon_PhuongThucThanhToan = exports.$Enums.tbhoadon_PhuongThucThanhToan = {
  TienMat: 'TienMat',
  ChuyenKhoan: 'ChuyenKhoan',
  The: 'The'
};

exports.tbphong_Status = exports.$Enums.tbphong_Status = {
  Active: 'Active',
  Paused: 'Paused'
};

exports.tbdatcho_Status = exports.$Enums.tbdatcho_Status = {
  DangDonDep: 'DangDonDep',
  PhongTrong: 'PhongTrong',
  DangCoLichDat: 'DangCoLichDat',
  DangSuDung: 'DangSuDung'
};

exports.tbtaikhoan_VaiTro = exports.$Enums.tbtaikhoan_VaiTro = {
  Admin: 'Admin'
};

exports.tbtaikhoancon_VaiTro = exports.$Enums.tbtaikhoancon_VaiTro = {
  LeTan: 'LeTan',
  PhucVu: 'PhucVu'
};

exports.Prisma.ModelName = {
  TbChiNhanh: 'TbChiNhanh',
  TbChiTietDichVuDatCho: 'TbChiTietDichVuDatCho',
  TbDatCho: 'TbDatCho',
  TbDichVu: 'TbDichVu',
  TbNhomDichVu: 'TbNhomDichVu',
  TbHangHoa: 'TbHangHoa',
  TbPhieuNhap: 'TbPhieuNhap',
  TbChiTietNoiDungNhap: 'TbChiTietNoiDungNhap',
  TbNhomHangHoa: 'TbNhomHangHoa',
  TbHoaDon: 'TbHoaDon',
  TbKhachHang: 'TbKhachHang',
  TbKhachSan: 'TbKhachSan',
  TbLoaiPhong: 'TbLoaiPhong',
  TbCacLinkAnhLoaiPhong: 'TbCacLinkAnhLoaiPhong',
  TbCacLinkAnhDichVu: 'TbCacLinkAnhDichVu',
  TbCacLinkAnhHangHoa: 'TbCacLinkAnhHangHoa',
  TbCacLinkAnhPhong: 'TbCacLinkAnhPhong',
  TbNhaCungCap: 'TbNhaCungCap',
  TbPhong: 'TbPhong',
  TbNhomKhuVucPhong: 'TbNhomKhuVucPhong',
  User: 'User',
  SubUser: 'SubUser',
  Avatars: 'Avatars',
  SubAvatars: 'SubAvatars'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions or Edge Middleware',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
