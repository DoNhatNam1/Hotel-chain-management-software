
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model TbChiNhanh
 * 
 */
export type TbChiNhanh = $Result.DefaultSelection<Prisma.$TbChiNhanhPayload>
/**
 * Model TbChiTietDichVuDatCho
 * 
 */
export type TbChiTietDichVuDatCho = $Result.DefaultSelection<Prisma.$TbChiTietDichVuDatChoPayload>
/**
 * Model TbDatCho
 * 
 */
export type TbDatCho = $Result.DefaultSelection<Prisma.$TbDatChoPayload>
/**
 * Model TbDichVu
 * 
 */
export type TbDichVu = $Result.DefaultSelection<Prisma.$TbDichVuPayload>
/**
 * Model TbNhomDichVu
 * 
 */
export type TbNhomDichVu = $Result.DefaultSelection<Prisma.$TbNhomDichVuPayload>
/**
 * Model TbHangHoa
 * 
 */
export type TbHangHoa = $Result.DefaultSelection<Prisma.$TbHangHoaPayload>
/**
 * Model TbPhieuNhap
 * 
 */
export type TbPhieuNhap = $Result.DefaultSelection<Prisma.$TbPhieuNhapPayload>
/**
 * Model TbChiTietNoiDungNhap
 * 
 */
export type TbChiTietNoiDungNhap = $Result.DefaultSelection<Prisma.$TbChiTietNoiDungNhapPayload>
/**
 * Model TbNhomHangHoa
 * 
 */
export type TbNhomHangHoa = $Result.DefaultSelection<Prisma.$TbNhomHangHoaPayload>
/**
 * Model TbHoaDon
 * 
 */
export type TbHoaDon = $Result.DefaultSelection<Prisma.$TbHoaDonPayload>
/**
 * Model TbKhachHang
 * 
 */
export type TbKhachHang = $Result.DefaultSelection<Prisma.$TbKhachHangPayload>
/**
 * Model TbKhachSan
 * 
 */
export type TbKhachSan = $Result.DefaultSelection<Prisma.$TbKhachSanPayload>
/**
 * Model TbLoaiPhong
 * 
 */
export type TbLoaiPhong = $Result.DefaultSelection<Prisma.$TbLoaiPhongPayload>
/**
 * Model TbCacLinkAnhLoaiPhong
 * 
 */
export type TbCacLinkAnhLoaiPhong = $Result.DefaultSelection<Prisma.$TbCacLinkAnhLoaiPhongPayload>
/**
 * Model TbCacLinkAnhDichVu
 * 
 */
export type TbCacLinkAnhDichVu = $Result.DefaultSelection<Prisma.$TbCacLinkAnhDichVuPayload>
/**
 * Model TbCacLinkAnhHangHoa
 * 
 */
export type TbCacLinkAnhHangHoa = $Result.DefaultSelection<Prisma.$TbCacLinkAnhHangHoaPayload>
/**
 * Model TbCacLinkAnhPhong
 * 
 */
export type TbCacLinkAnhPhong = $Result.DefaultSelection<Prisma.$TbCacLinkAnhPhongPayload>
/**
 * Model TbNhaCungCap
 * 
 */
export type TbNhaCungCap = $Result.DefaultSelection<Prisma.$TbNhaCungCapPayload>
/**
 * Model TbPhong
 * 
 */
export type TbPhong = $Result.DefaultSelection<Prisma.$TbPhongPayload>
/**
 * Model TbNhomKhuVucPhong
 * 
 */
export type TbNhomKhuVucPhong = $Result.DefaultSelection<Prisma.$TbNhomKhuVucPhongPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model SubUser
 * 
 */
export type SubUser = $Result.DefaultSelection<Prisma.$SubUserPayload>
/**
 * Model Avatars
 * 
 */
export type Avatars = $Result.DefaultSelection<Prisma.$AvatarsPayload>
/**
 * Model SubAvatars
 * 
 */
export type SubAvatars = $Result.DefaultSelection<Prisma.$SubAvatarsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const loaikhach_Status: {
  KhachLe: 'KhachLe',
  KhachTheoNhom: 'KhachTheoNhom'
};

export type loaikhach_Status = (typeof loaikhach_Status)[keyof typeof loaikhach_Status]


export const thongbao_Status: {
  On: 'On',
  Off: 'Off'
};

export type thongbao_Status = (typeof thongbao_Status)[keyof typeof thongbao_Status]


export const tbphieunhap_Status: {
  PhieuTam: 'PhieuTam',
  PhieuHoanThanh: 'PhieuHoanThanh'
};

export type tbphieunhap_Status = (typeof tbphieunhap_Status)[keyof typeof tbphieunhap_Status]


export const tbhoadon_Status: {
  Ready: 'Ready',
  Done: 'Done',
  Canncel: 'Canncel'
};

export type tbhoadon_Status = (typeof tbhoadon_Status)[keyof typeof tbhoadon_Status]


export const tbhoadon_PhuongThucThanhToan: {
  TienMat: 'TienMat',
  ChuyenKhoan: 'ChuyenKhoan',
  The: 'The'
};

export type tbhoadon_PhuongThucThanhToan = (typeof tbhoadon_PhuongThucThanhToan)[keyof typeof tbhoadon_PhuongThucThanhToan]


export const tbphong_Status: {
  Active: 'Active',
  Paused: 'Paused'
};

export type tbphong_Status = (typeof tbphong_Status)[keyof typeof tbphong_Status]


export const tbdatcho_Status: {
  DangDonDep: 'DangDonDep',
  PhongTrong: 'PhongTrong',
  DangCoLichDat: 'DangCoLichDat',
  DangSuDung: 'DangSuDung'
};

export type tbdatcho_Status = (typeof tbdatcho_Status)[keyof typeof tbdatcho_Status]


export const tbtaikhoan_VaiTro: {
  Admin: 'Admin'
};

export type tbtaikhoan_VaiTro = (typeof tbtaikhoan_VaiTro)[keyof typeof tbtaikhoan_VaiTro]


export const tbtaikhoancon_VaiTro: {
  LeTan: 'LeTan',
  PhucVu: 'PhucVu'
};

export type tbtaikhoancon_VaiTro = (typeof tbtaikhoancon_VaiTro)[keyof typeof tbtaikhoancon_VaiTro]

}

export type loaikhach_Status = $Enums.loaikhach_Status

export const loaikhach_Status: typeof $Enums.loaikhach_Status

export type thongbao_Status = $Enums.thongbao_Status

export const thongbao_Status: typeof $Enums.thongbao_Status

export type tbphieunhap_Status = $Enums.tbphieunhap_Status

export const tbphieunhap_Status: typeof $Enums.tbphieunhap_Status

export type tbhoadon_Status = $Enums.tbhoadon_Status

export const tbhoadon_Status: typeof $Enums.tbhoadon_Status

export type tbhoadon_PhuongThucThanhToan = $Enums.tbhoadon_PhuongThucThanhToan

export const tbhoadon_PhuongThucThanhToan: typeof $Enums.tbhoadon_PhuongThucThanhToan

export type tbphong_Status = $Enums.tbphong_Status

export const tbphong_Status: typeof $Enums.tbphong_Status

export type tbdatcho_Status = $Enums.tbdatcho_Status

export const tbdatcho_Status: typeof $Enums.tbdatcho_Status

export type tbtaikhoan_VaiTro = $Enums.tbtaikhoan_VaiTro

export const tbtaikhoan_VaiTro: typeof $Enums.tbtaikhoan_VaiTro

export type tbtaikhoancon_VaiTro = $Enums.tbtaikhoancon_VaiTro

export const tbtaikhoancon_VaiTro: typeof $Enums.tbtaikhoancon_VaiTro

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more TbChiNhanhs
 * const tbChiNhanhs = await prisma.tbChiNhanh.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more TbChiNhanhs
   * const tbChiNhanhs = await prisma.tbChiNhanh.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.tbChiNhanh`: Exposes CRUD operations for the **TbChiNhanh** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbChiNhanhs
    * const tbChiNhanhs = await prisma.tbChiNhanh.findMany()
    * ```
    */
  get tbChiNhanh(): Prisma.TbChiNhanhDelegate<ExtArgs>;

  /**
   * `prisma.tbChiTietDichVuDatCho`: Exposes CRUD operations for the **TbChiTietDichVuDatCho** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbChiTietDichVuDatChos
    * const tbChiTietDichVuDatChos = await prisma.tbChiTietDichVuDatCho.findMany()
    * ```
    */
  get tbChiTietDichVuDatCho(): Prisma.TbChiTietDichVuDatChoDelegate<ExtArgs>;

  /**
   * `prisma.tbDatCho`: Exposes CRUD operations for the **TbDatCho** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbDatChos
    * const tbDatChos = await prisma.tbDatCho.findMany()
    * ```
    */
  get tbDatCho(): Prisma.TbDatChoDelegate<ExtArgs>;

  /**
   * `prisma.tbDichVu`: Exposes CRUD operations for the **TbDichVu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbDichVus
    * const tbDichVus = await prisma.tbDichVu.findMany()
    * ```
    */
  get tbDichVu(): Prisma.TbDichVuDelegate<ExtArgs>;

  /**
   * `prisma.tbNhomDichVu`: Exposes CRUD operations for the **TbNhomDichVu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbNhomDichVus
    * const tbNhomDichVus = await prisma.tbNhomDichVu.findMany()
    * ```
    */
  get tbNhomDichVu(): Prisma.TbNhomDichVuDelegate<ExtArgs>;

  /**
   * `prisma.tbHangHoa`: Exposes CRUD operations for the **TbHangHoa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbHangHoas
    * const tbHangHoas = await prisma.tbHangHoa.findMany()
    * ```
    */
  get tbHangHoa(): Prisma.TbHangHoaDelegate<ExtArgs>;

  /**
   * `prisma.tbPhieuNhap`: Exposes CRUD operations for the **TbPhieuNhap** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbPhieuNhaps
    * const tbPhieuNhaps = await prisma.tbPhieuNhap.findMany()
    * ```
    */
  get tbPhieuNhap(): Prisma.TbPhieuNhapDelegate<ExtArgs>;

  /**
   * `prisma.tbChiTietNoiDungNhap`: Exposes CRUD operations for the **TbChiTietNoiDungNhap** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbChiTietNoiDungNhaps
    * const tbChiTietNoiDungNhaps = await prisma.tbChiTietNoiDungNhap.findMany()
    * ```
    */
  get tbChiTietNoiDungNhap(): Prisma.TbChiTietNoiDungNhapDelegate<ExtArgs>;

  /**
   * `prisma.tbNhomHangHoa`: Exposes CRUD operations for the **TbNhomHangHoa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbNhomHangHoas
    * const tbNhomHangHoas = await prisma.tbNhomHangHoa.findMany()
    * ```
    */
  get tbNhomHangHoa(): Prisma.TbNhomHangHoaDelegate<ExtArgs>;

  /**
   * `prisma.tbHoaDon`: Exposes CRUD operations for the **TbHoaDon** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbHoaDons
    * const tbHoaDons = await prisma.tbHoaDon.findMany()
    * ```
    */
  get tbHoaDon(): Prisma.TbHoaDonDelegate<ExtArgs>;

  /**
   * `prisma.tbKhachHang`: Exposes CRUD operations for the **TbKhachHang** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbKhachHangs
    * const tbKhachHangs = await prisma.tbKhachHang.findMany()
    * ```
    */
  get tbKhachHang(): Prisma.TbKhachHangDelegate<ExtArgs>;

  /**
   * `prisma.tbKhachSan`: Exposes CRUD operations for the **TbKhachSan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbKhachSans
    * const tbKhachSans = await prisma.tbKhachSan.findMany()
    * ```
    */
  get tbKhachSan(): Prisma.TbKhachSanDelegate<ExtArgs>;

  /**
   * `prisma.tbLoaiPhong`: Exposes CRUD operations for the **TbLoaiPhong** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbLoaiPhongs
    * const tbLoaiPhongs = await prisma.tbLoaiPhong.findMany()
    * ```
    */
  get tbLoaiPhong(): Prisma.TbLoaiPhongDelegate<ExtArgs>;

  /**
   * `prisma.tbCacLinkAnhLoaiPhong`: Exposes CRUD operations for the **TbCacLinkAnhLoaiPhong** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbCacLinkAnhLoaiPhongs
    * const tbCacLinkAnhLoaiPhongs = await prisma.tbCacLinkAnhLoaiPhong.findMany()
    * ```
    */
  get tbCacLinkAnhLoaiPhong(): Prisma.TbCacLinkAnhLoaiPhongDelegate<ExtArgs>;

  /**
   * `prisma.tbCacLinkAnhDichVu`: Exposes CRUD operations for the **TbCacLinkAnhDichVu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbCacLinkAnhDichVus
    * const tbCacLinkAnhDichVus = await prisma.tbCacLinkAnhDichVu.findMany()
    * ```
    */
  get tbCacLinkAnhDichVu(): Prisma.TbCacLinkAnhDichVuDelegate<ExtArgs>;

  /**
   * `prisma.tbCacLinkAnhHangHoa`: Exposes CRUD operations for the **TbCacLinkAnhHangHoa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbCacLinkAnhHangHoas
    * const tbCacLinkAnhHangHoas = await prisma.tbCacLinkAnhHangHoa.findMany()
    * ```
    */
  get tbCacLinkAnhHangHoa(): Prisma.TbCacLinkAnhHangHoaDelegate<ExtArgs>;

  /**
   * `prisma.tbCacLinkAnhPhong`: Exposes CRUD operations for the **TbCacLinkAnhPhong** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbCacLinkAnhPhongs
    * const tbCacLinkAnhPhongs = await prisma.tbCacLinkAnhPhong.findMany()
    * ```
    */
  get tbCacLinkAnhPhong(): Prisma.TbCacLinkAnhPhongDelegate<ExtArgs>;

  /**
   * `prisma.tbNhaCungCap`: Exposes CRUD operations for the **TbNhaCungCap** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbNhaCungCaps
    * const tbNhaCungCaps = await prisma.tbNhaCungCap.findMany()
    * ```
    */
  get tbNhaCungCap(): Prisma.TbNhaCungCapDelegate<ExtArgs>;

  /**
   * `prisma.tbPhong`: Exposes CRUD operations for the **TbPhong** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbPhongs
    * const tbPhongs = await prisma.tbPhong.findMany()
    * ```
    */
  get tbPhong(): Prisma.TbPhongDelegate<ExtArgs>;

  /**
   * `prisma.tbNhomKhuVucPhong`: Exposes CRUD operations for the **TbNhomKhuVucPhong** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbNhomKhuVucPhongs
    * const tbNhomKhuVucPhongs = await prisma.tbNhomKhuVucPhong.findMany()
    * ```
    */
  get tbNhomKhuVucPhong(): Prisma.TbNhomKhuVucPhongDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.subUser`: Exposes CRUD operations for the **SubUser** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SubUsers
    * const subUsers = await prisma.subUser.findMany()
    * ```
    */
  get subUser(): Prisma.SubUserDelegate<ExtArgs>;

  /**
   * `prisma.avatars`: Exposes CRUD operations for the **Avatars** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Avatars
    * const avatars = await prisma.avatars.findMany()
    * ```
    */
  get avatars(): Prisma.AvatarsDelegate<ExtArgs>;

  /**
   * `prisma.subAvatars`: Exposes CRUD operations for the **SubAvatars** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SubAvatars
    * const subAvatars = await prisma.subAvatars.findMany()
    * ```
    */
  get subAvatars(): Prisma.SubAvatarsDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.10.2
   * Query Engine version: 5a9203d0590c951969e85a7d07215503f4672eb9
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    TbChiNhanh: 'TbChiNhanh',
    TbChiTietDichVuDatCho: 'TbChiTietDichVuDatCho',
    TbDatCho: 'TbDatCho',
    TbDichVu: 'TbDichVu',
    TbNhomDichVu: 'TbNhomDichVu',
    TbHangHoa: 'TbHangHoa',
    TbPhieuNhap: 'TbPhieuNhap',
    TbChiTietNoiDungNhap: 'TbChiTietNoiDungNhap',
    TbNhomHangHoa: 'TbNhomHangHoa',
    TbHoaDon: 'TbHoaDon',
    TbKhachHang: 'TbKhachHang',
    TbKhachSan: 'TbKhachSan',
    TbLoaiPhong: 'TbLoaiPhong',
    TbCacLinkAnhLoaiPhong: 'TbCacLinkAnhLoaiPhong',
    TbCacLinkAnhDichVu: 'TbCacLinkAnhDichVu',
    TbCacLinkAnhHangHoa: 'TbCacLinkAnhHangHoa',
    TbCacLinkAnhPhong: 'TbCacLinkAnhPhong',
    TbNhaCungCap: 'TbNhaCungCap',
    TbPhong: 'TbPhong',
    TbNhomKhuVucPhong: 'TbNhomKhuVucPhong',
    User: 'User',
    SubUser: 'SubUser',
    Avatars: 'Avatars',
    SubAvatars: 'SubAvatars'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'tbChiNhanh' | 'tbChiTietDichVuDatCho' | 'tbDatCho' | 'tbDichVu' | 'tbNhomDichVu' | 'tbHangHoa' | 'tbPhieuNhap' | 'tbChiTietNoiDungNhap' | 'tbNhomHangHoa' | 'tbHoaDon' | 'tbKhachHang' | 'tbKhachSan' | 'tbLoaiPhong' | 'tbCacLinkAnhLoaiPhong' | 'tbCacLinkAnhDichVu' | 'tbCacLinkAnhHangHoa' | 'tbCacLinkAnhPhong' | 'tbNhaCungCap' | 'tbPhong' | 'tbNhomKhuVucPhong' | 'user' | 'subUser' | 'avatars' | 'subAvatars'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      TbChiNhanh: {
        payload: Prisma.$TbChiNhanhPayload<ExtArgs>
        fields: Prisma.TbChiNhanhFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbChiNhanhFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiNhanhPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbChiNhanhFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiNhanhPayload>
          }
          findFirst: {
            args: Prisma.TbChiNhanhFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiNhanhPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbChiNhanhFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiNhanhPayload>
          }
          findMany: {
            args: Prisma.TbChiNhanhFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiNhanhPayload>[]
          }
          create: {
            args: Prisma.TbChiNhanhCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiNhanhPayload>
          }
          createMany: {
            args: Prisma.TbChiNhanhCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbChiNhanhDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiNhanhPayload>
          }
          update: {
            args: Prisma.TbChiNhanhUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiNhanhPayload>
          }
          deleteMany: {
            args: Prisma.TbChiNhanhDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbChiNhanhUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbChiNhanhUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiNhanhPayload>
          }
          aggregate: {
            args: Prisma.TbChiNhanhAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbChiNhanh>
          }
          groupBy: {
            args: Prisma.TbChiNhanhGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbChiNhanhGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbChiNhanhCountArgs<ExtArgs>,
            result: $Utils.Optional<TbChiNhanhCountAggregateOutputType> | number
          }
        }
      }
      TbChiTietDichVuDatCho: {
        payload: Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>
        fields: Prisma.TbChiTietDichVuDatChoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbChiTietDichVuDatChoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietDichVuDatChoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbChiTietDichVuDatChoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietDichVuDatChoPayload>
          }
          findFirst: {
            args: Prisma.TbChiTietDichVuDatChoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietDichVuDatChoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbChiTietDichVuDatChoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietDichVuDatChoPayload>
          }
          findMany: {
            args: Prisma.TbChiTietDichVuDatChoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietDichVuDatChoPayload>[]
          }
          create: {
            args: Prisma.TbChiTietDichVuDatChoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietDichVuDatChoPayload>
          }
          createMany: {
            args: Prisma.TbChiTietDichVuDatChoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbChiTietDichVuDatChoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietDichVuDatChoPayload>
          }
          update: {
            args: Prisma.TbChiTietDichVuDatChoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietDichVuDatChoPayload>
          }
          deleteMany: {
            args: Prisma.TbChiTietDichVuDatChoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbChiTietDichVuDatChoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbChiTietDichVuDatChoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietDichVuDatChoPayload>
          }
          aggregate: {
            args: Prisma.TbChiTietDichVuDatChoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbChiTietDichVuDatCho>
          }
          groupBy: {
            args: Prisma.TbChiTietDichVuDatChoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbChiTietDichVuDatChoGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbChiTietDichVuDatChoCountArgs<ExtArgs>,
            result: $Utils.Optional<TbChiTietDichVuDatChoCountAggregateOutputType> | number
          }
        }
      }
      TbDatCho: {
        payload: Prisma.$TbDatChoPayload<ExtArgs>
        fields: Prisma.TbDatChoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbDatChoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDatChoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbDatChoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDatChoPayload>
          }
          findFirst: {
            args: Prisma.TbDatChoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDatChoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbDatChoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDatChoPayload>
          }
          findMany: {
            args: Prisma.TbDatChoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDatChoPayload>[]
          }
          create: {
            args: Prisma.TbDatChoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDatChoPayload>
          }
          createMany: {
            args: Prisma.TbDatChoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbDatChoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDatChoPayload>
          }
          update: {
            args: Prisma.TbDatChoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDatChoPayload>
          }
          deleteMany: {
            args: Prisma.TbDatChoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbDatChoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbDatChoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDatChoPayload>
          }
          aggregate: {
            args: Prisma.TbDatChoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbDatCho>
          }
          groupBy: {
            args: Prisma.TbDatChoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbDatChoGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbDatChoCountArgs<ExtArgs>,
            result: $Utils.Optional<TbDatChoCountAggregateOutputType> | number
          }
        }
      }
      TbDichVu: {
        payload: Prisma.$TbDichVuPayload<ExtArgs>
        fields: Prisma.TbDichVuFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbDichVuFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDichVuPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbDichVuFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDichVuPayload>
          }
          findFirst: {
            args: Prisma.TbDichVuFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDichVuPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbDichVuFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDichVuPayload>
          }
          findMany: {
            args: Prisma.TbDichVuFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDichVuPayload>[]
          }
          create: {
            args: Prisma.TbDichVuCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDichVuPayload>
          }
          createMany: {
            args: Prisma.TbDichVuCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbDichVuDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDichVuPayload>
          }
          update: {
            args: Prisma.TbDichVuUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDichVuPayload>
          }
          deleteMany: {
            args: Prisma.TbDichVuDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbDichVuUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbDichVuUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbDichVuPayload>
          }
          aggregate: {
            args: Prisma.TbDichVuAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbDichVu>
          }
          groupBy: {
            args: Prisma.TbDichVuGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbDichVuGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbDichVuCountArgs<ExtArgs>,
            result: $Utils.Optional<TbDichVuCountAggregateOutputType> | number
          }
        }
      }
      TbNhomDichVu: {
        payload: Prisma.$TbNhomDichVuPayload<ExtArgs>
        fields: Prisma.TbNhomDichVuFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbNhomDichVuFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomDichVuPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbNhomDichVuFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomDichVuPayload>
          }
          findFirst: {
            args: Prisma.TbNhomDichVuFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomDichVuPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbNhomDichVuFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomDichVuPayload>
          }
          findMany: {
            args: Prisma.TbNhomDichVuFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomDichVuPayload>[]
          }
          create: {
            args: Prisma.TbNhomDichVuCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomDichVuPayload>
          }
          createMany: {
            args: Prisma.TbNhomDichVuCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbNhomDichVuDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomDichVuPayload>
          }
          update: {
            args: Prisma.TbNhomDichVuUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomDichVuPayload>
          }
          deleteMany: {
            args: Prisma.TbNhomDichVuDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbNhomDichVuUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbNhomDichVuUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomDichVuPayload>
          }
          aggregate: {
            args: Prisma.TbNhomDichVuAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbNhomDichVu>
          }
          groupBy: {
            args: Prisma.TbNhomDichVuGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbNhomDichVuGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbNhomDichVuCountArgs<ExtArgs>,
            result: $Utils.Optional<TbNhomDichVuCountAggregateOutputType> | number
          }
        }
      }
      TbHangHoa: {
        payload: Prisma.$TbHangHoaPayload<ExtArgs>
        fields: Prisma.TbHangHoaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbHangHoaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHangHoaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbHangHoaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHangHoaPayload>
          }
          findFirst: {
            args: Prisma.TbHangHoaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHangHoaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbHangHoaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHangHoaPayload>
          }
          findMany: {
            args: Prisma.TbHangHoaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHangHoaPayload>[]
          }
          create: {
            args: Prisma.TbHangHoaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHangHoaPayload>
          }
          createMany: {
            args: Prisma.TbHangHoaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbHangHoaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHangHoaPayload>
          }
          update: {
            args: Prisma.TbHangHoaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHangHoaPayload>
          }
          deleteMany: {
            args: Prisma.TbHangHoaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbHangHoaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbHangHoaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHangHoaPayload>
          }
          aggregate: {
            args: Prisma.TbHangHoaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbHangHoa>
          }
          groupBy: {
            args: Prisma.TbHangHoaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbHangHoaGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbHangHoaCountArgs<ExtArgs>,
            result: $Utils.Optional<TbHangHoaCountAggregateOutputType> | number
          }
        }
      }
      TbPhieuNhap: {
        payload: Prisma.$TbPhieuNhapPayload<ExtArgs>
        fields: Prisma.TbPhieuNhapFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbPhieuNhapFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhieuNhapPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbPhieuNhapFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhieuNhapPayload>
          }
          findFirst: {
            args: Prisma.TbPhieuNhapFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhieuNhapPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbPhieuNhapFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhieuNhapPayload>
          }
          findMany: {
            args: Prisma.TbPhieuNhapFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhieuNhapPayload>[]
          }
          create: {
            args: Prisma.TbPhieuNhapCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhieuNhapPayload>
          }
          createMany: {
            args: Prisma.TbPhieuNhapCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbPhieuNhapDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhieuNhapPayload>
          }
          update: {
            args: Prisma.TbPhieuNhapUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhieuNhapPayload>
          }
          deleteMany: {
            args: Prisma.TbPhieuNhapDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbPhieuNhapUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbPhieuNhapUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhieuNhapPayload>
          }
          aggregate: {
            args: Prisma.TbPhieuNhapAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbPhieuNhap>
          }
          groupBy: {
            args: Prisma.TbPhieuNhapGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbPhieuNhapGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbPhieuNhapCountArgs<ExtArgs>,
            result: $Utils.Optional<TbPhieuNhapCountAggregateOutputType> | number
          }
        }
      }
      TbChiTietNoiDungNhap: {
        payload: Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>
        fields: Prisma.TbChiTietNoiDungNhapFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbChiTietNoiDungNhapFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietNoiDungNhapPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbChiTietNoiDungNhapFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietNoiDungNhapPayload>
          }
          findFirst: {
            args: Prisma.TbChiTietNoiDungNhapFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietNoiDungNhapPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbChiTietNoiDungNhapFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietNoiDungNhapPayload>
          }
          findMany: {
            args: Prisma.TbChiTietNoiDungNhapFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietNoiDungNhapPayload>[]
          }
          create: {
            args: Prisma.TbChiTietNoiDungNhapCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietNoiDungNhapPayload>
          }
          createMany: {
            args: Prisma.TbChiTietNoiDungNhapCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbChiTietNoiDungNhapDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietNoiDungNhapPayload>
          }
          update: {
            args: Prisma.TbChiTietNoiDungNhapUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietNoiDungNhapPayload>
          }
          deleteMany: {
            args: Prisma.TbChiTietNoiDungNhapDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbChiTietNoiDungNhapUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbChiTietNoiDungNhapUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbChiTietNoiDungNhapPayload>
          }
          aggregate: {
            args: Prisma.TbChiTietNoiDungNhapAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbChiTietNoiDungNhap>
          }
          groupBy: {
            args: Prisma.TbChiTietNoiDungNhapGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbChiTietNoiDungNhapGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbChiTietNoiDungNhapCountArgs<ExtArgs>,
            result: $Utils.Optional<TbChiTietNoiDungNhapCountAggregateOutputType> | number
          }
        }
      }
      TbNhomHangHoa: {
        payload: Prisma.$TbNhomHangHoaPayload<ExtArgs>
        fields: Prisma.TbNhomHangHoaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbNhomHangHoaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomHangHoaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbNhomHangHoaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomHangHoaPayload>
          }
          findFirst: {
            args: Prisma.TbNhomHangHoaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomHangHoaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbNhomHangHoaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomHangHoaPayload>
          }
          findMany: {
            args: Prisma.TbNhomHangHoaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomHangHoaPayload>[]
          }
          create: {
            args: Prisma.TbNhomHangHoaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomHangHoaPayload>
          }
          createMany: {
            args: Prisma.TbNhomHangHoaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbNhomHangHoaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomHangHoaPayload>
          }
          update: {
            args: Prisma.TbNhomHangHoaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomHangHoaPayload>
          }
          deleteMany: {
            args: Prisma.TbNhomHangHoaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbNhomHangHoaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbNhomHangHoaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomHangHoaPayload>
          }
          aggregate: {
            args: Prisma.TbNhomHangHoaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbNhomHangHoa>
          }
          groupBy: {
            args: Prisma.TbNhomHangHoaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbNhomHangHoaGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbNhomHangHoaCountArgs<ExtArgs>,
            result: $Utils.Optional<TbNhomHangHoaCountAggregateOutputType> | number
          }
        }
      }
      TbHoaDon: {
        payload: Prisma.$TbHoaDonPayload<ExtArgs>
        fields: Prisma.TbHoaDonFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbHoaDonFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHoaDonPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbHoaDonFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHoaDonPayload>
          }
          findFirst: {
            args: Prisma.TbHoaDonFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHoaDonPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbHoaDonFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHoaDonPayload>
          }
          findMany: {
            args: Prisma.TbHoaDonFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHoaDonPayload>[]
          }
          create: {
            args: Prisma.TbHoaDonCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHoaDonPayload>
          }
          createMany: {
            args: Prisma.TbHoaDonCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbHoaDonDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHoaDonPayload>
          }
          update: {
            args: Prisma.TbHoaDonUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHoaDonPayload>
          }
          deleteMany: {
            args: Prisma.TbHoaDonDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbHoaDonUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbHoaDonUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbHoaDonPayload>
          }
          aggregate: {
            args: Prisma.TbHoaDonAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbHoaDon>
          }
          groupBy: {
            args: Prisma.TbHoaDonGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbHoaDonGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbHoaDonCountArgs<ExtArgs>,
            result: $Utils.Optional<TbHoaDonCountAggregateOutputType> | number
          }
        }
      }
      TbKhachHang: {
        payload: Prisma.$TbKhachHangPayload<ExtArgs>
        fields: Prisma.TbKhachHangFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbKhachHangFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachHangPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbKhachHangFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachHangPayload>
          }
          findFirst: {
            args: Prisma.TbKhachHangFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachHangPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbKhachHangFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachHangPayload>
          }
          findMany: {
            args: Prisma.TbKhachHangFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachHangPayload>[]
          }
          create: {
            args: Prisma.TbKhachHangCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachHangPayload>
          }
          createMany: {
            args: Prisma.TbKhachHangCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbKhachHangDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachHangPayload>
          }
          update: {
            args: Prisma.TbKhachHangUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachHangPayload>
          }
          deleteMany: {
            args: Prisma.TbKhachHangDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbKhachHangUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbKhachHangUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachHangPayload>
          }
          aggregate: {
            args: Prisma.TbKhachHangAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbKhachHang>
          }
          groupBy: {
            args: Prisma.TbKhachHangGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbKhachHangGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbKhachHangCountArgs<ExtArgs>,
            result: $Utils.Optional<TbKhachHangCountAggregateOutputType> | number
          }
        }
      }
      TbKhachSan: {
        payload: Prisma.$TbKhachSanPayload<ExtArgs>
        fields: Prisma.TbKhachSanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbKhachSanFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachSanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbKhachSanFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachSanPayload>
          }
          findFirst: {
            args: Prisma.TbKhachSanFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachSanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbKhachSanFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachSanPayload>
          }
          findMany: {
            args: Prisma.TbKhachSanFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachSanPayload>[]
          }
          create: {
            args: Prisma.TbKhachSanCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachSanPayload>
          }
          createMany: {
            args: Prisma.TbKhachSanCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbKhachSanDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachSanPayload>
          }
          update: {
            args: Prisma.TbKhachSanUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachSanPayload>
          }
          deleteMany: {
            args: Prisma.TbKhachSanDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbKhachSanUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbKhachSanUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbKhachSanPayload>
          }
          aggregate: {
            args: Prisma.TbKhachSanAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbKhachSan>
          }
          groupBy: {
            args: Prisma.TbKhachSanGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbKhachSanGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbKhachSanCountArgs<ExtArgs>,
            result: $Utils.Optional<TbKhachSanCountAggregateOutputType> | number
          }
        }
      }
      TbLoaiPhong: {
        payload: Prisma.$TbLoaiPhongPayload<ExtArgs>
        fields: Prisma.TbLoaiPhongFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbLoaiPhongFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbLoaiPhongPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbLoaiPhongFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbLoaiPhongPayload>
          }
          findFirst: {
            args: Prisma.TbLoaiPhongFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbLoaiPhongPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbLoaiPhongFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbLoaiPhongPayload>
          }
          findMany: {
            args: Prisma.TbLoaiPhongFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbLoaiPhongPayload>[]
          }
          create: {
            args: Prisma.TbLoaiPhongCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbLoaiPhongPayload>
          }
          createMany: {
            args: Prisma.TbLoaiPhongCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbLoaiPhongDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbLoaiPhongPayload>
          }
          update: {
            args: Prisma.TbLoaiPhongUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbLoaiPhongPayload>
          }
          deleteMany: {
            args: Prisma.TbLoaiPhongDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbLoaiPhongUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbLoaiPhongUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbLoaiPhongPayload>
          }
          aggregate: {
            args: Prisma.TbLoaiPhongAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbLoaiPhong>
          }
          groupBy: {
            args: Prisma.TbLoaiPhongGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbLoaiPhongGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbLoaiPhongCountArgs<ExtArgs>,
            result: $Utils.Optional<TbLoaiPhongCountAggregateOutputType> | number
          }
        }
      }
      TbCacLinkAnhLoaiPhong: {
        payload: Prisma.$TbCacLinkAnhLoaiPhongPayload<ExtArgs>
        fields: Prisma.TbCacLinkAnhLoaiPhongFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbCacLinkAnhLoaiPhongFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhLoaiPhongPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbCacLinkAnhLoaiPhongFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhLoaiPhongPayload>
          }
          findFirst: {
            args: Prisma.TbCacLinkAnhLoaiPhongFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhLoaiPhongPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbCacLinkAnhLoaiPhongFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhLoaiPhongPayload>
          }
          findMany: {
            args: Prisma.TbCacLinkAnhLoaiPhongFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhLoaiPhongPayload>[]
          }
          create: {
            args: Prisma.TbCacLinkAnhLoaiPhongCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhLoaiPhongPayload>
          }
          createMany: {
            args: Prisma.TbCacLinkAnhLoaiPhongCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbCacLinkAnhLoaiPhongDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhLoaiPhongPayload>
          }
          update: {
            args: Prisma.TbCacLinkAnhLoaiPhongUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhLoaiPhongPayload>
          }
          deleteMany: {
            args: Prisma.TbCacLinkAnhLoaiPhongDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbCacLinkAnhLoaiPhongUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbCacLinkAnhLoaiPhongUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhLoaiPhongPayload>
          }
          aggregate: {
            args: Prisma.TbCacLinkAnhLoaiPhongAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbCacLinkAnhLoaiPhong>
          }
          groupBy: {
            args: Prisma.TbCacLinkAnhLoaiPhongGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbCacLinkAnhLoaiPhongGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbCacLinkAnhLoaiPhongCountArgs<ExtArgs>,
            result: $Utils.Optional<TbCacLinkAnhLoaiPhongCountAggregateOutputType> | number
          }
        }
      }
      TbCacLinkAnhDichVu: {
        payload: Prisma.$TbCacLinkAnhDichVuPayload<ExtArgs>
        fields: Prisma.TbCacLinkAnhDichVuFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbCacLinkAnhDichVuFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhDichVuPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbCacLinkAnhDichVuFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhDichVuPayload>
          }
          findFirst: {
            args: Prisma.TbCacLinkAnhDichVuFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhDichVuPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbCacLinkAnhDichVuFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhDichVuPayload>
          }
          findMany: {
            args: Prisma.TbCacLinkAnhDichVuFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhDichVuPayload>[]
          }
          create: {
            args: Prisma.TbCacLinkAnhDichVuCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhDichVuPayload>
          }
          createMany: {
            args: Prisma.TbCacLinkAnhDichVuCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbCacLinkAnhDichVuDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhDichVuPayload>
          }
          update: {
            args: Prisma.TbCacLinkAnhDichVuUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhDichVuPayload>
          }
          deleteMany: {
            args: Prisma.TbCacLinkAnhDichVuDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbCacLinkAnhDichVuUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbCacLinkAnhDichVuUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhDichVuPayload>
          }
          aggregate: {
            args: Prisma.TbCacLinkAnhDichVuAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbCacLinkAnhDichVu>
          }
          groupBy: {
            args: Prisma.TbCacLinkAnhDichVuGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbCacLinkAnhDichVuGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbCacLinkAnhDichVuCountArgs<ExtArgs>,
            result: $Utils.Optional<TbCacLinkAnhDichVuCountAggregateOutputType> | number
          }
        }
      }
      TbCacLinkAnhHangHoa: {
        payload: Prisma.$TbCacLinkAnhHangHoaPayload<ExtArgs>
        fields: Prisma.TbCacLinkAnhHangHoaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbCacLinkAnhHangHoaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhHangHoaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbCacLinkAnhHangHoaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhHangHoaPayload>
          }
          findFirst: {
            args: Prisma.TbCacLinkAnhHangHoaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhHangHoaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbCacLinkAnhHangHoaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhHangHoaPayload>
          }
          findMany: {
            args: Prisma.TbCacLinkAnhHangHoaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhHangHoaPayload>[]
          }
          create: {
            args: Prisma.TbCacLinkAnhHangHoaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhHangHoaPayload>
          }
          createMany: {
            args: Prisma.TbCacLinkAnhHangHoaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbCacLinkAnhHangHoaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhHangHoaPayload>
          }
          update: {
            args: Prisma.TbCacLinkAnhHangHoaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhHangHoaPayload>
          }
          deleteMany: {
            args: Prisma.TbCacLinkAnhHangHoaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbCacLinkAnhHangHoaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbCacLinkAnhHangHoaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhHangHoaPayload>
          }
          aggregate: {
            args: Prisma.TbCacLinkAnhHangHoaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbCacLinkAnhHangHoa>
          }
          groupBy: {
            args: Prisma.TbCacLinkAnhHangHoaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbCacLinkAnhHangHoaGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbCacLinkAnhHangHoaCountArgs<ExtArgs>,
            result: $Utils.Optional<TbCacLinkAnhHangHoaCountAggregateOutputType> | number
          }
        }
      }
      TbCacLinkAnhPhong: {
        payload: Prisma.$TbCacLinkAnhPhongPayload<ExtArgs>
        fields: Prisma.TbCacLinkAnhPhongFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbCacLinkAnhPhongFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhPhongPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbCacLinkAnhPhongFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhPhongPayload>
          }
          findFirst: {
            args: Prisma.TbCacLinkAnhPhongFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhPhongPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbCacLinkAnhPhongFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhPhongPayload>
          }
          findMany: {
            args: Prisma.TbCacLinkAnhPhongFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhPhongPayload>[]
          }
          create: {
            args: Prisma.TbCacLinkAnhPhongCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhPhongPayload>
          }
          createMany: {
            args: Prisma.TbCacLinkAnhPhongCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbCacLinkAnhPhongDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhPhongPayload>
          }
          update: {
            args: Prisma.TbCacLinkAnhPhongUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhPhongPayload>
          }
          deleteMany: {
            args: Prisma.TbCacLinkAnhPhongDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbCacLinkAnhPhongUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbCacLinkAnhPhongUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbCacLinkAnhPhongPayload>
          }
          aggregate: {
            args: Prisma.TbCacLinkAnhPhongAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbCacLinkAnhPhong>
          }
          groupBy: {
            args: Prisma.TbCacLinkAnhPhongGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbCacLinkAnhPhongGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbCacLinkAnhPhongCountArgs<ExtArgs>,
            result: $Utils.Optional<TbCacLinkAnhPhongCountAggregateOutputType> | number
          }
        }
      }
      TbNhaCungCap: {
        payload: Prisma.$TbNhaCungCapPayload<ExtArgs>
        fields: Prisma.TbNhaCungCapFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbNhaCungCapFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhaCungCapPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbNhaCungCapFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhaCungCapPayload>
          }
          findFirst: {
            args: Prisma.TbNhaCungCapFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhaCungCapPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbNhaCungCapFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhaCungCapPayload>
          }
          findMany: {
            args: Prisma.TbNhaCungCapFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhaCungCapPayload>[]
          }
          create: {
            args: Prisma.TbNhaCungCapCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhaCungCapPayload>
          }
          createMany: {
            args: Prisma.TbNhaCungCapCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbNhaCungCapDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhaCungCapPayload>
          }
          update: {
            args: Prisma.TbNhaCungCapUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhaCungCapPayload>
          }
          deleteMany: {
            args: Prisma.TbNhaCungCapDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbNhaCungCapUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbNhaCungCapUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhaCungCapPayload>
          }
          aggregate: {
            args: Prisma.TbNhaCungCapAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbNhaCungCap>
          }
          groupBy: {
            args: Prisma.TbNhaCungCapGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbNhaCungCapGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbNhaCungCapCountArgs<ExtArgs>,
            result: $Utils.Optional<TbNhaCungCapCountAggregateOutputType> | number
          }
        }
      }
      TbPhong: {
        payload: Prisma.$TbPhongPayload<ExtArgs>
        fields: Prisma.TbPhongFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbPhongFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhongPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbPhongFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhongPayload>
          }
          findFirst: {
            args: Prisma.TbPhongFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhongPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbPhongFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhongPayload>
          }
          findMany: {
            args: Prisma.TbPhongFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhongPayload>[]
          }
          create: {
            args: Prisma.TbPhongCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhongPayload>
          }
          createMany: {
            args: Prisma.TbPhongCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbPhongDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhongPayload>
          }
          update: {
            args: Prisma.TbPhongUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhongPayload>
          }
          deleteMany: {
            args: Prisma.TbPhongDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbPhongUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbPhongUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbPhongPayload>
          }
          aggregate: {
            args: Prisma.TbPhongAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbPhong>
          }
          groupBy: {
            args: Prisma.TbPhongGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbPhongGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbPhongCountArgs<ExtArgs>,
            result: $Utils.Optional<TbPhongCountAggregateOutputType> | number
          }
        }
      }
      TbNhomKhuVucPhong: {
        payload: Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>
        fields: Prisma.TbNhomKhuVucPhongFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TbNhomKhuVucPhongFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomKhuVucPhongPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TbNhomKhuVucPhongFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomKhuVucPhongPayload>
          }
          findFirst: {
            args: Prisma.TbNhomKhuVucPhongFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomKhuVucPhongPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TbNhomKhuVucPhongFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomKhuVucPhongPayload>
          }
          findMany: {
            args: Prisma.TbNhomKhuVucPhongFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomKhuVucPhongPayload>[]
          }
          create: {
            args: Prisma.TbNhomKhuVucPhongCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomKhuVucPhongPayload>
          }
          createMany: {
            args: Prisma.TbNhomKhuVucPhongCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TbNhomKhuVucPhongDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomKhuVucPhongPayload>
          }
          update: {
            args: Prisma.TbNhomKhuVucPhongUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomKhuVucPhongPayload>
          }
          deleteMany: {
            args: Prisma.TbNhomKhuVucPhongDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TbNhomKhuVucPhongUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TbNhomKhuVucPhongUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TbNhomKhuVucPhongPayload>
          }
          aggregate: {
            args: Prisma.TbNhomKhuVucPhongAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbNhomKhuVucPhong>
          }
          groupBy: {
            args: Prisma.TbNhomKhuVucPhongGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbNhomKhuVucPhongGroupByOutputType>[]
          }
          count: {
            args: Prisma.TbNhomKhuVucPhongCountArgs<ExtArgs>,
            result: $Utils.Optional<TbNhomKhuVucPhongCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>,
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      SubUser: {
        payload: Prisma.$SubUserPayload<ExtArgs>
        fields: Prisma.SubUserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubUserFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubUserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubUserFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubUserPayload>
          }
          findFirst: {
            args: Prisma.SubUserFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubUserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubUserFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubUserPayload>
          }
          findMany: {
            args: Prisma.SubUserFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubUserPayload>[]
          }
          create: {
            args: Prisma.SubUserCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubUserPayload>
          }
          createMany: {
            args: Prisma.SubUserCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.SubUserDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubUserPayload>
          }
          update: {
            args: Prisma.SubUserUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubUserPayload>
          }
          deleteMany: {
            args: Prisma.SubUserDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.SubUserUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.SubUserUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubUserPayload>
          }
          aggregate: {
            args: Prisma.SubUserAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSubUser>
          }
          groupBy: {
            args: Prisma.SubUserGroupByArgs<ExtArgs>,
            result: $Utils.Optional<SubUserGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubUserCountArgs<ExtArgs>,
            result: $Utils.Optional<SubUserCountAggregateOutputType> | number
          }
        }
      }
      Avatars: {
        payload: Prisma.$AvatarsPayload<ExtArgs>
        fields: Prisma.AvatarsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AvatarsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvatarsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AvatarsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvatarsPayload>
          }
          findFirst: {
            args: Prisma.AvatarsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvatarsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AvatarsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvatarsPayload>
          }
          findMany: {
            args: Prisma.AvatarsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvatarsPayload>[]
          }
          create: {
            args: Prisma.AvatarsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvatarsPayload>
          }
          createMany: {
            args: Prisma.AvatarsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.AvatarsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvatarsPayload>
          }
          update: {
            args: Prisma.AvatarsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvatarsPayload>
          }
          deleteMany: {
            args: Prisma.AvatarsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.AvatarsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.AvatarsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvatarsPayload>
          }
          aggregate: {
            args: Prisma.AvatarsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAvatars>
          }
          groupBy: {
            args: Prisma.AvatarsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AvatarsGroupByOutputType>[]
          }
          count: {
            args: Prisma.AvatarsCountArgs<ExtArgs>,
            result: $Utils.Optional<AvatarsCountAggregateOutputType> | number
          }
        }
      }
      SubAvatars: {
        payload: Prisma.$SubAvatarsPayload<ExtArgs>
        fields: Prisma.SubAvatarsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubAvatarsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubAvatarsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubAvatarsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubAvatarsPayload>
          }
          findFirst: {
            args: Prisma.SubAvatarsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubAvatarsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubAvatarsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubAvatarsPayload>
          }
          findMany: {
            args: Prisma.SubAvatarsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubAvatarsPayload>[]
          }
          create: {
            args: Prisma.SubAvatarsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubAvatarsPayload>
          }
          createMany: {
            args: Prisma.SubAvatarsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.SubAvatarsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubAvatarsPayload>
          }
          update: {
            args: Prisma.SubAvatarsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubAvatarsPayload>
          }
          deleteMany: {
            args: Prisma.SubAvatarsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.SubAvatarsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.SubAvatarsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubAvatarsPayload>
          }
          aggregate: {
            args: Prisma.SubAvatarsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSubAvatars>
          }
          groupBy: {
            args: Prisma.SubAvatarsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<SubAvatarsGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubAvatarsCountArgs<ExtArgs>,
            result: $Utils.Optional<SubAvatarsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type TbChiNhanhCountOutputType
   */

  export type TbChiNhanhCountOutputType = {
    KhachSan: number
  }

  export type TbChiNhanhCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    KhachSan?: boolean | TbChiNhanhCountOutputTypeCountKhachSanArgs
  }

  // Custom InputTypes

  /**
   * TbChiNhanhCountOutputType without action
   */
  export type TbChiNhanhCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiNhanhCountOutputType
     */
    select?: TbChiNhanhCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbChiNhanhCountOutputType without action
   */
  export type TbChiNhanhCountOutputTypeCountKhachSanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbKhachSanWhereInput
  }



  /**
   * Count Type TbDatChoCountOutputType
   */

  export type TbDatChoCountOutputType = {
    ChiTietDichVuDatCho: number
  }

  export type TbDatChoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ChiTietDichVuDatCho?: boolean | TbDatChoCountOutputTypeCountChiTietDichVuDatChoArgs
  }

  // Custom InputTypes

  /**
   * TbDatChoCountOutputType without action
   */
  export type TbDatChoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDatChoCountOutputType
     */
    select?: TbDatChoCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbDatChoCountOutputType without action
   */
  export type TbDatChoCountOutputTypeCountChiTietDichVuDatChoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbChiTietDichVuDatChoWhereInput
  }



  /**
   * Count Type TbDichVuCountOutputType
   */

  export type TbDichVuCountOutputType = {
    ChiTietDichVuDatCho: number
    CacLinkAnhDichVu: number
  }

  export type TbDichVuCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ChiTietDichVuDatCho?: boolean | TbDichVuCountOutputTypeCountChiTietDichVuDatChoArgs
    CacLinkAnhDichVu?: boolean | TbDichVuCountOutputTypeCountCacLinkAnhDichVuArgs
  }

  // Custom InputTypes

  /**
   * TbDichVuCountOutputType without action
   */
  export type TbDichVuCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDichVuCountOutputType
     */
    select?: TbDichVuCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbDichVuCountOutputType without action
   */
  export type TbDichVuCountOutputTypeCountChiTietDichVuDatChoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbChiTietDichVuDatChoWhereInput
  }


  /**
   * TbDichVuCountOutputType without action
   */
  export type TbDichVuCountOutputTypeCountCacLinkAnhDichVuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbCacLinkAnhDichVuWhereInput
  }



  /**
   * Count Type TbNhomDichVuCountOutputType
   */

  export type TbNhomDichVuCountOutputType = {
    DichVu: number
  }

  export type TbNhomDichVuCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DichVu?: boolean | TbNhomDichVuCountOutputTypeCountDichVuArgs
  }

  // Custom InputTypes

  /**
   * TbNhomDichVuCountOutputType without action
   */
  export type TbNhomDichVuCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomDichVuCountOutputType
     */
    select?: TbNhomDichVuCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbNhomDichVuCountOutputType without action
   */
  export type TbNhomDichVuCountOutputTypeCountDichVuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbDichVuWhereInput
  }



  /**
   * Count Type TbHangHoaCountOutputType
   */

  export type TbHangHoaCountOutputType = {
    CacLinkAnhHangHoa: number
    ChiTietNoiDungNhap: number
  }

  export type TbHangHoaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CacLinkAnhHangHoa?: boolean | TbHangHoaCountOutputTypeCountCacLinkAnhHangHoaArgs
    ChiTietNoiDungNhap?: boolean | TbHangHoaCountOutputTypeCountChiTietNoiDungNhapArgs
  }

  // Custom InputTypes

  /**
   * TbHangHoaCountOutputType without action
   */
  export type TbHangHoaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHangHoaCountOutputType
     */
    select?: TbHangHoaCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbHangHoaCountOutputType without action
   */
  export type TbHangHoaCountOutputTypeCountCacLinkAnhHangHoaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbCacLinkAnhHangHoaWhereInput
  }


  /**
   * TbHangHoaCountOutputType without action
   */
  export type TbHangHoaCountOutputTypeCountChiTietNoiDungNhapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbChiTietNoiDungNhapWhereInput
  }



  /**
   * Count Type TbPhieuNhapCountOutputType
   */

  export type TbPhieuNhapCountOutputType = {
    ChiTietNoiDungNhap: number
  }

  export type TbPhieuNhapCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ChiTietNoiDungNhap?: boolean | TbPhieuNhapCountOutputTypeCountChiTietNoiDungNhapArgs
  }

  // Custom InputTypes

  /**
   * TbPhieuNhapCountOutputType without action
   */
  export type TbPhieuNhapCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhieuNhapCountOutputType
     */
    select?: TbPhieuNhapCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbPhieuNhapCountOutputType without action
   */
  export type TbPhieuNhapCountOutputTypeCountChiTietNoiDungNhapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbChiTietNoiDungNhapWhereInput
  }



  /**
   * Count Type TbNhomHangHoaCountOutputType
   */

  export type TbNhomHangHoaCountOutputType = {
    HangHoa: number
  }

  export type TbNhomHangHoaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    HangHoa?: boolean | TbNhomHangHoaCountOutputTypeCountHangHoaArgs
  }

  // Custom InputTypes

  /**
   * TbNhomHangHoaCountOutputType without action
   */
  export type TbNhomHangHoaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomHangHoaCountOutputType
     */
    select?: TbNhomHangHoaCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbNhomHangHoaCountOutputType without action
   */
  export type TbNhomHangHoaCountOutputTypeCountHangHoaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbHangHoaWhereInput
  }



  /**
   * Count Type TbHoaDonCountOutputType
   */

  export type TbHoaDonCountOutputType = {
    ChiTietDichVuDatCho: number
  }

  export type TbHoaDonCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ChiTietDichVuDatCho?: boolean | TbHoaDonCountOutputTypeCountChiTietDichVuDatChoArgs
  }

  // Custom InputTypes

  /**
   * TbHoaDonCountOutputType without action
   */
  export type TbHoaDonCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDonCountOutputType
     */
    select?: TbHoaDonCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbHoaDonCountOutputType without action
   */
  export type TbHoaDonCountOutputTypeCountChiTietDichVuDatChoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbChiTietDichVuDatChoWhereInput
  }



  /**
   * Count Type TbKhachHangCountOutputType
   */

  export type TbKhachHangCountOutputType = {
    DatCho: number
  }

  export type TbKhachHangCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DatCho?: boolean | TbKhachHangCountOutputTypeCountDatChoArgs
  }

  // Custom InputTypes

  /**
   * TbKhachHangCountOutputType without action
   */
  export type TbKhachHangCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachHangCountOutputType
     */
    select?: TbKhachHangCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbKhachHangCountOutputType without action
   */
  export type TbKhachHangCountOutputTypeCountDatChoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbDatChoWhereInput
  }



  /**
   * Count Type TbKhachSanCountOutputType
   */

  export type TbKhachSanCountOutputType = {
    TaiKhoanSub: number
    HoaDon: number
    PhieuNhap: number
    NhomKhuVucPhong: number
    NhomHangHoa: number
    NhomDichVu: number
  }

  export type TbKhachSanCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    TaiKhoanSub?: boolean | TbKhachSanCountOutputTypeCountTaiKhoanSubArgs
    HoaDon?: boolean | TbKhachSanCountOutputTypeCountHoaDonArgs
    PhieuNhap?: boolean | TbKhachSanCountOutputTypeCountPhieuNhapArgs
    NhomKhuVucPhong?: boolean | TbKhachSanCountOutputTypeCountNhomKhuVucPhongArgs
    NhomHangHoa?: boolean | TbKhachSanCountOutputTypeCountNhomHangHoaArgs
    NhomDichVu?: boolean | TbKhachSanCountOutputTypeCountNhomDichVuArgs
  }

  // Custom InputTypes

  /**
   * TbKhachSanCountOutputType without action
   */
  export type TbKhachSanCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachSanCountOutputType
     */
    select?: TbKhachSanCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbKhachSanCountOutputType without action
   */
  export type TbKhachSanCountOutputTypeCountTaiKhoanSubArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubUserWhereInput
  }


  /**
   * TbKhachSanCountOutputType without action
   */
  export type TbKhachSanCountOutputTypeCountHoaDonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbHoaDonWhereInput
  }


  /**
   * TbKhachSanCountOutputType without action
   */
  export type TbKhachSanCountOutputTypeCountPhieuNhapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbPhieuNhapWhereInput
  }


  /**
   * TbKhachSanCountOutputType without action
   */
  export type TbKhachSanCountOutputTypeCountNhomKhuVucPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbNhomKhuVucPhongWhereInput
  }


  /**
   * TbKhachSanCountOutputType without action
   */
  export type TbKhachSanCountOutputTypeCountNhomHangHoaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbNhomHangHoaWhereInput
  }


  /**
   * TbKhachSanCountOutputType without action
   */
  export type TbKhachSanCountOutputTypeCountNhomDichVuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbNhomDichVuWhereInput
  }



  /**
   * Count Type TbLoaiPhongCountOutputType
   */

  export type TbLoaiPhongCountOutputType = {
    CacLinkAnhLoaiPhong: number
    Phong: number
  }

  export type TbLoaiPhongCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CacLinkAnhLoaiPhong?: boolean | TbLoaiPhongCountOutputTypeCountCacLinkAnhLoaiPhongArgs
    Phong?: boolean | TbLoaiPhongCountOutputTypeCountPhongArgs
  }

  // Custom InputTypes

  /**
   * TbLoaiPhongCountOutputType without action
   */
  export type TbLoaiPhongCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbLoaiPhongCountOutputType
     */
    select?: TbLoaiPhongCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbLoaiPhongCountOutputType without action
   */
  export type TbLoaiPhongCountOutputTypeCountCacLinkAnhLoaiPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbCacLinkAnhLoaiPhongWhereInput
  }


  /**
   * TbLoaiPhongCountOutputType without action
   */
  export type TbLoaiPhongCountOutputTypeCountPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbPhongWhereInput
  }



  /**
   * Count Type TbNhaCungCapCountOutputType
   */

  export type TbNhaCungCapCountOutputType = {
    PhieuNhap: number
  }

  export type TbNhaCungCapCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    PhieuNhap?: boolean | TbNhaCungCapCountOutputTypeCountPhieuNhapArgs
  }

  // Custom InputTypes

  /**
   * TbNhaCungCapCountOutputType without action
   */
  export type TbNhaCungCapCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhaCungCapCountOutputType
     */
    select?: TbNhaCungCapCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbNhaCungCapCountOutputType without action
   */
  export type TbNhaCungCapCountOutputTypeCountPhieuNhapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbPhieuNhapWhereInput
  }



  /**
   * Count Type TbPhongCountOutputType
   */

  export type TbPhongCountOutputType = {
    DatCho: number
    CacLinkAnhPhong: number
  }

  export type TbPhongCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DatCho?: boolean | TbPhongCountOutputTypeCountDatChoArgs
    CacLinkAnhPhong?: boolean | TbPhongCountOutputTypeCountCacLinkAnhPhongArgs
  }

  // Custom InputTypes

  /**
   * TbPhongCountOutputType without action
   */
  export type TbPhongCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhongCountOutputType
     */
    select?: TbPhongCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbPhongCountOutputType without action
   */
  export type TbPhongCountOutputTypeCountDatChoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbDatChoWhereInput
  }


  /**
   * TbPhongCountOutputType without action
   */
  export type TbPhongCountOutputTypeCountCacLinkAnhPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbCacLinkAnhPhongWhereInput
  }



  /**
   * Count Type TbNhomKhuVucPhongCountOutputType
   */

  export type TbNhomKhuVucPhongCountOutputType = {
    Phong: number
  }

  export type TbNhomKhuVucPhongCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Phong?: boolean | TbNhomKhuVucPhongCountOutputTypeCountPhongArgs
  }

  // Custom InputTypes

  /**
   * TbNhomKhuVucPhongCountOutputType without action
   */
  export type TbNhomKhuVucPhongCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomKhuVucPhongCountOutputType
     */
    select?: TbNhomKhuVucPhongCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbNhomKhuVucPhongCountOutputType without action
   */
  export type TbNhomKhuVucPhongCountOutputTypeCountPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbPhongWhereInput
  }



  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    ChiNhanh: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ChiNhanh?: boolean | UserCountOutputTypeCountChiNhanhArgs
  }

  // Custom InputTypes

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChiNhanhArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbChiNhanhWhereInput
  }



  /**
   * Count Type SubUserCountOutputType
   */

  export type SubUserCountOutputType = {
    HoaDon: number
  }

  export type SubUserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    HoaDon?: boolean | SubUserCountOutputTypeCountHoaDonArgs
  }

  // Custom InputTypes

  /**
   * SubUserCountOutputType without action
   */
  export type SubUserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubUserCountOutputType
     */
    select?: SubUserCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * SubUserCountOutputType without action
   */
  export type SubUserCountOutputTypeCountHoaDonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbHoaDonWhereInput
  }



  /**
   * Models
   */

  /**
   * Model TbChiNhanh
   */

  export type AggregateTbChiNhanh = {
    _count: TbChiNhanhCountAggregateOutputType | null
    _min: TbChiNhanhMinAggregateOutputType | null
    _max: TbChiNhanhMaxAggregateOutputType | null
  }

  export type TbChiNhanhMinAggregateOutputType = {
    id: string | null
    MaAdmin: string | null
    TenChiNhanh: string | null
    SDTChiNhanh: string | null
    DiaChiChiNhanh: string | null
  }

  export type TbChiNhanhMaxAggregateOutputType = {
    id: string | null
    MaAdmin: string | null
    TenChiNhanh: string | null
    SDTChiNhanh: string | null
    DiaChiChiNhanh: string | null
  }

  export type TbChiNhanhCountAggregateOutputType = {
    id: number
    MaAdmin: number
    TenChiNhanh: number
    SDTChiNhanh: number
    DiaChiChiNhanh: number
    _all: number
  }


  export type TbChiNhanhMinAggregateInputType = {
    id?: true
    MaAdmin?: true
    TenChiNhanh?: true
    SDTChiNhanh?: true
    DiaChiChiNhanh?: true
  }

  export type TbChiNhanhMaxAggregateInputType = {
    id?: true
    MaAdmin?: true
    TenChiNhanh?: true
    SDTChiNhanh?: true
    DiaChiChiNhanh?: true
  }

  export type TbChiNhanhCountAggregateInputType = {
    id?: true
    MaAdmin?: true
    TenChiNhanh?: true
    SDTChiNhanh?: true
    DiaChiChiNhanh?: true
    _all?: true
  }

  export type TbChiNhanhAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbChiNhanh to aggregate.
     */
    where?: TbChiNhanhWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbChiNhanhs to fetch.
     */
    orderBy?: TbChiNhanhOrderByWithRelationInput | TbChiNhanhOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbChiNhanhWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbChiNhanhs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbChiNhanhs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbChiNhanhs
    **/
    _count?: true | TbChiNhanhCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbChiNhanhMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbChiNhanhMaxAggregateInputType
  }

  export type GetTbChiNhanhAggregateType<T extends TbChiNhanhAggregateArgs> = {
        [P in keyof T & keyof AggregateTbChiNhanh]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbChiNhanh[P]>
      : GetScalarType<T[P], AggregateTbChiNhanh[P]>
  }




  export type TbChiNhanhGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbChiNhanhWhereInput
    orderBy?: TbChiNhanhOrderByWithAggregationInput | TbChiNhanhOrderByWithAggregationInput[]
    by: TbChiNhanhScalarFieldEnum[] | TbChiNhanhScalarFieldEnum
    having?: TbChiNhanhScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbChiNhanhCountAggregateInputType | true
    _min?: TbChiNhanhMinAggregateInputType
    _max?: TbChiNhanhMaxAggregateInputType
  }

  export type TbChiNhanhGroupByOutputType = {
    id: string
    MaAdmin: string
    TenChiNhanh: string
    SDTChiNhanh: string | null
    DiaChiChiNhanh: string | null
    _count: TbChiNhanhCountAggregateOutputType | null
    _min: TbChiNhanhMinAggregateOutputType | null
    _max: TbChiNhanhMaxAggregateOutputType | null
  }

  type GetTbChiNhanhGroupByPayload<T extends TbChiNhanhGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbChiNhanhGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbChiNhanhGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbChiNhanhGroupByOutputType[P]>
            : GetScalarType<T[P], TbChiNhanhGroupByOutputType[P]>
        }
      >
    >


  export type TbChiNhanhSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaAdmin?: boolean
    TenChiNhanh?: boolean
    SDTChiNhanh?: boolean
    DiaChiChiNhanh?: boolean
    KhachSan?: boolean | TbChiNhanh$KhachSanArgs<ExtArgs>
    TaiKhoanAdmin?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | TbChiNhanhCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbChiNhanh"]>

  export type TbChiNhanhSelectScalar = {
    id?: boolean
    MaAdmin?: boolean
    TenChiNhanh?: boolean
    SDTChiNhanh?: boolean
    DiaChiChiNhanh?: boolean
  }

  export type TbChiNhanhInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    KhachSan?: boolean | TbChiNhanh$KhachSanArgs<ExtArgs>
    TaiKhoanAdmin?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | TbChiNhanhCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbChiNhanhPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbChiNhanh"
    objects: {
      KhachSan: Prisma.$TbKhachSanPayload<ExtArgs>[]
      TaiKhoanAdmin: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaAdmin: string
      TenChiNhanh: string
      SDTChiNhanh: string | null
      DiaChiChiNhanh: string | null
    }, ExtArgs["result"]["tbChiNhanh"]>
    composites: {}
  }


  type TbChiNhanhGetPayload<S extends boolean | null | undefined | TbChiNhanhDefaultArgs> = $Result.GetResult<Prisma.$TbChiNhanhPayload, S>

  type TbChiNhanhCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbChiNhanhFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbChiNhanhCountAggregateInputType | true
    }

  export interface TbChiNhanhDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbChiNhanh'], meta: { name: 'TbChiNhanh' } }
    /**
     * Find zero or one TbChiNhanh that matches the filter.
     * @param {TbChiNhanhFindUniqueArgs} args - Arguments to find a TbChiNhanh
     * @example
     * // Get one TbChiNhanh
     * const tbChiNhanh = await prisma.tbChiNhanh.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbChiNhanhFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiNhanhFindUniqueArgs<ExtArgs>>
    ): Prisma__TbChiNhanhClient<$Result.GetResult<Prisma.$TbChiNhanhPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbChiNhanh that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbChiNhanhFindUniqueOrThrowArgs} args - Arguments to find a TbChiNhanh
     * @example
     * // Get one TbChiNhanh
     * const tbChiNhanh = await prisma.tbChiNhanh.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbChiNhanhFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiNhanhFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbChiNhanhClient<$Result.GetResult<Prisma.$TbChiNhanhPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbChiNhanh that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiNhanhFindFirstArgs} args - Arguments to find a TbChiNhanh
     * @example
     * // Get one TbChiNhanh
     * const tbChiNhanh = await prisma.tbChiNhanh.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbChiNhanhFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiNhanhFindFirstArgs<ExtArgs>>
    ): Prisma__TbChiNhanhClient<$Result.GetResult<Prisma.$TbChiNhanhPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbChiNhanh that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiNhanhFindFirstOrThrowArgs} args - Arguments to find a TbChiNhanh
     * @example
     * // Get one TbChiNhanh
     * const tbChiNhanh = await prisma.tbChiNhanh.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbChiNhanhFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiNhanhFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbChiNhanhClient<$Result.GetResult<Prisma.$TbChiNhanhPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbChiNhanhs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiNhanhFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbChiNhanhs
     * const tbChiNhanhs = await prisma.tbChiNhanh.findMany()
     * 
     * // Get first 10 TbChiNhanhs
     * const tbChiNhanhs = await prisma.tbChiNhanh.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbChiNhanhWithIdOnly = await prisma.tbChiNhanh.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbChiNhanhFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiNhanhFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbChiNhanhPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbChiNhanh.
     * @param {TbChiNhanhCreateArgs} args - Arguments to create a TbChiNhanh.
     * @example
     * // Create one TbChiNhanh
     * const TbChiNhanh = await prisma.tbChiNhanh.create({
     *   data: {
     *     // ... data to create a TbChiNhanh
     *   }
     * })
     * 
    **/
    create<T extends TbChiNhanhCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiNhanhCreateArgs<ExtArgs>>
    ): Prisma__TbChiNhanhClient<$Result.GetResult<Prisma.$TbChiNhanhPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbChiNhanhs.
     *     @param {TbChiNhanhCreateManyArgs} args - Arguments to create many TbChiNhanhs.
     *     @example
     *     // Create many TbChiNhanhs
     *     const tbChiNhanh = await prisma.tbChiNhanh.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbChiNhanhCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiNhanhCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbChiNhanh.
     * @param {TbChiNhanhDeleteArgs} args - Arguments to delete one TbChiNhanh.
     * @example
     * // Delete one TbChiNhanh
     * const TbChiNhanh = await prisma.tbChiNhanh.delete({
     *   where: {
     *     // ... filter to delete one TbChiNhanh
     *   }
     * })
     * 
    **/
    delete<T extends TbChiNhanhDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiNhanhDeleteArgs<ExtArgs>>
    ): Prisma__TbChiNhanhClient<$Result.GetResult<Prisma.$TbChiNhanhPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbChiNhanh.
     * @param {TbChiNhanhUpdateArgs} args - Arguments to update one TbChiNhanh.
     * @example
     * // Update one TbChiNhanh
     * const tbChiNhanh = await prisma.tbChiNhanh.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbChiNhanhUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiNhanhUpdateArgs<ExtArgs>>
    ): Prisma__TbChiNhanhClient<$Result.GetResult<Prisma.$TbChiNhanhPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbChiNhanhs.
     * @param {TbChiNhanhDeleteManyArgs} args - Arguments to filter TbChiNhanhs to delete.
     * @example
     * // Delete a few TbChiNhanhs
     * const { count } = await prisma.tbChiNhanh.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbChiNhanhDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiNhanhDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbChiNhanhs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiNhanhUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbChiNhanhs
     * const tbChiNhanh = await prisma.tbChiNhanh.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbChiNhanhUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiNhanhUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbChiNhanh.
     * @param {TbChiNhanhUpsertArgs} args - Arguments to update or create a TbChiNhanh.
     * @example
     * // Update or create a TbChiNhanh
     * const tbChiNhanh = await prisma.tbChiNhanh.upsert({
     *   create: {
     *     // ... data to create a TbChiNhanh
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbChiNhanh we want to update
     *   }
     * })
    **/
    upsert<T extends TbChiNhanhUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiNhanhUpsertArgs<ExtArgs>>
    ): Prisma__TbChiNhanhClient<$Result.GetResult<Prisma.$TbChiNhanhPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbChiNhanhs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiNhanhCountArgs} args - Arguments to filter TbChiNhanhs to count.
     * @example
     * // Count the number of TbChiNhanhs
     * const count = await prisma.tbChiNhanh.count({
     *   where: {
     *     // ... the filter for the TbChiNhanhs we want to count
     *   }
     * })
    **/
    count<T extends TbChiNhanhCountArgs>(
      args?: Subset<T, TbChiNhanhCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbChiNhanhCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbChiNhanh.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiNhanhAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbChiNhanhAggregateArgs>(args: Subset<T, TbChiNhanhAggregateArgs>): Prisma.PrismaPromise<GetTbChiNhanhAggregateType<T>>

    /**
     * Group by TbChiNhanh.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiNhanhGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbChiNhanhGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbChiNhanhGroupByArgs['orderBy'] }
        : { orderBy?: TbChiNhanhGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbChiNhanhGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbChiNhanhGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbChiNhanh model
   */
  readonly fields: TbChiNhanhFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbChiNhanh.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbChiNhanhClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    KhachSan<T extends TbChiNhanh$KhachSanArgs<ExtArgs> = {}>(args?: Subset<T, TbChiNhanh$KhachSanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'findMany'> | Null>;

    TaiKhoanAdmin<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbChiNhanh model
   */ 
  interface TbChiNhanhFieldRefs {
    readonly id: FieldRef<"TbChiNhanh", 'String'>
    readonly MaAdmin: FieldRef<"TbChiNhanh", 'String'>
    readonly TenChiNhanh: FieldRef<"TbChiNhanh", 'String'>
    readonly SDTChiNhanh: FieldRef<"TbChiNhanh", 'String'>
    readonly DiaChiChiNhanh: FieldRef<"TbChiNhanh", 'String'>
  }
    

  // Custom InputTypes

  /**
   * TbChiNhanh findUnique
   */
  export type TbChiNhanhFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiNhanh
     */
    select?: TbChiNhanhSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiNhanhInclude<ExtArgs> | null
    /**
     * Filter, which TbChiNhanh to fetch.
     */
    where: TbChiNhanhWhereUniqueInput
  }


  /**
   * TbChiNhanh findUniqueOrThrow
   */
  export type TbChiNhanhFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiNhanh
     */
    select?: TbChiNhanhSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiNhanhInclude<ExtArgs> | null
    /**
     * Filter, which TbChiNhanh to fetch.
     */
    where: TbChiNhanhWhereUniqueInput
  }


  /**
   * TbChiNhanh findFirst
   */
  export type TbChiNhanhFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiNhanh
     */
    select?: TbChiNhanhSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiNhanhInclude<ExtArgs> | null
    /**
     * Filter, which TbChiNhanh to fetch.
     */
    where?: TbChiNhanhWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbChiNhanhs to fetch.
     */
    orderBy?: TbChiNhanhOrderByWithRelationInput | TbChiNhanhOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbChiNhanhs.
     */
    cursor?: TbChiNhanhWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbChiNhanhs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbChiNhanhs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbChiNhanhs.
     */
    distinct?: TbChiNhanhScalarFieldEnum | TbChiNhanhScalarFieldEnum[]
  }


  /**
   * TbChiNhanh findFirstOrThrow
   */
  export type TbChiNhanhFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiNhanh
     */
    select?: TbChiNhanhSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiNhanhInclude<ExtArgs> | null
    /**
     * Filter, which TbChiNhanh to fetch.
     */
    where?: TbChiNhanhWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbChiNhanhs to fetch.
     */
    orderBy?: TbChiNhanhOrderByWithRelationInput | TbChiNhanhOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbChiNhanhs.
     */
    cursor?: TbChiNhanhWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbChiNhanhs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbChiNhanhs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbChiNhanhs.
     */
    distinct?: TbChiNhanhScalarFieldEnum | TbChiNhanhScalarFieldEnum[]
  }


  /**
   * TbChiNhanh findMany
   */
  export type TbChiNhanhFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiNhanh
     */
    select?: TbChiNhanhSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiNhanhInclude<ExtArgs> | null
    /**
     * Filter, which TbChiNhanhs to fetch.
     */
    where?: TbChiNhanhWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbChiNhanhs to fetch.
     */
    orderBy?: TbChiNhanhOrderByWithRelationInput | TbChiNhanhOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbChiNhanhs.
     */
    cursor?: TbChiNhanhWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbChiNhanhs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbChiNhanhs.
     */
    skip?: number
    distinct?: TbChiNhanhScalarFieldEnum | TbChiNhanhScalarFieldEnum[]
  }


  /**
   * TbChiNhanh create
   */
  export type TbChiNhanhCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiNhanh
     */
    select?: TbChiNhanhSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiNhanhInclude<ExtArgs> | null
    /**
     * The data needed to create a TbChiNhanh.
     */
    data: XOR<TbChiNhanhCreateInput, TbChiNhanhUncheckedCreateInput>
  }


  /**
   * TbChiNhanh createMany
   */
  export type TbChiNhanhCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbChiNhanhs.
     */
    data: TbChiNhanhCreateManyInput | TbChiNhanhCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbChiNhanh update
   */
  export type TbChiNhanhUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiNhanh
     */
    select?: TbChiNhanhSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiNhanhInclude<ExtArgs> | null
    /**
     * The data needed to update a TbChiNhanh.
     */
    data: XOR<TbChiNhanhUpdateInput, TbChiNhanhUncheckedUpdateInput>
    /**
     * Choose, which TbChiNhanh to update.
     */
    where: TbChiNhanhWhereUniqueInput
  }


  /**
   * TbChiNhanh updateMany
   */
  export type TbChiNhanhUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbChiNhanhs.
     */
    data: XOR<TbChiNhanhUpdateManyMutationInput, TbChiNhanhUncheckedUpdateManyInput>
    /**
     * Filter which TbChiNhanhs to update
     */
    where?: TbChiNhanhWhereInput
  }


  /**
   * TbChiNhanh upsert
   */
  export type TbChiNhanhUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiNhanh
     */
    select?: TbChiNhanhSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiNhanhInclude<ExtArgs> | null
    /**
     * The filter to search for the TbChiNhanh to update in case it exists.
     */
    where: TbChiNhanhWhereUniqueInput
    /**
     * In case the TbChiNhanh found by the `where` argument doesn't exist, create a new TbChiNhanh with this data.
     */
    create: XOR<TbChiNhanhCreateInput, TbChiNhanhUncheckedCreateInput>
    /**
     * In case the TbChiNhanh was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbChiNhanhUpdateInput, TbChiNhanhUncheckedUpdateInput>
  }


  /**
   * TbChiNhanh delete
   */
  export type TbChiNhanhDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiNhanh
     */
    select?: TbChiNhanhSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiNhanhInclude<ExtArgs> | null
    /**
     * Filter which TbChiNhanh to delete.
     */
    where: TbChiNhanhWhereUniqueInput
  }


  /**
   * TbChiNhanh deleteMany
   */
  export type TbChiNhanhDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbChiNhanhs to delete
     */
    where?: TbChiNhanhWhereInput
  }


  /**
   * TbChiNhanh.KhachSan
   */
  export type TbChiNhanh$KhachSanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachSan
     */
    select?: TbKhachSanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachSanInclude<ExtArgs> | null
    where?: TbKhachSanWhereInput
    orderBy?: TbKhachSanOrderByWithRelationInput | TbKhachSanOrderByWithRelationInput[]
    cursor?: TbKhachSanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbKhachSanScalarFieldEnum | TbKhachSanScalarFieldEnum[]
  }


  /**
   * TbChiNhanh without action
   */
  export type TbChiNhanhDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiNhanh
     */
    select?: TbChiNhanhSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiNhanhInclude<ExtArgs> | null
  }



  /**
   * Model TbChiTietDichVuDatCho
   */

  export type AggregateTbChiTietDichVuDatCho = {
    _count: TbChiTietDichVuDatChoCountAggregateOutputType | null
    _min: TbChiTietDichVuDatChoMinAggregateOutputType | null
    _max: TbChiTietDichVuDatChoMaxAggregateOutputType | null
  }

  export type TbChiTietDichVuDatChoMinAggregateOutputType = {
    id: string | null
    MaDatCho: string | null
    MaDichVu: string | null
    MaHoaDon: string | null
    MoTa: string | null
    createAt: Date | null
  }

  export type TbChiTietDichVuDatChoMaxAggregateOutputType = {
    id: string | null
    MaDatCho: string | null
    MaDichVu: string | null
    MaHoaDon: string | null
    MoTa: string | null
    createAt: Date | null
  }

  export type TbChiTietDichVuDatChoCountAggregateOutputType = {
    id: number
    MaDatCho: number
    MaDichVu: number
    MaHoaDon: number
    MoTa: number
    createAt: number
    _all: number
  }


  export type TbChiTietDichVuDatChoMinAggregateInputType = {
    id?: true
    MaDatCho?: true
    MaDichVu?: true
    MaHoaDon?: true
    MoTa?: true
    createAt?: true
  }

  export type TbChiTietDichVuDatChoMaxAggregateInputType = {
    id?: true
    MaDatCho?: true
    MaDichVu?: true
    MaHoaDon?: true
    MoTa?: true
    createAt?: true
  }

  export type TbChiTietDichVuDatChoCountAggregateInputType = {
    id?: true
    MaDatCho?: true
    MaDichVu?: true
    MaHoaDon?: true
    MoTa?: true
    createAt?: true
    _all?: true
  }

  export type TbChiTietDichVuDatChoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbChiTietDichVuDatCho to aggregate.
     */
    where?: TbChiTietDichVuDatChoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbChiTietDichVuDatChos to fetch.
     */
    orderBy?: TbChiTietDichVuDatChoOrderByWithRelationInput | TbChiTietDichVuDatChoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbChiTietDichVuDatChoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbChiTietDichVuDatChos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbChiTietDichVuDatChos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbChiTietDichVuDatChos
    **/
    _count?: true | TbChiTietDichVuDatChoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbChiTietDichVuDatChoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbChiTietDichVuDatChoMaxAggregateInputType
  }

  export type GetTbChiTietDichVuDatChoAggregateType<T extends TbChiTietDichVuDatChoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbChiTietDichVuDatCho]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbChiTietDichVuDatCho[P]>
      : GetScalarType<T[P], AggregateTbChiTietDichVuDatCho[P]>
  }




  export type TbChiTietDichVuDatChoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbChiTietDichVuDatChoWhereInput
    orderBy?: TbChiTietDichVuDatChoOrderByWithAggregationInput | TbChiTietDichVuDatChoOrderByWithAggregationInput[]
    by: TbChiTietDichVuDatChoScalarFieldEnum[] | TbChiTietDichVuDatChoScalarFieldEnum
    having?: TbChiTietDichVuDatChoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbChiTietDichVuDatChoCountAggregateInputType | true
    _min?: TbChiTietDichVuDatChoMinAggregateInputType
    _max?: TbChiTietDichVuDatChoMaxAggregateInputType
  }

  export type TbChiTietDichVuDatChoGroupByOutputType = {
    id: string
    MaDatCho: string
    MaDichVu: string | null
    MaHoaDon: string | null
    MoTa: string | null
    createAt: Date
    _count: TbChiTietDichVuDatChoCountAggregateOutputType | null
    _min: TbChiTietDichVuDatChoMinAggregateOutputType | null
    _max: TbChiTietDichVuDatChoMaxAggregateOutputType | null
  }

  type GetTbChiTietDichVuDatChoGroupByPayload<T extends TbChiTietDichVuDatChoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbChiTietDichVuDatChoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbChiTietDichVuDatChoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbChiTietDichVuDatChoGroupByOutputType[P]>
            : GetScalarType<T[P], TbChiTietDichVuDatChoGroupByOutputType[P]>
        }
      >
    >


  export type TbChiTietDichVuDatChoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaDatCho?: boolean
    MaDichVu?: boolean
    MaHoaDon?: boolean
    MoTa?: boolean
    createAt?: boolean
    DatCho?: boolean | TbDatChoDefaultArgs<ExtArgs>
    DichVu?: boolean | TbChiTietDichVuDatCho$DichVuArgs<ExtArgs>
    HoaDon?: boolean | TbChiTietDichVuDatCho$HoaDonArgs<ExtArgs>
  }, ExtArgs["result"]["tbChiTietDichVuDatCho"]>

  export type TbChiTietDichVuDatChoSelectScalar = {
    id?: boolean
    MaDatCho?: boolean
    MaDichVu?: boolean
    MaHoaDon?: boolean
    MoTa?: boolean
    createAt?: boolean
  }

  export type TbChiTietDichVuDatChoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DatCho?: boolean | TbDatChoDefaultArgs<ExtArgs>
    DichVu?: boolean | TbChiTietDichVuDatCho$DichVuArgs<ExtArgs>
    HoaDon?: boolean | TbChiTietDichVuDatCho$HoaDonArgs<ExtArgs>
  }


  export type $TbChiTietDichVuDatChoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbChiTietDichVuDatCho"
    objects: {
      DatCho: Prisma.$TbDatChoPayload<ExtArgs>
      DichVu: Prisma.$TbDichVuPayload<ExtArgs> | null
      HoaDon: Prisma.$TbHoaDonPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaDatCho: string
      MaDichVu: string | null
      MaHoaDon: string | null
      MoTa: string | null
      createAt: Date
    }, ExtArgs["result"]["tbChiTietDichVuDatCho"]>
    composites: {}
  }


  type TbChiTietDichVuDatChoGetPayload<S extends boolean | null | undefined | TbChiTietDichVuDatChoDefaultArgs> = $Result.GetResult<Prisma.$TbChiTietDichVuDatChoPayload, S>

  type TbChiTietDichVuDatChoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbChiTietDichVuDatChoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbChiTietDichVuDatChoCountAggregateInputType | true
    }

  export interface TbChiTietDichVuDatChoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbChiTietDichVuDatCho'], meta: { name: 'TbChiTietDichVuDatCho' } }
    /**
     * Find zero or one TbChiTietDichVuDatCho that matches the filter.
     * @param {TbChiTietDichVuDatChoFindUniqueArgs} args - Arguments to find a TbChiTietDichVuDatCho
     * @example
     * // Get one TbChiTietDichVuDatCho
     * const tbChiTietDichVuDatCho = await prisma.tbChiTietDichVuDatCho.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbChiTietDichVuDatChoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiTietDichVuDatChoFindUniqueArgs<ExtArgs>>
    ): Prisma__TbChiTietDichVuDatChoClient<$Result.GetResult<Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbChiTietDichVuDatCho that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbChiTietDichVuDatChoFindUniqueOrThrowArgs} args - Arguments to find a TbChiTietDichVuDatCho
     * @example
     * // Get one TbChiTietDichVuDatCho
     * const tbChiTietDichVuDatCho = await prisma.tbChiTietDichVuDatCho.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbChiTietDichVuDatChoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiTietDichVuDatChoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbChiTietDichVuDatChoClient<$Result.GetResult<Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbChiTietDichVuDatCho that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietDichVuDatChoFindFirstArgs} args - Arguments to find a TbChiTietDichVuDatCho
     * @example
     * // Get one TbChiTietDichVuDatCho
     * const tbChiTietDichVuDatCho = await prisma.tbChiTietDichVuDatCho.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbChiTietDichVuDatChoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiTietDichVuDatChoFindFirstArgs<ExtArgs>>
    ): Prisma__TbChiTietDichVuDatChoClient<$Result.GetResult<Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbChiTietDichVuDatCho that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietDichVuDatChoFindFirstOrThrowArgs} args - Arguments to find a TbChiTietDichVuDatCho
     * @example
     * // Get one TbChiTietDichVuDatCho
     * const tbChiTietDichVuDatCho = await prisma.tbChiTietDichVuDatCho.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbChiTietDichVuDatChoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiTietDichVuDatChoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbChiTietDichVuDatChoClient<$Result.GetResult<Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbChiTietDichVuDatChos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietDichVuDatChoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbChiTietDichVuDatChos
     * const tbChiTietDichVuDatChos = await prisma.tbChiTietDichVuDatCho.findMany()
     * 
     * // Get first 10 TbChiTietDichVuDatChos
     * const tbChiTietDichVuDatChos = await prisma.tbChiTietDichVuDatCho.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbChiTietDichVuDatChoWithIdOnly = await prisma.tbChiTietDichVuDatCho.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbChiTietDichVuDatChoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiTietDichVuDatChoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbChiTietDichVuDatCho.
     * @param {TbChiTietDichVuDatChoCreateArgs} args - Arguments to create a TbChiTietDichVuDatCho.
     * @example
     * // Create one TbChiTietDichVuDatCho
     * const TbChiTietDichVuDatCho = await prisma.tbChiTietDichVuDatCho.create({
     *   data: {
     *     // ... data to create a TbChiTietDichVuDatCho
     *   }
     * })
     * 
    **/
    create<T extends TbChiTietDichVuDatChoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiTietDichVuDatChoCreateArgs<ExtArgs>>
    ): Prisma__TbChiTietDichVuDatChoClient<$Result.GetResult<Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbChiTietDichVuDatChos.
     *     @param {TbChiTietDichVuDatChoCreateManyArgs} args - Arguments to create many TbChiTietDichVuDatChos.
     *     @example
     *     // Create many TbChiTietDichVuDatChos
     *     const tbChiTietDichVuDatCho = await prisma.tbChiTietDichVuDatCho.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbChiTietDichVuDatChoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiTietDichVuDatChoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbChiTietDichVuDatCho.
     * @param {TbChiTietDichVuDatChoDeleteArgs} args - Arguments to delete one TbChiTietDichVuDatCho.
     * @example
     * // Delete one TbChiTietDichVuDatCho
     * const TbChiTietDichVuDatCho = await prisma.tbChiTietDichVuDatCho.delete({
     *   where: {
     *     // ... filter to delete one TbChiTietDichVuDatCho
     *   }
     * })
     * 
    **/
    delete<T extends TbChiTietDichVuDatChoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiTietDichVuDatChoDeleteArgs<ExtArgs>>
    ): Prisma__TbChiTietDichVuDatChoClient<$Result.GetResult<Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbChiTietDichVuDatCho.
     * @param {TbChiTietDichVuDatChoUpdateArgs} args - Arguments to update one TbChiTietDichVuDatCho.
     * @example
     * // Update one TbChiTietDichVuDatCho
     * const tbChiTietDichVuDatCho = await prisma.tbChiTietDichVuDatCho.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbChiTietDichVuDatChoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiTietDichVuDatChoUpdateArgs<ExtArgs>>
    ): Prisma__TbChiTietDichVuDatChoClient<$Result.GetResult<Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbChiTietDichVuDatChos.
     * @param {TbChiTietDichVuDatChoDeleteManyArgs} args - Arguments to filter TbChiTietDichVuDatChos to delete.
     * @example
     * // Delete a few TbChiTietDichVuDatChos
     * const { count } = await prisma.tbChiTietDichVuDatCho.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbChiTietDichVuDatChoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiTietDichVuDatChoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbChiTietDichVuDatChos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietDichVuDatChoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbChiTietDichVuDatChos
     * const tbChiTietDichVuDatCho = await prisma.tbChiTietDichVuDatCho.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbChiTietDichVuDatChoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiTietDichVuDatChoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbChiTietDichVuDatCho.
     * @param {TbChiTietDichVuDatChoUpsertArgs} args - Arguments to update or create a TbChiTietDichVuDatCho.
     * @example
     * // Update or create a TbChiTietDichVuDatCho
     * const tbChiTietDichVuDatCho = await prisma.tbChiTietDichVuDatCho.upsert({
     *   create: {
     *     // ... data to create a TbChiTietDichVuDatCho
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbChiTietDichVuDatCho we want to update
     *   }
     * })
    **/
    upsert<T extends TbChiTietDichVuDatChoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiTietDichVuDatChoUpsertArgs<ExtArgs>>
    ): Prisma__TbChiTietDichVuDatChoClient<$Result.GetResult<Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbChiTietDichVuDatChos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietDichVuDatChoCountArgs} args - Arguments to filter TbChiTietDichVuDatChos to count.
     * @example
     * // Count the number of TbChiTietDichVuDatChos
     * const count = await prisma.tbChiTietDichVuDatCho.count({
     *   where: {
     *     // ... the filter for the TbChiTietDichVuDatChos we want to count
     *   }
     * })
    **/
    count<T extends TbChiTietDichVuDatChoCountArgs>(
      args?: Subset<T, TbChiTietDichVuDatChoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbChiTietDichVuDatChoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbChiTietDichVuDatCho.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietDichVuDatChoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbChiTietDichVuDatChoAggregateArgs>(args: Subset<T, TbChiTietDichVuDatChoAggregateArgs>): Prisma.PrismaPromise<GetTbChiTietDichVuDatChoAggregateType<T>>

    /**
     * Group by TbChiTietDichVuDatCho.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietDichVuDatChoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbChiTietDichVuDatChoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbChiTietDichVuDatChoGroupByArgs['orderBy'] }
        : { orderBy?: TbChiTietDichVuDatChoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbChiTietDichVuDatChoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbChiTietDichVuDatChoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbChiTietDichVuDatCho model
   */
  readonly fields: TbChiTietDichVuDatChoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbChiTietDichVuDatCho.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbChiTietDichVuDatChoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    DatCho<T extends TbDatChoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbDatChoDefaultArgs<ExtArgs>>): Prisma__TbDatChoClient<$Result.GetResult<Prisma.$TbDatChoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    DichVu<T extends TbChiTietDichVuDatCho$DichVuArgs<ExtArgs> = {}>(args?: Subset<T, TbChiTietDichVuDatCho$DichVuArgs<ExtArgs>>): Prisma__TbDichVuClient<$Result.GetResult<Prisma.$TbDichVuPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    HoaDon<T extends TbChiTietDichVuDatCho$HoaDonArgs<ExtArgs> = {}>(args?: Subset<T, TbChiTietDichVuDatCho$HoaDonArgs<ExtArgs>>): Prisma__TbHoaDonClient<$Result.GetResult<Prisma.$TbHoaDonPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbChiTietDichVuDatCho model
   */ 
  interface TbChiTietDichVuDatChoFieldRefs {
    readonly id: FieldRef<"TbChiTietDichVuDatCho", 'String'>
    readonly MaDatCho: FieldRef<"TbChiTietDichVuDatCho", 'String'>
    readonly MaDichVu: FieldRef<"TbChiTietDichVuDatCho", 'String'>
    readonly MaHoaDon: FieldRef<"TbChiTietDichVuDatCho", 'String'>
    readonly MoTa: FieldRef<"TbChiTietDichVuDatCho", 'String'>
    readonly createAt: FieldRef<"TbChiTietDichVuDatCho", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * TbChiTietDichVuDatCho findUnique
   */
  export type TbChiTietDichVuDatChoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietDichVuDatCho
     */
    select?: TbChiTietDichVuDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietDichVuDatChoInclude<ExtArgs> | null
    /**
     * Filter, which TbChiTietDichVuDatCho to fetch.
     */
    where: TbChiTietDichVuDatChoWhereUniqueInput
  }


  /**
   * TbChiTietDichVuDatCho findUniqueOrThrow
   */
  export type TbChiTietDichVuDatChoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietDichVuDatCho
     */
    select?: TbChiTietDichVuDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietDichVuDatChoInclude<ExtArgs> | null
    /**
     * Filter, which TbChiTietDichVuDatCho to fetch.
     */
    where: TbChiTietDichVuDatChoWhereUniqueInput
  }


  /**
   * TbChiTietDichVuDatCho findFirst
   */
  export type TbChiTietDichVuDatChoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietDichVuDatCho
     */
    select?: TbChiTietDichVuDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietDichVuDatChoInclude<ExtArgs> | null
    /**
     * Filter, which TbChiTietDichVuDatCho to fetch.
     */
    where?: TbChiTietDichVuDatChoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbChiTietDichVuDatChos to fetch.
     */
    orderBy?: TbChiTietDichVuDatChoOrderByWithRelationInput | TbChiTietDichVuDatChoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbChiTietDichVuDatChos.
     */
    cursor?: TbChiTietDichVuDatChoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbChiTietDichVuDatChos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbChiTietDichVuDatChos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbChiTietDichVuDatChos.
     */
    distinct?: TbChiTietDichVuDatChoScalarFieldEnum | TbChiTietDichVuDatChoScalarFieldEnum[]
  }


  /**
   * TbChiTietDichVuDatCho findFirstOrThrow
   */
  export type TbChiTietDichVuDatChoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietDichVuDatCho
     */
    select?: TbChiTietDichVuDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietDichVuDatChoInclude<ExtArgs> | null
    /**
     * Filter, which TbChiTietDichVuDatCho to fetch.
     */
    where?: TbChiTietDichVuDatChoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbChiTietDichVuDatChos to fetch.
     */
    orderBy?: TbChiTietDichVuDatChoOrderByWithRelationInput | TbChiTietDichVuDatChoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbChiTietDichVuDatChos.
     */
    cursor?: TbChiTietDichVuDatChoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbChiTietDichVuDatChos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbChiTietDichVuDatChos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbChiTietDichVuDatChos.
     */
    distinct?: TbChiTietDichVuDatChoScalarFieldEnum | TbChiTietDichVuDatChoScalarFieldEnum[]
  }


  /**
   * TbChiTietDichVuDatCho findMany
   */
  export type TbChiTietDichVuDatChoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietDichVuDatCho
     */
    select?: TbChiTietDichVuDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietDichVuDatChoInclude<ExtArgs> | null
    /**
     * Filter, which TbChiTietDichVuDatChos to fetch.
     */
    where?: TbChiTietDichVuDatChoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbChiTietDichVuDatChos to fetch.
     */
    orderBy?: TbChiTietDichVuDatChoOrderByWithRelationInput | TbChiTietDichVuDatChoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbChiTietDichVuDatChos.
     */
    cursor?: TbChiTietDichVuDatChoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbChiTietDichVuDatChos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbChiTietDichVuDatChos.
     */
    skip?: number
    distinct?: TbChiTietDichVuDatChoScalarFieldEnum | TbChiTietDichVuDatChoScalarFieldEnum[]
  }


  /**
   * TbChiTietDichVuDatCho create
   */
  export type TbChiTietDichVuDatChoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietDichVuDatCho
     */
    select?: TbChiTietDichVuDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietDichVuDatChoInclude<ExtArgs> | null
    /**
     * The data needed to create a TbChiTietDichVuDatCho.
     */
    data: XOR<TbChiTietDichVuDatChoCreateInput, TbChiTietDichVuDatChoUncheckedCreateInput>
  }


  /**
   * TbChiTietDichVuDatCho createMany
   */
  export type TbChiTietDichVuDatChoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbChiTietDichVuDatChos.
     */
    data: TbChiTietDichVuDatChoCreateManyInput | TbChiTietDichVuDatChoCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbChiTietDichVuDatCho update
   */
  export type TbChiTietDichVuDatChoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietDichVuDatCho
     */
    select?: TbChiTietDichVuDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietDichVuDatChoInclude<ExtArgs> | null
    /**
     * The data needed to update a TbChiTietDichVuDatCho.
     */
    data: XOR<TbChiTietDichVuDatChoUpdateInput, TbChiTietDichVuDatChoUncheckedUpdateInput>
    /**
     * Choose, which TbChiTietDichVuDatCho to update.
     */
    where: TbChiTietDichVuDatChoWhereUniqueInput
  }


  /**
   * TbChiTietDichVuDatCho updateMany
   */
  export type TbChiTietDichVuDatChoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbChiTietDichVuDatChos.
     */
    data: XOR<TbChiTietDichVuDatChoUpdateManyMutationInput, TbChiTietDichVuDatChoUncheckedUpdateManyInput>
    /**
     * Filter which TbChiTietDichVuDatChos to update
     */
    where?: TbChiTietDichVuDatChoWhereInput
  }


  /**
   * TbChiTietDichVuDatCho upsert
   */
  export type TbChiTietDichVuDatChoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietDichVuDatCho
     */
    select?: TbChiTietDichVuDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietDichVuDatChoInclude<ExtArgs> | null
    /**
     * The filter to search for the TbChiTietDichVuDatCho to update in case it exists.
     */
    where: TbChiTietDichVuDatChoWhereUniqueInput
    /**
     * In case the TbChiTietDichVuDatCho found by the `where` argument doesn't exist, create a new TbChiTietDichVuDatCho with this data.
     */
    create: XOR<TbChiTietDichVuDatChoCreateInput, TbChiTietDichVuDatChoUncheckedCreateInput>
    /**
     * In case the TbChiTietDichVuDatCho was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbChiTietDichVuDatChoUpdateInput, TbChiTietDichVuDatChoUncheckedUpdateInput>
  }


  /**
   * TbChiTietDichVuDatCho delete
   */
  export type TbChiTietDichVuDatChoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietDichVuDatCho
     */
    select?: TbChiTietDichVuDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietDichVuDatChoInclude<ExtArgs> | null
    /**
     * Filter which TbChiTietDichVuDatCho to delete.
     */
    where: TbChiTietDichVuDatChoWhereUniqueInput
  }


  /**
   * TbChiTietDichVuDatCho deleteMany
   */
  export type TbChiTietDichVuDatChoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbChiTietDichVuDatChos to delete
     */
    where?: TbChiTietDichVuDatChoWhereInput
  }


  /**
   * TbChiTietDichVuDatCho.DichVu
   */
  export type TbChiTietDichVuDatCho$DichVuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDichVu
     */
    select?: TbDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDichVuInclude<ExtArgs> | null
    where?: TbDichVuWhereInput
  }


  /**
   * TbChiTietDichVuDatCho.HoaDon
   */
  export type TbChiTietDichVuDatCho$HoaDonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDon
     */
    select?: TbHoaDonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHoaDonInclude<ExtArgs> | null
    where?: TbHoaDonWhereInput
  }


  /**
   * TbChiTietDichVuDatCho without action
   */
  export type TbChiTietDichVuDatChoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietDichVuDatCho
     */
    select?: TbChiTietDichVuDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietDichVuDatChoInclude<ExtArgs> | null
  }



  /**
   * Model TbDatCho
   */

  export type AggregateTbDatCho = {
    _count: TbDatChoCountAggregateOutputType | null
    _avg: TbDatChoAvgAggregateOutputType | null
    _sum: TbDatChoSumAggregateOutputType | null
    _min: TbDatChoMinAggregateOutputType | null
    _max: TbDatChoMaxAggregateOutputType | null
  }

  export type TbDatChoAvgAggregateOutputType = {
    SLNguoiLonDiKem: number | null
    SLTreEmDiKem: number | null
  }

  export type TbDatChoSumAggregateOutputType = {
    SLNguoiLonDiKem: number | null
    SLTreEmDiKem: number | null
  }

  export type TbDatChoMinAggregateOutputType = {
    id: string | null
    MaKH: string | null
    MaPhong: string | null
    NgayDatCho: Date | null
    NgayNhanPhong: Date | null
    NgayTraPhong: Date | null
    SLNguoiLonDiKem: number | null
    SLTreEmDiKem: number | null
    LoaiKhach: $Enums.loaikhach_Status | null
    StatusThongBao: $Enums.thongbao_Status | null
    createAt: Date | null
    updateAt: Date | null
  }

  export type TbDatChoMaxAggregateOutputType = {
    id: string | null
    MaKH: string | null
    MaPhong: string | null
    NgayDatCho: Date | null
    NgayNhanPhong: Date | null
    NgayTraPhong: Date | null
    SLNguoiLonDiKem: number | null
    SLTreEmDiKem: number | null
    LoaiKhach: $Enums.loaikhach_Status | null
    StatusThongBao: $Enums.thongbao_Status | null
    createAt: Date | null
    updateAt: Date | null
  }

  export type TbDatChoCountAggregateOutputType = {
    id: number
    MaKH: number
    MaPhong: number
    NgayDatCho: number
    NgayNhanPhong: number
    NgayTraPhong: number
    SLNguoiLonDiKem: number
    SLTreEmDiKem: number
    LoaiKhach: number
    StatusThongBao: number
    createAt: number
    updateAt: number
    _all: number
  }


  export type TbDatChoAvgAggregateInputType = {
    SLNguoiLonDiKem?: true
    SLTreEmDiKem?: true
  }

  export type TbDatChoSumAggregateInputType = {
    SLNguoiLonDiKem?: true
    SLTreEmDiKem?: true
  }

  export type TbDatChoMinAggregateInputType = {
    id?: true
    MaKH?: true
    MaPhong?: true
    NgayDatCho?: true
    NgayNhanPhong?: true
    NgayTraPhong?: true
    SLNguoiLonDiKem?: true
    SLTreEmDiKem?: true
    LoaiKhach?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
  }

  export type TbDatChoMaxAggregateInputType = {
    id?: true
    MaKH?: true
    MaPhong?: true
    NgayDatCho?: true
    NgayNhanPhong?: true
    NgayTraPhong?: true
    SLNguoiLonDiKem?: true
    SLTreEmDiKem?: true
    LoaiKhach?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
  }

  export type TbDatChoCountAggregateInputType = {
    id?: true
    MaKH?: true
    MaPhong?: true
    NgayDatCho?: true
    NgayNhanPhong?: true
    NgayTraPhong?: true
    SLNguoiLonDiKem?: true
    SLTreEmDiKem?: true
    LoaiKhach?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
    _all?: true
  }

  export type TbDatChoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbDatCho to aggregate.
     */
    where?: TbDatChoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbDatChos to fetch.
     */
    orderBy?: TbDatChoOrderByWithRelationInput | TbDatChoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbDatChoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbDatChos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbDatChos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbDatChos
    **/
    _count?: true | TbDatChoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbDatChoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbDatChoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbDatChoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbDatChoMaxAggregateInputType
  }

  export type GetTbDatChoAggregateType<T extends TbDatChoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbDatCho]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbDatCho[P]>
      : GetScalarType<T[P], AggregateTbDatCho[P]>
  }




  export type TbDatChoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbDatChoWhereInput
    orderBy?: TbDatChoOrderByWithAggregationInput | TbDatChoOrderByWithAggregationInput[]
    by: TbDatChoScalarFieldEnum[] | TbDatChoScalarFieldEnum
    having?: TbDatChoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbDatChoCountAggregateInputType | true
    _avg?: TbDatChoAvgAggregateInputType
    _sum?: TbDatChoSumAggregateInputType
    _min?: TbDatChoMinAggregateInputType
    _max?: TbDatChoMaxAggregateInputType
  }

  export type TbDatChoGroupByOutputType = {
    id: string
    MaKH: string
    MaPhong: string
    NgayDatCho: Date
    NgayNhanPhong: Date
    NgayTraPhong: Date
    SLNguoiLonDiKem: number
    SLTreEmDiKem: number
    LoaiKhach: $Enums.loaikhach_Status
    StatusThongBao: $Enums.thongbao_Status
    createAt: Date
    updateAt: Date
    _count: TbDatChoCountAggregateOutputType | null
    _avg: TbDatChoAvgAggregateOutputType | null
    _sum: TbDatChoSumAggregateOutputType | null
    _min: TbDatChoMinAggregateOutputType | null
    _max: TbDatChoMaxAggregateOutputType | null
  }

  type GetTbDatChoGroupByPayload<T extends TbDatChoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbDatChoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbDatChoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbDatChoGroupByOutputType[P]>
            : GetScalarType<T[P], TbDatChoGroupByOutputType[P]>
        }
      >
    >


  export type TbDatChoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaKH?: boolean
    MaPhong?: boolean
    NgayDatCho?: boolean
    NgayNhanPhong?: boolean
    NgayTraPhong?: boolean
    SLNguoiLonDiKem?: boolean
    SLTreEmDiKem?: boolean
    LoaiKhach?: boolean
    StatusThongBao?: boolean
    createAt?: boolean
    updateAt?: boolean
    ChiTietDichVuDatCho?: boolean | TbDatCho$ChiTietDichVuDatChoArgs<ExtArgs>
    KhachHang?: boolean | TbKhachHangDefaultArgs<ExtArgs>
    Phong?: boolean | TbPhongDefaultArgs<ExtArgs>
    _count?: boolean | TbDatChoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbDatCho"]>

  export type TbDatChoSelectScalar = {
    id?: boolean
    MaKH?: boolean
    MaPhong?: boolean
    NgayDatCho?: boolean
    NgayNhanPhong?: boolean
    NgayTraPhong?: boolean
    SLNguoiLonDiKem?: boolean
    SLTreEmDiKem?: boolean
    LoaiKhach?: boolean
    StatusThongBao?: boolean
    createAt?: boolean
    updateAt?: boolean
  }

  export type TbDatChoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ChiTietDichVuDatCho?: boolean | TbDatCho$ChiTietDichVuDatChoArgs<ExtArgs>
    KhachHang?: boolean | TbKhachHangDefaultArgs<ExtArgs>
    Phong?: boolean | TbPhongDefaultArgs<ExtArgs>
    _count?: boolean | TbDatChoCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbDatChoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbDatCho"
    objects: {
      ChiTietDichVuDatCho: Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>[]
      KhachHang: Prisma.$TbKhachHangPayload<ExtArgs>
      Phong: Prisma.$TbPhongPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaKH: string
      MaPhong: string
      NgayDatCho: Date
      NgayNhanPhong: Date
      NgayTraPhong: Date
      SLNguoiLonDiKem: number
      SLTreEmDiKem: number
      LoaiKhach: $Enums.loaikhach_Status
      StatusThongBao: $Enums.thongbao_Status
      createAt: Date
      updateAt: Date
    }, ExtArgs["result"]["tbDatCho"]>
    composites: {}
  }


  type TbDatChoGetPayload<S extends boolean | null | undefined | TbDatChoDefaultArgs> = $Result.GetResult<Prisma.$TbDatChoPayload, S>

  type TbDatChoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbDatChoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbDatChoCountAggregateInputType | true
    }

  export interface TbDatChoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbDatCho'], meta: { name: 'TbDatCho' } }
    /**
     * Find zero or one TbDatCho that matches the filter.
     * @param {TbDatChoFindUniqueArgs} args - Arguments to find a TbDatCho
     * @example
     * // Get one TbDatCho
     * const tbDatCho = await prisma.tbDatCho.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbDatChoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbDatChoFindUniqueArgs<ExtArgs>>
    ): Prisma__TbDatChoClient<$Result.GetResult<Prisma.$TbDatChoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbDatCho that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbDatChoFindUniqueOrThrowArgs} args - Arguments to find a TbDatCho
     * @example
     * // Get one TbDatCho
     * const tbDatCho = await prisma.tbDatCho.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbDatChoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbDatChoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbDatChoClient<$Result.GetResult<Prisma.$TbDatChoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbDatCho that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDatChoFindFirstArgs} args - Arguments to find a TbDatCho
     * @example
     * // Get one TbDatCho
     * const tbDatCho = await prisma.tbDatCho.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbDatChoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbDatChoFindFirstArgs<ExtArgs>>
    ): Prisma__TbDatChoClient<$Result.GetResult<Prisma.$TbDatChoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbDatCho that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDatChoFindFirstOrThrowArgs} args - Arguments to find a TbDatCho
     * @example
     * // Get one TbDatCho
     * const tbDatCho = await prisma.tbDatCho.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbDatChoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbDatChoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbDatChoClient<$Result.GetResult<Prisma.$TbDatChoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbDatChos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDatChoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbDatChos
     * const tbDatChos = await prisma.tbDatCho.findMany()
     * 
     * // Get first 10 TbDatChos
     * const tbDatChos = await prisma.tbDatCho.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbDatChoWithIdOnly = await prisma.tbDatCho.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbDatChoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbDatChoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbDatChoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbDatCho.
     * @param {TbDatChoCreateArgs} args - Arguments to create a TbDatCho.
     * @example
     * // Create one TbDatCho
     * const TbDatCho = await prisma.tbDatCho.create({
     *   data: {
     *     // ... data to create a TbDatCho
     *   }
     * })
     * 
    **/
    create<T extends TbDatChoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbDatChoCreateArgs<ExtArgs>>
    ): Prisma__TbDatChoClient<$Result.GetResult<Prisma.$TbDatChoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbDatChos.
     *     @param {TbDatChoCreateManyArgs} args - Arguments to create many TbDatChos.
     *     @example
     *     // Create many TbDatChos
     *     const tbDatCho = await prisma.tbDatCho.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbDatChoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbDatChoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbDatCho.
     * @param {TbDatChoDeleteArgs} args - Arguments to delete one TbDatCho.
     * @example
     * // Delete one TbDatCho
     * const TbDatCho = await prisma.tbDatCho.delete({
     *   where: {
     *     // ... filter to delete one TbDatCho
     *   }
     * })
     * 
    **/
    delete<T extends TbDatChoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbDatChoDeleteArgs<ExtArgs>>
    ): Prisma__TbDatChoClient<$Result.GetResult<Prisma.$TbDatChoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbDatCho.
     * @param {TbDatChoUpdateArgs} args - Arguments to update one TbDatCho.
     * @example
     * // Update one TbDatCho
     * const tbDatCho = await prisma.tbDatCho.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbDatChoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbDatChoUpdateArgs<ExtArgs>>
    ): Prisma__TbDatChoClient<$Result.GetResult<Prisma.$TbDatChoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbDatChos.
     * @param {TbDatChoDeleteManyArgs} args - Arguments to filter TbDatChos to delete.
     * @example
     * // Delete a few TbDatChos
     * const { count } = await prisma.tbDatCho.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbDatChoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbDatChoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbDatChos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDatChoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbDatChos
     * const tbDatCho = await prisma.tbDatCho.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbDatChoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbDatChoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbDatCho.
     * @param {TbDatChoUpsertArgs} args - Arguments to update or create a TbDatCho.
     * @example
     * // Update or create a TbDatCho
     * const tbDatCho = await prisma.tbDatCho.upsert({
     *   create: {
     *     // ... data to create a TbDatCho
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbDatCho we want to update
     *   }
     * })
    **/
    upsert<T extends TbDatChoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbDatChoUpsertArgs<ExtArgs>>
    ): Prisma__TbDatChoClient<$Result.GetResult<Prisma.$TbDatChoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbDatChos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDatChoCountArgs} args - Arguments to filter TbDatChos to count.
     * @example
     * // Count the number of TbDatChos
     * const count = await prisma.tbDatCho.count({
     *   where: {
     *     // ... the filter for the TbDatChos we want to count
     *   }
     * })
    **/
    count<T extends TbDatChoCountArgs>(
      args?: Subset<T, TbDatChoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbDatChoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbDatCho.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDatChoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbDatChoAggregateArgs>(args: Subset<T, TbDatChoAggregateArgs>): Prisma.PrismaPromise<GetTbDatChoAggregateType<T>>

    /**
     * Group by TbDatCho.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDatChoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbDatChoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbDatChoGroupByArgs['orderBy'] }
        : { orderBy?: TbDatChoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbDatChoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbDatChoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbDatCho model
   */
  readonly fields: TbDatChoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbDatCho.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbDatChoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    ChiTietDichVuDatCho<T extends TbDatCho$ChiTietDichVuDatChoArgs<ExtArgs> = {}>(args?: Subset<T, TbDatCho$ChiTietDichVuDatChoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>, T, 'findMany'> | Null>;

    KhachHang<T extends TbKhachHangDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbKhachHangDefaultArgs<ExtArgs>>): Prisma__TbKhachHangClient<$Result.GetResult<Prisma.$TbKhachHangPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Phong<T extends TbPhongDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbPhongDefaultArgs<ExtArgs>>): Prisma__TbPhongClient<$Result.GetResult<Prisma.$TbPhongPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbDatCho model
   */ 
  interface TbDatChoFieldRefs {
    readonly id: FieldRef<"TbDatCho", 'String'>
    readonly MaKH: FieldRef<"TbDatCho", 'String'>
    readonly MaPhong: FieldRef<"TbDatCho", 'String'>
    readonly NgayDatCho: FieldRef<"TbDatCho", 'DateTime'>
    readonly NgayNhanPhong: FieldRef<"TbDatCho", 'DateTime'>
    readonly NgayTraPhong: FieldRef<"TbDatCho", 'DateTime'>
    readonly SLNguoiLonDiKem: FieldRef<"TbDatCho", 'Int'>
    readonly SLTreEmDiKem: FieldRef<"TbDatCho", 'Int'>
    readonly LoaiKhach: FieldRef<"TbDatCho", 'loaikhach_Status'>
    readonly StatusThongBao: FieldRef<"TbDatCho", 'thongbao_Status'>
    readonly createAt: FieldRef<"TbDatCho", 'DateTime'>
    readonly updateAt: FieldRef<"TbDatCho", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * TbDatCho findUnique
   */
  export type TbDatChoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDatCho
     */
    select?: TbDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDatChoInclude<ExtArgs> | null
    /**
     * Filter, which TbDatCho to fetch.
     */
    where: TbDatChoWhereUniqueInput
  }


  /**
   * TbDatCho findUniqueOrThrow
   */
  export type TbDatChoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDatCho
     */
    select?: TbDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDatChoInclude<ExtArgs> | null
    /**
     * Filter, which TbDatCho to fetch.
     */
    where: TbDatChoWhereUniqueInput
  }


  /**
   * TbDatCho findFirst
   */
  export type TbDatChoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDatCho
     */
    select?: TbDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDatChoInclude<ExtArgs> | null
    /**
     * Filter, which TbDatCho to fetch.
     */
    where?: TbDatChoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbDatChos to fetch.
     */
    orderBy?: TbDatChoOrderByWithRelationInput | TbDatChoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbDatChos.
     */
    cursor?: TbDatChoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbDatChos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbDatChos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbDatChos.
     */
    distinct?: TbDatChoScalarFieldEnum | TbDatChoScalarFieldEnum[]
  }


  /**
   * TbDatCho findFirstOrThrow
   */
  export type TbDatChoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDatCho
     */
    select?: TbDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDatChoInclude<ExtArgs> | null
    /**
     * Filter, which TbDatCho to fetch.
     */
    where?: TbDatChoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbDatChos to fetch.
     */
    orderBy?: TbDatChoOrderByWithRelationInput | TbDatChoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbDatChos.
     */
    cursor?: TbDatChoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbDatChos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbDatChos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbDatChos.
     */
    distinct?: TbDatChoScalarFieldEnum | TbDatChoScalarFieldEnum[]
  }


  /**
   * TbDatCho findMany
   */
  export type TbDatChoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDatCho
     */
    select?: TbDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDatChoInclude<ExtArgs> | null
    /**
     * Filter, which TbDatChos to fetch.
     */
    where?: TbDatChoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbDatChos to fetch.
     */
    orderBy?: TbDatChoOrderByWithRelationInput | TbDatChoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbDatChos.
     */
    cursor?: TbDatChoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbDatChos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbDatChos.
     */
    skip?: number
    distinct?: TbDatChoScalarFieldEnum | TbDatChoScalarFieldEnum[]
  }


  /**
   * TbDatCho create
   */
  export type TbDatChoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDatCho
     */
    select?: TbDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDatChoInclude<ExtArgs> | null
    /**
     * The data needed to create a TbDatCho.
     */
    data: XOR<TbDatChoCreateInput, TbDatChoUncheckedCreateInput>
  }


  /**
   * TbDatCho createMany
   */
  export type TbDatChoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbDatChos.
     */
    data: TbDatChoCreateManyInput | TbDatChoCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbDatCho update
   */
  export type TbDatChoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDatCho
     */
    select?: TbDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDatChoInclude<ExtArgs> | null
    /**
     * The data needed to update a TbDatCho.
     */
    data: XOR<TbDatChoUpdateInput, TbDatChoUncheckedUpdateInput>
    /**
     * Choose, which TbDatCho to update.
     */
    where: TbDatChoWhereUniqueInput
  }


  /**
   * TbDatCho updateMany
   */
  export type TbDatChoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbDatChos.
     */
    data: XOR<TbDatChoUpdateManyMutationInput, TbDatChoUncheckedUpdateManyInput>
    /**
     * Filter which TbDatChos to update
     */
    where?: TbDatChoWhereInput
  }


  /**
   * TbDatCho upsert
   */
  export type TbDatChoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDatCho
     */
    select?: TbDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDatChoInclude<ExtArgs> | null
    /**
     * The filter to search for the TbDatCho to update in case it exists.
     */
    where: TbDatChoWhereUniqueInput
    /**
     * In case the TbDatCho found by the `where` argument doesn't exist, create a new TbDatCho with this data.
     */
    create: XOR<TbDatChoCreateInput, TbDatChoUncheckedCreateInput>
    /**
     * In case the TbDatCho was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbDatChoUpdateInput, TbDatChoUncheckedUpdateInput>
  }


  /**
   * TbDatCho delete
   */
  export type TbDatChoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDatCho
     */
    select?: TbDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDatChoInclude<ExtArgs> | null
    /**
     * Filter which TbDatCho to delete.
     */
    where: TbDatChoWhereUniqueInput
  }


  /**
   * TbDatCho deleteMany
   */
  export type TbDatChoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbDatChos to delete
     */
    where?: TbDatChoWhereInput
  }


  /**
   * TbDatCho.ChiTietDichVuDatCho
   */
  export type TbDatCho$ChiTietDichVuDatChoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietDichVuDatCho
     */
    select?: TbChiTietDichVuDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietDichVuDatChoInclude<ExtArgs> | null
    where?: TbChiTietDichVuDatChoWhereInput
    orderBy?: TbChiTietDichVuDatChoOrderByWithRelationInput | TbChiTietDichVuDatChoOrderByWithRelationInput[]
    cursor?: TbChiTietDichVuDatChoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbChiTietDichVuDatChoScalarFieldEnum | TbChiTietDichVuDatChoScalarFieldEnum[]
  }


  /**
   * TbDatCho without action
   */
  export type TbDatChoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDatCho
     */
    select?: TbDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDatChoInclude<ExtArgs> | null
  }



  /**
   * Model TbDichVu
   */

  export type AggregateTbDichVu = {
    _count: TbDichVuCountAggregateOutputType | null
    _avg: TbDichVuAvgAggregateOutputType | null
    _sum: TbDichVuSumAggregateOutputType | null
    _min: TbDichVuMinAggregateOutputType | null
    _max: TbDichVuMaxAggregateOutputType | null
  }

  export type TbDichVuAvgAggregateOutputType = {
    GiaVon: Decimal | null
    GiaBan: Decimal | null
    ThoiLuong: number | null
  }

  export type TbDichVuSumAggregateOutputType = {
    GiaVon: Decimal | null
    GiaBan: Decimal | null
    ThoiLuong: number | null
  }

  export type TbDichVuMinAggregateOutputType = {
    id: string | null
    MaNhomDichVu: string | null
    TenDichVu: string | null
    DonViTinh: string | null
    GiaVon: Decimal | null
    GiaBan: Decimal | null
    ThoiLuong: number | null
    StatusThongBao: $Enums.thongbao_Status | null
    createAt: Date | null
    updateAt: Date | null
  }

  export type TbDichVuMaxAggregateOutputType = {
    id: string | null
    MaNhomDichVu: string | null
    TenDichVu: string | null
    DonViTinh: string | null
    GiaVon: Decimal | null
    GiaBan: Decimal | null
    ThoiLuong: number | null
    StatusThongBao: $Enums.thongbao_Status | null
    createAt: Date | null
    updateAt: Date | null
  }

  export type TbDichVuCountAggregateOutputType = {
    id: number
    MaNhomDichVu: number
    TenDichVu: number
    DonViTinh: number
    GiaVon: number
    GiaBan: number
    ThoiLuong: number
    StatusThongBao: number
    createAt: number
    updateAt: number
    _all: number
  }


  export type TbDichVuAvgAggregateInputType = {
    GiaVon?: true
    GiaBan?: true
    ThoiLuong?: true
  }

  export type TbDichVuSumAggregateInputType = {
    GiaVon?: true
    GiaBan?: true
    ThoiLuong?: true
  }

  export type TbDichVuMinAggregateInputType = {
    id?: true
    MaNhomDichVu?: true
    TenDichVu?: true
    DonViTinh?: true
    GiaVon?: true
    GiaBan?: true
    ThoiLuong?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
  }

  export type TbDichVuMaxAggregateInputType = {
    id?: true
    MaNhomDichVu?: true
    TenDichVu?: true
    DonViTinh?: true
    GiaVon?: true
    GiaBan?: true
    ThoiLuong?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
  }

  export type TbDichVuCountAggregateInputType = {
    id?: true
    MaNhomDichVu?: true
    TenDichVu?: true
    DonViTinh?: true
    GiaVon?: true
    GiaBan?: true
    ThoiLuong?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
    _all?: true
  }

  export type TbDichVuAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbDichVu to aggregate.
     */
    where?: TbDichVuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbDichVus to fetch.
     */
    orderBy?: TbDichVuOrderByWithRelationInput | TbDichVuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbDichVuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbDichVus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbDichVus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbDichVus
    **/
    _count?: true | TbDichVuCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbDichVuAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbDichVuSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbDichVuMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbDichVuMaxAggregateInputType
  }

  export type GetTbDichVuAggregateType<T extends TbDichVuAggregateArgs> = {
        [P in keyof T & keyof AggregateTbDichVu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbDichVu[P]>
      : GetScalarType<T[P], AggregateTbDichVu[P]>
  }




  export type TbDichVuGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbDichVuWhereInput
    orderBy?: TbDichVuOrderByWithAggregationInput | TbDichVuOrderByWithAggregationInput[]
    by: TbDichVuScalarFieldEnum[] | TbDichVuScalarFieldEnum
    having?: TbDichVuScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbDichVuCountAggregateInputType | true
    _avg?: TbDichVuAvgAggregateInputType
    _sum?: TbDichVuSumAggregateInputType
    _min?: TbDichVuMinAggregateInputType
    _max?: TbDichVuMaxAggregateInputType
  }

  export type TbDichVuGroupByOutputType = {
    id: string
    MaNhomDichVu: string
    TenDichVu: string
    DonViTinh: string | null
    GiaVon: Decimal
    GiaBan: Decimal
    ThoiLuong: number
    StatusThongBao: $Enums.thongbao_Status
    createAt: Date
    updateAt: Date
    _count: TbDichVuCountAggregateOutputType | null
    _avg: TbDichVuAvgAggregateOutputType | null
    _sum: TbDichVuSumAggregateOutputType | null
    _min: TbDichVuMinAggregateOutputType | null
    _max: TbDichVuMaxAggregateOutputType | null
  }

  type GetTbDichVuGroupByPayload<T extends TbDichVuGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbDichVuGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbDichVuGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbDichVuGroupByOutputType[P]>
            : GetScalarType<T[P], TbDichVuGroupByOutputType[P]>
        }
      >
    >


  export type TbDichVuSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaNhomDichVu?: boolean
    TenDichVu?: boolean
    DonViTinh?: boolean
    GiaVon?: boolean
    GiaBan?: boolean
    ThoiLuong?: boolean
    StatusThongBao?: boolean
    createAt?: boolean
    updateAt?: boolean
    NhomDichVu?: boolean | TbNhomDichVuDefaultArgs<ExtArgs>
    ChiTietDichVuDatCho?: boolean | TbDichVu$ChiTietDichVuDatChoArgs<ExtArgs>
    CacLinkAnhDichVu?: boolean | TbDichVu$CacLinkAnhDichVuArgs<ExtArgs>
    _count?: boolean | TbDichVuCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbDichVu"]>

  export type TbDichVuSelectScalar = {
    id?: boolean
    MaNhomDichVu?: boolean
    TenDichVu?: boolean
    DonViTinh?: boolean
    GiaVon?: boolean
    GiaBan?: boolean
    ThoiLuong?: boolean
    StatusThongBao?: boolean
    createAt?: boolean
    updateAt?: boolean
  }

  export type TbDichVuInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    NhomDichVu?: boolean | TbNhomDichVuDefaultArgs<ExtArgs>
    ChiTietDichVuDatCho?: boolean | TbDichVu$ChiTietDichVuDatChoArgs<ExtArgs>
    CacLinkAnhDichVu?: boolean | TbDichVu$CacLinkAnhDichVuArgs<ExtArgs>
    _count?: boolean | TbDichVuCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbDichVuPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbDichVu"
    objects: {
      NhomDichVu: Prisma.$TbNhomDichVuPayload<ExtArgs>
      ChiTietDichVuDatCho: Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>[]
      CacLinkAnhDichVu: Prisma.$TbCacLinkAnhDichVuPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaNhomDichVu: string
      TenDichVu: string
      DonViTinh: string | null
      GiaVon: Prisma.Decimal
      GiaBan: Prisma.Decimal
      ThoiLuong: number
      StatusThongBao: $Enums.thongbao_Status
      createAt: Date
      updateAt: Date
    }, ExtArgs["result"]["tbDichVu"]>
    composites: {}
  }


  type TbDichVuGetPayload<S extends boolean | null | undefined | TbDichVuDefaultArgs> = $Result.GetResult<Prisma.$TbDichVuPayload, S>

  type TbDichVuCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbDichVuFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbDichVuCountAggregateInputType | true
    }

  export interface TbDichVuDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbDichVu'], meta: { name: 'TbDichVu' } }
    /**
     * Find zero or one TbDichVu that matches the filter.
     * @param {TbDichVuFindUniqueArgs} args - Arguments to find a TbDichVu
     * @example
     * // Get one TbDichVu
     * const tbDichVu = await prisma.tbDichVu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbDichVuFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbDichVuFindUniqueArgs<ExtArgs>>
    ): Prisma__TbDichVuClient<$Result.GetResult<Prisma.$TbDichVuPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbDichVu that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbDichVuFindUniqueOrThrowArgs} args - Arguments to find a TbDichVu
     * @example
     * // Get one TbDichVu
     * const tbDichVu = await prisma.tbDichVu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbDichVuFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbDichVuFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbDichVuClient<$Result.GetResult<Prisma.$TbDichVuPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbDichVu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDichVuFindFirstArgs} args - Arguments to find a TbDichVu
     * @example
     * // Get one TbDichVu
     * const tbDichVu = await prisma.tbDichVu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbDichVuFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbDichVuFindFirstArgs<ExtArgs>>
    ): Prisma__TbDichVuClient<$Result.GetResult<Prisma.$TbDichVuPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbDichVu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDichVuFindFirstOrThrowArgs} args - Arguments to find a TbDichVu
     * @example
     * // Get one TbDichVu
     * const tbDichVu = await prisma.tbDichVu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbDichVuFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbDichVuFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbDichVuClient<$Result.GetResult<Prisma.$TbDichVuPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbDichVus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDichVuFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbDichVus
     * const tbDichVus = await prisma.tbDichVu.findMany()
     * 
     * // Get first 10 TbDichVus
     * const tbDichVus = await prisma.tbDichVu.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbDichVuWithIdOnly = await prisma.tbDichVu.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbDichVuFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbDichVuFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbDichVuPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbDichVu.
     * @param {TbDichVuCreateArgs} args - Arguments to create a TbDichVu.
     * @example
     * // Create one TbDichVu
     * const TbDichVu = await prisma.tbDichVu.create({
     *   data: {
     *     // ... data to create a TbDichVu
     *   }
     * })
     * 
    **/
    create<T extends TbDichVuCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbDichVuCreateArgs<ExtArgs>>
    ): Prisma__TbDichVuClient<$Result.GetResult<Prisma.$TbDichVuPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbDichVus.
     *     @param {TbDichVuCreateManyArgs} args - Arguments to create many TbDichVus.
     *     @example
     *     // Create many TbDichVus
     *     const tbDichVu = await prisma.tbDichVu.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbDichVuCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbDichVuCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbDichVu.
     * @param {TbDichVuDeleteArgs} args - Arguments to delete one TbDichVu.
     * @example
     * // Delete one TbDichVu
     * const TbDichVu = await prisma.tbDichVu.delete({
     *   where: {
     *     // ... filter to delete one TbDichVu
     *   }
     * })
     * 
    **/
    delete<T extends TbDichVuDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbDichVuDeleteArgs<ExtArgs>>
    ): Prisma__TbDichVuClient<$Result.GetResult<Prisma.$TbDichVuPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbDichVu.
     * @param {TbDichVuUpdateArgs} args - Arguments to update one TbDichVu.
     * @example
     * // Update one TbDichVu
     * const tbDichVu = await prisma.tbDichVu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbDichVuUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbDichVuUpdateArgs<ExtArgs>>
    ): Prisma__TbDichVuClient<$Result.GetResult<Prisma.$TbDichVuPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbDichVus.
     * @param {TbDichVuDeleteManyArgs} args - Arguments to filter TbDichVus to delete.
     * @example
     * // Delete a few TbDichVus
     * const { count } = await prisma.tbDichVu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbDichVuDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbDichVuDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbDichVus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDichVuUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbDichVus
     * const tbDichVu = await prisma.tbDichVu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbDichVuUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbDichVuUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbDichVu.
     * @param {TbDichVuUpsertArgs} args - Arguments to update or create a TbDichVu.
     * @example
     * // Update or create a TbDichVu
     * const tbDichVu = await prisma.tbDichVu.upsert({
     *   create: {
     *     // ... data to create a TbDichVu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbDichVu we want to update
     *   }
     * })
    **/
    upsert<T extends TbDichVuUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbDichVuUpsertArgs<ExtArgs>>
    ): Prisma__TbDichVuClient<$Result.GetResult<Prisma.$TbDichVuPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbDichVus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDichVuCountArgs} args - Arguments to filter TbDichVus to count.
     * @example
     * // Count the number of TbDichVus
     * const count = await prisma.tbDichVu.count({
     *   where: {
     *     // ... the filter for the TbDichVus we want to count
     *   }
     * })
    **/
    count<T extends TbDichVuCountArgs>(
      args?: Subset<T, TbDichVuCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbDichVuCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbDichVu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDichVuAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbDichVuAggregateArgs>(args: Subset<T, TbDichVuAggregateArgs>): Prisma.PrismaPromise<GetTbDichVuAggregateType<T>>

    /**
     * Group by TbDichVu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbDichVuGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbDichVuGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbDichVuGroupByArgs['orderBy'] }
        : { orderBy?: TbDichVuGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbDichVuGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbDichVuGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbDichVu model
   */
  readonly fields: TbDichVuFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbDichVu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbDichVuClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    NhomDichVu<T extends TbNhomDichVuDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbNhomDichVuDefaultArgs<ExtArgs>>): Prisma__TbNhomDichVuClient<$Result.GetResult<Prisma.$TbNhomDichVuPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    ChiTietDichVuDatCho<T extends TbDichVu$ChiTietDichVuDatChoArgs<ExtArgs> = {}>(args?: Subset<T, TbDichVu$ChiTietDichVuDatChoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>, T, 'findMany'> | Null>;

    CacLinkAnhDichVu<T extends TbDichVu$CacLinkAnhDichVuArgs<ExtArgs> = {}>(args?: Subset<T, TbDichVu$CacLinkAnhDichVuArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbCacLinkAnhDichVuPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbDichVu model
   */ 
  interface TbDichVuFieldRefs {
    readonly id: FieldRef<"TbDichVu", 'String'>
    readonly MaNhomDichVu: FieldRef<"TbDichVu", 'String'>
    readonly TenDichVu: FieldRef<"TbDichVu", 'String'>
    readonly DonViTinh: FieldRef<"TbDichVu", 'String'>
    readonly GiaVon: FieldRef<"TbDichVu", 'Decimal'>
    readonly GiaBan: FieldRef<"TbDichVu", 'Decimal'>
    readonly ThoiLuong: FieldRef<"TbDichVu", 'Int'>
    readonly StatusThongBao: FieldRef<"TbDichVu", 'thongbao_Status'>
    readonly createAt: FieldRef<"TbDichVu", 'DateTime'>
    readonly updateAt: FieldRef<"TbDichVu", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * TbDichVu findUnique
   */
  export type TbDichVuFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDichVu
     */
    select?: TbDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbDichVu to fetch.
     */
    where: TbDichVuWhereUniqueInput
  }


  /**
   * TbDichVu findUniqueOrThrow
   */
  export type TbDichVuFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDichVu
     */
    select?: TbDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbDichVu to fetch.
     */
    where: TbDichVuWhereUniqueInput
  }


  /**
   * TbDichVu findFirst
   */
  export type TbDichVuFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDichVu
     */
    select?: TbDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbDichVu to fetch.
     */
    where?: TbDichVuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbDichVus to fetch.
     */
    orderBy?: TbDichVuOrderByWithRelationInput | TbDichVuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbDichVus.
     */
    cursor?: TbDichVuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbDichVus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbDichVus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbDichVus.
     */
    distinct?: TbDichVuScalarFieldEnum | TbDichVuScalarFieldEnum[]
  }


  /**
   * TbDichVu findFirstOrThrow
   */
  export type TbDichVuFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDichVu
     */
    select?: TbDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbDichVu to fetch.
     */
    where?: TbDichVuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbDichVus to fetch.
     */
    orderBy?: TbDichVuOrderByWithRelationInput | TbDichVuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbDichVus.
     */
    cursor?: TbDichVuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbDichVus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbDichVus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbDichVus.
     */
    distinct?: TbDichVuScalarFieldEnum | TbDichVuScalarFieldEnum[]
  }


  /**
   * TbDichVu findMany
   */
  export type TbDichVuFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDichVu
     */
    select?: TbDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbDichVus to fetch.
     */
    where?: TbDichVuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbDichVus to fetch.
     */
    orderBy?: TbDichVuOrderByWithRelationInput | TbDichVuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbDichVus.
     */
    cursor?: TbDichVuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbDichVus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbDichVus.
     */
    skip?: number
    distinct?: TbDichVuScalarFieldEnum | TbDichVuScalarFieldEnum[]
  }


  /**
   * TbDichVu create
   */
  export type TbDichVuCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDichVu
     */
    select?: TbDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDichVuInclude<ExtArgs> | null
    /**
     * The data needed to create a TbDichVu.
     */
    data: XOR<TbDichVuCreateInput, TbDichVuUncheckedCreateInput>
  }


  /**
   * TbDichVu createMany
   */
  export type TbDichVuCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbDichVus.
     */
    data: TbDichVuCreateManyInput | TbDichVuCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbDichVu update
   */
  export type TbDichVuUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDichVu
     */
    select?: TbDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDichVuInclude<ExtArgs> | null
    /**
     * The data needed to update a TbDichVu.
     */
    data: XOR<TbDichVuUpdateInput, TbDichVuUncheckedUpdateInput>
    /**
     * Choose, which TbDichVu to update.
     */
    where: TbDichVuWhereUniqueInput
  }


  /**
   * TbDichVu updateMany
   */
  export type TbDichVuUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbDichVus.
     */
    data: XOR<TbDichVuUpdateManyMutationInput, TbDichVuUncheckedUpdateManyInput>
    /**
     * Filter which TbDichVus to update
     */
    where?: TbDichVuWhereInput
  }


  /**
   * TbDichVu upsert
   */
  export type TbDichVuUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDichVu
     */
    select?: TbDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDichVuInclude<ExtArgs> | null
    /**
     * The filter to search for the TbDichVu to update in case it exists.
     */
    where: TbDichVuWhereUniqueInput
    /**
     * In case the TbDichVu found by the `where` argument doesn't exist, create a new TbDichVu with this data.
     */
    create: XOR<TbDichVuCreateInput, TbDichVuUncheckedCreateInput>
    /**
     * In case the TbDichVu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbDichVuUpdateInput, TbDichVuUncheckedUpdateInput>
  }


  /**
   * TbDichVu delete
   */
  export type TbDichVuDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDichVu
     */
    select?: TbDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDichVuInclude<ExtArgs> | null
    /**
     * Filter which TbDichVu to delete.
     */
    where: TbDichVuWhereUniqueInput
  }


  /**
   * TbDichVu deleteMany
   */
  export type TbDichVuDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbDichVus to delete
     */
    where?: TbDichVuWhereInput
  }


  /**
   * TbDichVu.ChiTietDichVuDatCho
   */
  export type TbDichVu$ChiTietDichVuDatChoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietDichVuDatCho
     */
    select?: TbChiTietDichVuDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietDichVuDatChoInclude<ExtArgs> | null
    where?: TbChiTietDichVuDatChoWhereInput
    orderBy?: TbChiTietDichVuDatChoOrderByWithRelationInput | TbChiTietDichVuDatChoOrderByWithRelationInput[]
    cursor?: TbChiTietDichVuDatChoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbChiTietDichVuDatChoScalarFieldEnum | TbChiTietDichVuDatChoScalarFieldEnum[]
  }


  /**
   * TbDichVu.CacLinkAnhDichVu
   */
  export type TbDichVu$CacLinkAnhDichVuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhDichVu
     */
    select?: TbCacLinkAnhDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhDichVuInclude<ExtArgs> | null
    where?: TbCacLinkAnhDichVuWhereInput
    orderBy?: TbCacLinkAnhDichVuOrderByWithRelationInput | TbCacLinkAnhDichVuOrderByWithRelationInput[]
    cursor?: TbCacLinkAnhDichVuWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbCacLinkAnhDichVuScalarFieldEnum | TbCacLinkAnhDichVuScalarFieldEnum[]
  }


  /**
   * TbDichVu without action
   */
  export type TbDichVuDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDichVu
     */
    select?: TbDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDichVuInclude<ExtArgs> | null
  }



  /**
   * Model TbNhomDichVu
   */

  export type AggregateTbNhomDichVu = {
    _count: TbNhomDichVuCountAggregateOutputType | null
    _min: TbNhomDichVuMinAggregateOutputType | null
    _max: TbNhomDichVuMaxAggregateOutputType | null
  }

  export type TbNhomDichVuMinAggregateOutputType = {
    id: string | null
    MaKhachSan: string | null
    TenNhomDichVu: string | null
  }

  export type TbNhomDichVuMaxAggregateOutputType = {
    id: string | null
    MaKhachSan: string | null
    TenNhomDichVu: string | null
  }

  export type TbNhomDichVuCountAggregateOutputType = {
    id: number
    MaKhachSan: number
    TenNhomDichVu: number
    _all: number
  }


  export type TbNhomDichVuMinAggregateInputType = {
    id?: true
    MaKhachSan?: true
    TenNhomDichVu?: true
  }

  export type TbNhomDichVuMaxAggregateInputType = {
    id?: true
    MaKhachSan?: true
    TenNhomDichVu?: true
  }

  export type TbNhomDichVuCountAggregateInputType = {
    id?: true
    MaKhachSan?: true
    TenNhomDichVu?: true
    _all?: true
  }

  export type TbNhomDichVuAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbNhomDichVu to aggregate.
     */
    where?: TbNhomDichVuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhomDichVus to fetch.
     */
    orderBy?: TbNhomDichVuOrderByWithRelationInput | TbNhomDichVuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbNhomDichVuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhomDichVus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhomDichVus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbNhomDichVus
    **/
    _count?: true | TbNhomDichVuCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbNhomDichVuMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbNhomDichVuMaxAggregateInputType
  }

  export type GetTbNhomDichVuAggregateType<T extends TbNhomDichVuAggregateArgs> = {
        [P in keyof T & keyof AggregateTbNhomDichVu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbNhomDichVu[P]>
      : GetScalarType<T[P], AggregateTbNhomDichVu[P]>
  }




  export type TbNhomDichVuGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbNhomDichVuWhereInput
    orderBy?: TbNhomDichVuOrderByWithAggregationInput | TbNhomDichVuOrderByWithAggregationInput[]
    by: TbNhomDichVuScalarFieldEnum[] | TbNhomDichVuScalarFieldEnum
    having?: TbNhomDichVuScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbNhomDichVuCountAggregateInputType | true
    _min?: TbNhomDichVuMinAggregateInputType
    _max?: TbNhomDichVuMaxAggregateInputType
  }

  export type TbNhomDichVuGroupByOutputType = {
    id: string
    MaKhachSan: string
    TenNhomDichVu: string
    _count: TbNhomDichVuCountAggregateOutputType | null
    _min: TbNhomDichVuMinAggregateOutputType | null
    _max: TbNhomDichVuMaxAggregateOutputType | null
  }

  type GetTbNhomDichVuGroupByPayload<T extends TbNhomDichVuGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbNhomDichVuGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbNhomDichVuGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbNhomDichVuGroupByOutputType[P]>
            : GetScalarType<T[P], TbNhomDichVuGroupByOutputType[P]>
        }
      >
    >


  export type TbNhomDichVuSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaKhachSan?: boolean
    TenNhomDichVu?: boolean
    DichVu?: boolean | TbNhomDichVu$DichVuArgs<ExtArgs>
    KhachSan?: boolean | TbKhachSanDefaultArgs<ExtArgs>
    _count?: boolean | TbNhomDichVuCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbNhomDichVu"]>

  export type TbNhomDichVuSelectScalar = {
    id?: boolean
    MaKhachSan?: boolean
    TenNhomDichVu?: boolean
  }

  export type TbNhomDichVuInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DichVu?: boolean | TbNhomDichVu$DichVuArgs<ExtArgs>
    KhachSan?: boolean | TbKhachSanDefaultArgs<ExtArgs>
    _count?: boolean | TbNhomDichVuCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbNhomDichVuPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbNhomDichVu"
    objects: {
      DichVu: Prisma.$TbDichVuPayload<ExtArgs>[]
      KhachSan: Prisma.$TbKhachSanPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaKhachSan: string
      TenNhomDichVu: string
    }, ExtArgs["result"]["tbNhomDichVu"]>
    composites: {}
  }


  type TbNhomDichVuGetPayload<S extends boolean | null | undefined | TbNhomDichVuDefaultArgs> = $Result.GetResult<Prisma.$TbNhomDichVuPayload, S>

  type TbNhomDichVuCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbNhomDichVuFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbNhomDichVuCountAggregateInputType | true
    }

  export interface TbNhomDichVuDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbNhomDichVu'], meta: { name: 'TbNhomDichVu' } }
    /**
     * Find zero or one TbNhomDichVu that matches the filter.
     * @param {TbNhomDichVuFindUniqueArgs} args - Arguments to find a TbNhomDichVu
     * @example
     * // Get one TbNhomDichVu
     * const tbNhomDichVu = await prisma.tbNhomDichVu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbNhomDichVuFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomDichVuFindUniqueArgs<ExtArgs>>
    ): Prisma__TbNhomDichVuClient<$Result.GetResult<Prisma.$TbNhomDichVuPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbNhomDichVu that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbNhomDichVuFindUniqueOrThrowArgs} args - Arguments to find a TbNhomDichVu
     * @example
     * // Get one TbNhomDichVu
     * const tbNhomDichVu = await prisma.tbNhomDichVu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbNhomDichVuFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomDichVuFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbNhomDichVuClient<$Result.GetResult<Prisma.$TbNhomDichVuPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbNhomDichVu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomDichVuFindFirstArgs} args - Arguments to find a TbNhomDichVu
     * @example
     * // Get one TbNhomDichVu
     * const tbNhomDichVu = await prisma.tbNhomDichVu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbNhomDichVuFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomDichVuFindFirstArgs<ExtArgs>>
    ): Prisma__TbNhomDichVuClient<$Result.GetResult<Prisma.$TbNhomDichVuPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbNhomDichVu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomDichVuFindFirstOrThrowArgs} args - Arguments to find a TbNhomDichVu
     * @example
     * // Get one TbNhomDichVu
     * const tbNhomDichVu = await prisma.tbNhomDichVu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbNhomDichVuFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomDichVuFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbNhomDichVuClient<$Result.GetResult<Prisma.$TbNhomDichVuPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbNhomDichVus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomDichVuFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbNhomDichVus
     * const tbNhomDichVus = await prisma.tbNhomDichVu.findMany()
     * 
     * // Get first 10 TbNhomDichVus
     * const tbNhomDichVus = await prisma.tbNhomDichVu.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbNhomDichVuWithIdOnly = await prisma.tbNhomDichVu.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbNhomDichVuFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomDichVuFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbNhomDichVuPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbNhomDichVu.
     * @param {TbNhomDichVuCreateArgs} args - Arguments to create a TbNhomDichVu.
     * @example
     * // Create one TbNhomDichVu
     * const TbNhomDichVu = await prisma.tbNhomDichVu.create({
     *   data: {
     *     // ... data to create a TbNhomDichVu
     *   }
     * })
     * 
    **/
    create<T extends TbNhomDichVuCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomDichVuCreateArgs<ExtArgs>>
    ): Prisma__TbNhomDichVuClient<$Result.GetResult<Prisma.$TbNhomDichVuPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbNhomDichVus.
     *     @param {TbNhomDichVuCreateManyArgs} args - Arguments to create many TbNhomDichVus.
     *     @example
     *     // Create many TbNhomDichVus
     *     const tbNhomDichVu = await prisma.tbNhomDichVu.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbNhomDichVuCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomDichVuCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbNhomDichVu.
     * @param {TbNhomDichVuDeleteArgs} args - Arguments to delete one TbNhomDichVu.
     * @example
     * // Delete one TbNhomDichVu
     * const TbNhomDichVu = await prisma.tbNhomDichVu.delete({
     *   where: {
     *     // ... filter to delete one TbNhomDichVu
     *   }
     * })
     * 
    **/
    delete<T extends TbNhomDichVuDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomDichVuDeleteArgs<ExtArgs>>
    ): Prisma__TbNhomDichVuClient<$Result.GetResult<Prisma.$TbNhomDichVuPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbNhomDichVu.
     * @param {TbNhomDichVuUpdateArgs} args - Arguments to update one TbNhomDichVu.
     * @example
     * // Update one TbNhomDichVu
     * const tbNhomDichVu = await prisma.tbNhomDichVu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbNhomDichVuUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomDichVuUpdateArgs<ExtArgs>>
    ): Prisma__TbNhomDichVuClient<$Result.GetResult<Prisma.$TbNhomDichVuPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbNhomDichVus.
     * @param {TbNhomDichVuDeleteManyArgs} args - Arguments to filter TbNhomDichVus to delete.
     * @example
     * // Delete a few TbNhomDichVus
     * const { count } = await prisma.tbNhomDichVu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbNhomDichVuDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomDichVuDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbNhomDichVus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomDichVuUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbNhomDichVus
     * const tbNhomDichVu = await prisma.tbNhomDichVu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbNhomDichVuUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomDichVuUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbNhomDichVu.
     * @param {TbNhomDichVuUpsertArgs} args - Arguments to update or create a TbNhomDichVu.
     * @example
     * // Update or create a TbNhomDichVu
     * const tbNhomDichVu = await prisma.tbNhomDichVu.upsert({
     *   create: {
     *     // ... data to create a TbNhomDichVu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbNhomDichVu we want to update
     *   }
     * })
    **/
    upsert<T extends TbNhomDichVuUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomDichVuUpsertArgs<ExtArgs>>
    ): Prisma__TbNhomDichVuClient<$Result.GetResult<Prisma.$TbNhomDichVuPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbNhomDichVus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomDichVuCountArgs} args - Arguments to filter TbNhomDichVus to count.
     * @example
     * // Count the number of TbNhomDichVus
     * const count = await prisma.tbNhomDichVu.count({
     *   where: {
     *     // ... the filter for the TbNhomDichVus we want to count
     *   }
     * })
    **/
    count<T extends TbNhomDichVuCountArgs>(
      args?: Subset<T, TbNhomDichVuCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbNhomDichVuCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbNhomDichVu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomDichVuAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbNhomDichVuAggregateArgs>(args: Subset<T, TbNhomDichVuAggregateArgs>): Prisma.PrismaPromise<GetTbNhomDichVuAggregateType<T>>

    /**
     * Group by TbNhomDichVu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomDichVuGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbNhomDichVuGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbNhomDichVuGroupByArgs['orderBy'] }
        : { orderBy?: TbNhomDichVuGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbNhomDichVuGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbNhomDichVuGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbNhomDichVu model
   */
  readonly fields: TbNhomDichVuFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbNhomDichVu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbNhomDichVuClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    DichVu<T extends TbNhomDichVu$DichVuArgs<ExtArgs> = {}>(args?: Subset<T, TbNhomDichVu$DichVuArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbDichVuPayload<ExtArgs>, T, 'findMany'> | Null>;

    KhachSan<T extends TbKhachSanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbKhachSanDefaultArgs<ExtArgs>>): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbNhomDichVu model
   */ 
  interface TbNhomDichVuFieldRefs {
    readonly id: FieldRef<"TbNhomDichVu", 'String'>
    readonly MaKhachSan: FieldRef<"TbNhomDichVu", 'String'>
    readonly TenNhomDichVu: FieldRef<"TbNhomDichVu", 'String'>
  }
    

  // Custom InputTypes

  /**
   * TbNhomDichVu findUnique
   */
  export type TbNhomDichVuFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomDichVu
     */
    select?: TbNhomDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomDichVu to fetch.
     */
    where: TbNhomDichVuWhereUniqueInput
  }


  /**
   * TbNhomDichVu findUniqueOrThrow
   */
  export type TbNhomDichVuFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomDichVu
     */
    select?: TbNhomDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomDichVu to fetch.
     */
    where: TbNhomDichVuWhereUniqueInput
  }


  /**
   * TbNhomDichVu findFirst
   */
  export type TbNhomDichVuFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomDichVu
     */
    select?: TbNhomDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomDichVu to fetch.
     */
    where?: TbNhomDichVuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhomDichVus to fetch.
     */
    orderBy?: TbNhomDichVuOrderByWithRelationInput | TbNhomDichVuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbNhomDichVus.
     */
    cursor?: TbNhomDichVuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhomDichVus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhomDichVus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbNhomDichVus.
     */
    distinct?: TbNhomDichVuScalarFieldEnum | TbNhomDichVuScalarFieldEnum[]
  }


  /**
   * TbNhomDichVu findFirstOrThrow
   */
  export type TbNhomDichVuFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomDichVu
     */
    select?: TbNhomDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomDichVu to fetch.
     */
    where?: TbNhomDichVuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhomDichVus to fetch.
     */
    orderBy?: TbNhomDichVuOrderByWithRelationInput | TbNhomDichVuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbNhomDichVus.
     */
    cursor?: TbNhomDichVuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhomDichVus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhomDichVus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbNhomDichVus.
     */
    distinct?: TbNhomDichVuScalarFieldEnum | TbNhomDichVuScalarFieldEnum[]
  }


  /**
   * TbNhomDichVu findMany
   */
  export type TbNhomDichVuFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomDichVu
     */
    select?: TbNhomDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomDichVus to fetch.
     */
    where?: TbNhomDichVuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhomDichVus to fetch.
     */
    orderBy?: TbNhomDichVuOrderByWithRelationInput | TbNhomDichVuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbNhomDichVus.
     */
    cursor?: TbNhomDichVuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhomDichVus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhomDichVus.
     */
    skip?: number
    distinct?: TbNhomDichVuScalarFieldEnum | TbNhomDichVuScalarFieldEnum[]
  }


  /**
   * TbNhomDichVu create
   */
  export type TbNhomDichVuCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomDichVu
     */
    select?: TbNhomDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomDichVuInclude<ExtArgs> | null
    /**
     * The data needed to create a TbNhomDichVu.
     */
    data: XOR<TbNhomDichVuCreateInput, TbNhomDichVuUncheckedCreateInput>
  }


  /**
   * TbNhomDichVu createMany
   */
  export type TbNhomDichVuCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbNhomDichVus.
     */
    data: TbNhomDichVuCreateManyInput | TbNhomDichVuCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbNhomDichVu update
   */
  export type TbNhomDichVuUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomDichVu
     */
    select?: TbNhomDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomDichVuInclude<ExtArgs> | null
    /**
     * The data needed to update a TbNhomDichVu.
     */
    data: XOR<TbNhomDichVuUpdateInput, TbNhomDichVuUncheckedUpdateInput>
    /**
     * Choose, which TbNhomDichVu to update.
     */
    where: TbNhomDichVuWhereUniqueInput
  }


  /**
   * TbNhomDichVu updateMany
   */
  export type TbNhomDichVuUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbNhomDichVus.
     */
    data: XOR<TbNhomDichVuUpdateManyMutationInput, TbNhomDichVuUncheckedUpdateManyInput>
    /**
     * Filter which TbNhomDichVus to update
     */
    where?: TbNhomDichVuWhereInput
  }


  /**
   * TbNhomDichVu upsert
   */
  export type TbNhomDichVuUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomDichVu
     */
    select?: TbNhomDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomDichVuInclude<ExtArgs> | null
    /**
     * The filter to search for the TbNhomDichVu to update in case it exists.
     */
    where: TbNhomDichVuWhereUniqueInput
    /**
     * In case the TbNhomDichVu found by the `where` argument doesn't exist, create a new TbNhomDichVu with this data.
     */
    create: XOR<TbNhomDichVuCreateInput, TbNhomDichVuUncheckedCreateInput>
    /**
     * In case the TbNhomDichVu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbNhomDichVuUpdateInput, TbNhomDichVuUncheckedUpdateInput>
  }


  /**
   * TbNhomDichVu delete
   */
  export type TbNhomDichVuDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomDichVu
     */
    select?: TbNhomDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomDichVuInclude<ExtArgs> | null
    /**
     * Filter which TbNhomDichVu to delete.
     */
    where: TbNhomDichVuWhereUniqueInput
  }


  /**
   * TbNhomDichVu deleteMany
   */
  export type TbNhomDichVuDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbNhomDichVus to delete
     */
    where?: TbNhomDichVuWhereInput
  }


  /**
   * TbNhomDichVu.DichVu
   */
  export type TbNhomDichVu$DichVuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDichVu
     */
    select?: TbDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDichVuInclude<ExtArgs> | null
    where?: TbDichVuWhereInput
    orderBy?: TbDichVuOrderByWithRelationInput | TbDichVuOrderByWithRelationInput[]
    cursor?: TbDichVuWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbDichVuScalarFieldEnum | TbDichVuScalarFieldEnum[]
  }


  /**
   * TbNhomDichVu without action
   */
  export type TbNhomDichVuDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomDichVu
     */
    select?: TbNhomDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomDichVuInclude<ExtArgs> | null
  }



  /**
   * Model TbHangHoa
   */

  export type AggregateTbHangHoa = {
    _count: TbHangHoaCountAggregateOutputType | null
    _avg: TbHangHoaAvgAggregateOutputType | null
    _sum: TbHangHoaSumAggregateOutputType | null
    _min: TbHangHoaMinAggregateOutputType | null
    _max: TbHangHoaMaxAggregateOutputType | null
  }

  export type TbHangHoaAvgAggregateOutputType = {
    GiaGocHangHoa: Decimal | null
    GiaBanHangHoa: Decimal | null
    SLTonKho: number | null
    DinhMucTonItNhat: number | null
    DinhMucTonNhieuNhat: number | null
  }

  export type TbHangHoaSumAggregateOutputType = {
    GiaGocHangHoa: Decimal | null
    GiaBanHangHoa: Decimal | null
    SLTonKho: number | null
    DinhMucTonItNhat: number | null
    DinhMucTonNhieuNhat: number | null
  }

  export type TbHangHoaMinAggregateOutputType = {
    id: string | null
    MaNhomHangHoa: string | null
    TenHangHoa: string | null
    DonViTinh: string | null
    GiaGocHangHoa: Decimal | null
    GiaBanHangHoa: Decimal | null
    SLTonKho: number | null
    DinhMucTonItNhat: number | null
    DinhMucTonNhieuNhat: number | null
    TrongLuong: string | null
    MoTa: string | null
    GhiChu: string | null
    ViTri: string | null
    StatusThongBao: $Enums.thongbao_Status | null
  }

  export type TbHangHoaMaxAggregateOutputType = {
    id: string | null
    MaNhomHangHoa: string | null
    TenHangHoa: string | null
    DonViTinh: string | null
    GiaGocHangHoa: Decimal | null
    GiaBanHangHoa: Decimal | null
    SLTonKho: number | null
    DinhMucTonItNhat: number | null
    DinhMucTonNhieuNhat: number | null
    TrongLuong: string | null
    MoTa: string | null
    GhiChu: string | null
    ViTri: string | null
    StatusThongBao: $Enums.thongbao_Status | null
  }

  export type TbHangHoaCountAggregateOutputType = {
    id: number
    MaNhomHangHoa: number
    TenHangHoa: number
    DonViTinh: number
    GiaGocHangHoa: number
    GiaBanHangHoa: number
    SLTonKho: number
    DinhMucTonItNhat: number
    DinhMucTonNhieuNhat: number
    TrongLuong: number
    MoTa: number
    GhiChu: number
    ViTri: number
    StatusThongBao: number
    _all: number
  }


  export type TbHangHoaAvgAggregateInputType = {
    GiaGocHangHoa?: true
    GiaBanHangHoa?: true
    SLTonKho?: true
    DinhMucTonItNhat?: true
    DinhMucTonNhieuNhat?: true
  }

  export type TbHangHoaSumAggregateInputType = {
    GiaGocHangHoa?: true
    GiaBanHangHoa?: true
    SLTonKho?: true
    DinhMucTonItNhat?: true
    DinhMucTonNhieuNhat?: true
  }

  export type TbHangHoaMinAggregateInputType = {
    id?: true
    MaNhomHangHoa?: true
    TenHangHoa?: true
    DonViTinh?: true
    GiaGocHangHoa?: true
    GiaBanHangHoa?: true
    SLTonKho?: true
    DinhMucTonItNhat?: true
    DinhMucTonNhieuNhat?: true
    TrongLuong?: true
    MoTa?: true
    GhiChu?: true
    ViTri?: true
    StatusThongBao?: true
  }

  export type TbHangHoaMaxAggregateInputType = {
    id?: true
    MaNhomHangHoa?: true
    TenHangHoa?: true
    DonViTinh?: true
    GiaGocHangHoa?: true
    GiaBanHangHoa?: true
    SLTonKho?: true
    DinhMucTonItNhat?: true
    DinhMucTonNhieuNhat?: true
    TrongLuong?: true
    MoTa?: true
    GhiChu?: true
    ViTri?: true
    StatusThongBao?: true
  }

  export type TbHangHoaCountAggregateInputType = {
    id?: true
    MaNhomHangHoa?: true
    TenHangHoa?: true
    DonViTinh?: true
    GiaGocHangHoa?: true
    GiaBanHangHoa?: true
    SLTonKho?: true
    DinhMucTonItNhat?: true
    DinhMucTonNhieuNhat?: true
    TrongLuong?: true
    MoTa?: true
    GhiChu?: true
    ViTri?: true
    StatusThongBao?: true
    _all?: true
  }

  export type TbHangHoaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbHangHoa to aggregate.
     */
    where?: TbHangHoaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbHangHoas to fetch.
     */
    orderBy?: TbHangHoaOrderByWithRelationInput | TbHangHoaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbHangHoaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbHangHoas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbHangHoas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbHangHoas
    **/
    _count?: true | TbHangHoaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbHangHoaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbHangHoaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbHangHoaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbHangHoaMaxAggregateInputType
  }

  export type GetTbHangHoaAggregateType<T extends TbHangHoaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbHangHoa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbHangHoa[P]>
      : GetScalarType<T[P], AggregateTbHangHoa[P]>
  }




  export type TbHangHoaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbHangHoaWhereInput
    orderBy?: TbHangHoaOrderByWithAggregationInput | TbHangHoaOrderByWithAggregationInput[]
    by: TbHangHoaScalarFieldEnum[] | TbHangHoaScalarFieldEnum
    having?: TbHangHoaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbHangHoaCountAggregateInputType | true
    _avg?: TbHangHoaAvgAggregateInputType
    _sum?: TbHangHoaSumAggregateInputType
    _min?: TbHangHoaMinAggregateInputType
    _max?: TbHangHoaMaxAggregateInputType
  }

  export type TbHangHoaGroupByOutputType = {
    id: string
    MaNhomHangHoa: string
    TenHangHoa: string
    DonViTinh: string | null
    GiaGocHangHoa: Decimal
    GiaBanHangHoa: Decimal
    SLTonKho: number
    DinhMucTonItNhat: number | null
    DinhMucTonNhieuNhat: number | null
    TrongLuong: string | null
    MoTa: string | null
    GhiChu: string | null
    ViTri: string | null
    StatusThongBao: $Enums.thongbao_Status
    _count: TbHangHoaCountAggregateOutputType | null
    _avg: TbHangHoaAvgAggregateOutputType | null
    _sum: TbHangHoaSumAggregateOutputType | null
    _min: TbHangHoaMinAggregateOutputType | null
    _max: TbHangHoaMaxAggregateOutputType | null
  }

  type GetTbHangHoaGroupByPayload<T extends TbHangHoaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbHangHoaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbHangHoaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbHangHoaGroupByOutputType[P]>
            : GetScalarType<T[P], TbHangHoaGroupByOutputType[P]>
        }
      >
    >


  export type TbHangHoaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaNhomHangHoa?: boolean
    TenHangHoa?: boolean
    DonViTinh?: boolean
    GiaGocHangHoa?: boolean
    GiaBanHangHoa?: boolean
    SLTonKho?: boolean
    DinhMucTonItNhat?: boolean
    DinhMucTonNhieuNhat?: boolean
    TrongLuong?: boolean
    MoTa?: boolean
    GhiChu?: boolean
    ViTri?: boolean
    StatusThongBao?: boolean
    NhomHangHoa?: boolean | TbNhomHangHoaDefaultArgs<ExtArgs>
    CacLinkAnhHangHoa?: boolean | TbHangHoa$CacLinkAnhHangHoaArgs<ExtArgs>
    ChiTietNoiDungNhap?: boolean | TbHangHoa$ChiTietNoiDungNhapArgs<ExtArgs>
    _count?: boolean | TbHangHoaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbHangHoa"]>

  export type TbHangHoaSelectScalar = {
    id?: boolean
    MaNhomHangHoa?: boolean
    TenHangHoa?: boolean
    DonViTinh?: boolean
    GiaGocHangHoa?: boolean
    GiaBanHangHoa?: boolean
    SLTonKho?: boolean
    DinhMucTonItNhat?: boolean
    DinhMucTonNhieuNhat?: boolean
    TrongLuong?: boolean
    MoTa?: boolean
    GhiChu?: boolean
    ViTri?: boolean
    StatusThongBao?: boolean
  }

  export type TbHangHoaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    NhomHangHoa?: boolean | TbNhomHangHoaDefaultArgs<ExtArgs>
    CacLinkAnhHangHoa?: boolean | TbHangHoa$CacLinkAnhHangHoaArgs<ExtArgs>
    ChiTietNoiDungNhap?: boolean | TbHangHoa$ChiTietNoiDungNhapArgs<ExtArgs>
    _count?: boolean | TbHangHoaCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbHangHoaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbHangHoa"
    objects: {
      NhomHangHoa: Prisma.$TbNhomHangHoaPayload<ExtArgs>
      CacLinkAnhHangHoa: Prisma.$TbCacLinkAnhHangHoaPayload<ExtArgs>[]
      ChiTietNoiDungNhap: Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaNhomHangHoa: string
      TenHangHoa: string
      DonViTinh: string | null
      GiaGocHangHoa: Prisma.Decimal
      GiaBanHangHoa: Prisma.Decimal
      SLTonKho: number
      DinhMucTonItNhat: number | null
      DinhMucTonNhieuNhat: number | null
      TrongLuong: string | null
      MoTa: string | null
      GhiChu: string | null
      ViTri: string | null
      StatusThongBao: $Enums.thongbao_Status
    }, ExtArgs["result"]["tbHangHoa"]>
    composites: {}
  }


  type TbHangHoaGetPayload<S extends boolean | null | undefined | TbHangHoaDefaultArgs> = $Result.GetResult<Prisma.$TbHangHoaPayload, S>

  type TbHangHoaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbHangHoaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbHangHoaCountAggregateInputType | true
    }

  export interface TbHangHoaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbHangHoa'], meta: { name: 'TbHangHoa' } }
    /**
     * Find zero or one TbHangHoa that matches the filter.
     * @param {TbHangHoaFindUniqueArgs} args - Arguments to find a TbHangHoa
     * @example
     * // Get one TbHangHoa
     * const tbHangHoa = await prisma.tbHangHoa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbHangHoaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbHangHoaFindUniqueArgs<ExtArgs>>
    ): Prisma__TbHangHoaClient<$Result.GetResult<Prisma.$TbHangHoaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbHangHoa that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbHangHoaFindUniqueOrThrowArgs} args - Arguments to find a TbHangHoa
     * @example
     * // Get one TbHangHoa
     * const tbHangHoa = await prisma.tbHangHoa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbHangHoaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbHangHoaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbHangHoaClient<$Result.GetResult<Prisma.$TbHangHoaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbHangHoa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHangHoaFindFirstArgs} args - Arguments to find a TbHangHoa
     * @example
     * // Get one TbHangHoa
     * const tbHangHoa = await prisma.tbHangHoa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbHangHoaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbHangHoaFindFirstArgs<ExtArgs>>
    ): Prisma__TbHangHoaClient<$Result.GetResult<Prisma.$TbHangHoaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbHangHoa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHangHoaFindFirstOrThrowArgs} args - Arguments to find a TbHangHoa
     * @example
     * // Get one TbHangHoa
     * const tbHangHoa = await prisma.tbHangHoa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbHangHoaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbHangHoaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbHangHoaClient<$Result.GetResult<Prisma.$TbHangHoaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbHangHoas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHangHoaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbHangHoas
     * const tbHangHoas = await prisma.tbHangHoa.findMany()
     * 
     * // Get first 10 TbHangHoas
     * const tbHangHoas = await prisma.tbHangHoa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbHangHoaWithIdOnly = await prisma.tbHangHoa.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbHangHoaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbHangHoaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbHangHoaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbHangHoa.
     * @param {TbHangHoaCreateArgs} args - Arguments to create a TbHangHoa.
     * @example
     * // Create one TbHangHoa
     * const TbHangHoa = await prisma.tbHangHoa.create({
     *   data: {
     *     // ... data to create a TbHangHoa
     *   }
     * })
     * 
    **/
    create<T extends TbHangHoaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbHangHoaCreateArgs<ExtArgs>>
    ): Prisma__TbHangHoaClient<$Result.GetResult<Prisma.$TbHangHoaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbHangHoas.
     *     @param {TbHangHoaCreateManyArgs} args - Arguments to create many TbHangHoas.
     *     @example
     *     // Create many TbHangHoas
     *     const tbHangHoa = await prisma.tbHangHoa.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbHangHoaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbHangHoaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbHangHoa.
     * @param {TbHangHoaDeleteArgs} args - Arguments to delete one TbHangHoa.
     * @example
     * // Delete one TbHangHoa
     * const TbHangHoa = await prisma.tbHangHoa.delete({
     *   where: {
     *     // ... filter to delete one TbHangHoa
     *   }
     * })
     * 
    **/
    delete<T extends TbHangHoaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbHangHoaDeleteArgs<ExtArgs>>
    ): Prisma__TbHangHoaClient<$Result.GetResult<Prisma.$TbHangHoaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbHangHoa.
     * @param {TbHangHoaUpdateArgs} args - Arguments to update one TbHangHoa.
     * @example
     * // Update one TbHangHoa
     * const tbHangHoa = await prisma.tbHangHoa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbHangHoaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbHangHoaUpdateArgs<ExtArgs>>
    ): Prisma__TbHangHoaClient<$Result.GetResult<Prisma.$TbHangHoaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbHangHoas.
     * @param {TbHangHoaDeleteManyArgs} args - Arguments to filter TbHangHoas to delete.
     * @example
     * // Delete a few TbHangHoas
     * const { count } = await prisma.tbHangHoa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbHangHoaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbHangHoaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbHangHoas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHangHoaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbHangHoas
     * const tbHangHoa = await prisma.tbHangHoa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbHangHoaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbHangHoaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbHangHoa.
     * @param {TbHangHoaUpsertArgs} args - Arguments to update or create a TbHangHoa.
     * @example
     * // Update or create a TbHangHoa
     * const tbHangHoa = await prisma.tbHangHoa.upsert({
     *   create: {
     *     // ... data to create a TbHangHoa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbHangHoa we want to update
     *   }
     * })
    **/
    upsert<T extends TbHangHoaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbHangHoaUpsertArgs<ExtArgs>>
    ): Prisma__TbHangHoaClient<$Result.GetResult<Prisma.$TbHangHoaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbHangHoas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHangHoaCountArgs} args - Arguments to filter TbHangHoas to count.
     * @example
     * // Count the number of TbHangHoas
     * const count = await prisma.tbHangHoa.count({
     *   where: {
     *     // ... the filter for the TbHangHoas we want to count
     *   }
     * })
    **/
    count<T extends TbHangHoaCountArgs>(
      args?: Subset<T, TbHangHoaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbHangHoaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbHangHoa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHangHoaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbHangHoaAggregateArgs>(args: Subset<T, TbHangHoaAggregateArgs>): Prisma.PrismaPromise<GetTbHangHoaAggregateType<T>>

    /**
     * Group by TbHangHoa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHangHoaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbHangHoaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbHangHoaGroupByArgs['orderBy'] }
        : { orderBy?: TbHangHoaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbHangHoaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbHangHoaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbHangHoa model
   */
  readonly fields: TbHangHoaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbHangHoa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbHangHoaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    NhomHangHoa<T extends TbNhomHangHoaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbNhomHangHoaDefaultArgs<ExtArgs>>): Prisma__TbNhomHangHoaClient<$Result.GetResult<Prisma.$TbNhomHangHoaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    CacLinkAnhHangHoa<T extends TbHangHoa$CacLinkAnhHangHoaArgs<ExtArgs> = {}>(args?: Subset<T, TbHangHoa$CacLinkAnhHangHoaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbCacLinkAnhHangHoaPayload<ExtArgs>, T, 'findMany'> | Null>;

    ChiTietNoiDungNhap<T extends TbHangHoa$ChiTietNoiDungNhapArgs<ExtArgs> = {}>(args?: Subset<T, TbHangHoa$ChiTietNoiDungNhapArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbHangHoa model
   */ 
  interface TbHangHoaFieldRefs {
    readonly id: FieldRef<"TbHangHoa", 'String'>
    readonly MaNhomHangHoa: FieldRef<"TbHangHoa", 'String'>
    readonly TenHangHoa: FieldRef<"TbHangHoa", 'String'>
    readonly DonViTinh: FieldRef<"TbHangHoa", 'String'>
    readonly GiaGocHangHoa: FieldRef<"TbHangHoa", 'Decimal'>
    readonly GiaBanHangHoa: FieldRef<"TbHangHoa", 'Decimal'>
    readonly SLTonKho: FieldRef<"TbHangHoa", 'Int'>
    readonly DinhMucTonItNhat: FieldRef<"TbHangHoa", 'Int'>
    readonly DinhMucTonNhieuNhat: FieldRef<"TbHangHoa", 'Int'>
    readonly TrongLuong: FieldRef<"TbHangHoa", 'String'>
    readonly MoTa: FieldRef<"TbHangHoa", 'String'>
    readonly GhiChu: FieldRef<"TbHangHoa", 'String'>
    readonly ViTri: FieldRef<"TbHangHoa", 'String'>
    readonly StatusThongBao: FieldRef<"TbHangHoa", 'thongbao_Status'>
  }
    

  // Custom InputTypes

  /**
   * TbHangHoa findUnique
   */
  export type TbHangHoaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHangHoa
     */
    select?: TbHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbHangHoa to fetch.
     */
    where: TbHangHoaWhereUniqueInput
  }


  /**
   * TbHangHoa findUniqueOrThrow
   */
  export type TbHangHoaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHangHoa
     */
    select?: TbHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbHangHoa to fetch.
     */
    where: TbHangHoaWhereUniqueInput
  }


  /**
   * TbHangHoa findFirst
   */
  export type TbHangHoaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHangHoa
     */
    select?: TbHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbHangHoa to fetch.
     */
    where?: TbHangHoaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbHangHoas to fetch.
     */
    orderBy?: TbHangHoaOrderByWithRelationInput | TbHangHoaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbHangHoas.
     */
    cursor?: TbHangHoaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbHangHoas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbHangHoas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbHangHoas.
     */
    distinct?: TbHangHoaScalarFieldEnum | TbHangHoaScalarFieldEnum[]
  }


  /**
   * TbHangHoa findFirstOrThrow
   */
  export type TbHangHoaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHangHoa
     */
    select?: TbHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbHangHoa to fetch.
     */
    where?: TbHangHoaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbHangHoas to fetch.
     */
    orderBy?: TbHangHoaOrderByWithRelationInput | TbHangHoaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbHangHoas.
     */
    cursor?: TbHangHoaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbHangHoas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbHangHoas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbHangHoas.
     */
    distinct?: TbHangHoaScalarFieldEnum | TbHangHoaScalarFieldEnum[]
  }


  /**
   * TbHangHoa findMany
   */
  export type TbHangHoaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHangHoa
     */
    select?: TbHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbHangHoas to fetch.
     */
    where?: TbHangHoaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbHangHoas to fetch.
     */
    orderBy?: TbHangHoaOrderByWithRelationInput | TbHangHoaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbHangHoas.
     */
    cursor?: TbHangHoaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbHangHoas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbHangHoas.
     */
    skip?: number
    distinct?: TbHangHoaScalarFieldEnum | TbHangHoaScalarFieldEnum[]
  }


  /**
   * TbHangHoa create
   */
  export type TbHangHoaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHangHoa
     */
    select?: TbHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHangHoaInclude<ExtArgs> | null
    /**
     * The data needed to create a TbHangHoa.
     */
    data: XOR<TbHangHoaCreateInput, TbHangHoaUncheckedCreateInput>
  }


  /**
   * TbHangHoa createMany
   */
  export type TbHangHoaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbHangHoas.
     */
    data: TbHangHoaCreateManyInput | TbHangHoaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbHangHoa update
   */
  export type TbHangHoaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHangHoa
     */
    select?: TbHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHangHoaInclude<ExtArgs> | null
    /**
     * The data needed to update a TbHangHoa.
     */
    data: XOR<TbHangHoaUpdateInput, TbHangHoaUncheckedUpdateInput>
    /**
     * Choose, which TbHangHoa to update.
     */
    where: TbHangHoaWhereUniqueInput
  }


  /**
   * TbHangHoa updateMany
   */
  export type TbHangHoaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbHangHoas.
     */
    data: XOR<TbHangHoaUpdateManyMutationInput, TbHangHoaUncheckedUpdateManyInput>
    /**
     * Filter which TbHangHoas to update
     */
    where?: TbHangHoaWhereInput
  }


  /**
   * TbHangHoa upsert
   */
  export type TbHangHoaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHangHoa
     */
    select?: TbHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHangHoaInclude<ExtArgs> | null
    /**
     * The filter to search for the TbHangHoa to update in case it exists.
     */
    where: TbHangHoaWhereUniqueInput
    /**
     * In case the TbHangHoa found by the `where` argument doesn't exist, create a new TbHangHoa with this data.
     */
    create: XOR<TbHangHoaCreateInput, TbHangHoaUncheckedCreateInput>
    /**
     * In case the TbHangHoa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbHangHoaUpdateInput, TbHangHoaUncheckedUpdateInput>
  }


  /**
   * TbHangHoa delete
   */
  export type TbHangHoaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHangHoa
     */
    select?: TbHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHangHoaInclude<ExtArgs> | null
    /**
     * Filter which TbHangHoa to delete.
     */
    where: TbHangHoaWhereUniqueInput
  }


  /**
   * TbHangHoa deleteMany
   */
  export type TbHangHoaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbHangHoas to delete
     */
    where?: TbHangHoaWhereInput
  }


  /**
   * TbHangHoa.CacLinkAnhHangHoa
   */
  export type TbHangHoa$CacLinkAnhHangHoaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhHangHoa
     */
    select?: TbCacLinkAnhHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhHangHoaInclude<ExtArgs> | null
    where?: TbCacLinkAnhHangHoaWhereInput
    orderBy?: TbCacLinkAnhHangHoaOrderByWithRelationInput | TbCacLinkAnhHangHoaOrderByWithRelationInput[]
    cursor?: TbCacLinkAnhHangHoaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbCacLinkAnhHangHoaScalarFieldEnum | TbCacLinkAnhHangHoaScalarFieldEnum[]
  }


  /**
   * TbHangHoa.ChiTietNoiDungNhap
   */
  export type TbHangHoa$ChiTietNoiDungNhapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietNoiDungNhap
     */
    select?: TbChiTietNoiDungNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietNoiDungNhapInclude<ExtArgs> | null
    where?: TbChiTietNoiDungNhapWhereInput
    orderBy?: TbChiTietNoiDungNhapOrderByWithRelationInput | TbChiTietNoiDungNhapOrderByWithRelationInput[]
    cursor?: TbChiTietNoiDungNhapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbChiTietNoiDungNhapScalarFieldEnum | TbChiTietNoiDungNhapScalarFieldEnum[]
  }


  /**
   * TbHangHoa without action
   */
  export type TbHangHoaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHangHoa
     */
    select?: TbHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHangHoaInclude<ExtArgs> | null
  }



  /**
   * Model TbPhieuNhap
   */

  export type AggregateTbPhieuNhap = {
    _count: TbPhieuNhapCountAggregateOutputType | null
    _avg: TbPhieuNhapAvgAggregateOutputType | null
    _sum: TbPhieuNhapSumAggregateOutputType | null
    _min: TbPhieuNhapMinAggregateOutputType | null
    _max: TbPhieuNhapMaxAggregateOutputType | null
  }

  export type TbPhieuNhapAvgAggregateOutputType = {
    CacKhoanChiPhiPhatSinhHangHoa: Decimal | null
    TongTienCanTra: Decimal | null
    TienDaTra: Decimal | null
  }

  export type TbPhieuNhapSumAggregateOutputType = {
    CacKhoanChiPhiPhatSinhHangHoa: Decimal | null
    TongTienCanTra: Decimal | null
    TienDaTra: Decimal | null
  }

  export type TbPhieuNhapMinAggregateOutputType = {
    id: string | null
    MaKhachSan: string | null
    MaNhaCungCap: string | null
    CacKhoanChiPhiPhatSinhHangHoa: Decimal | null
    TongTienCanTra: Decimal | null
    TienDaTra: Decimal | null
    Status: $Enums.tbphieunhap_Status | null
    StatusThongBao: $Enums.thongbao_Status | null
    createAt: Date | null
    updateAt: Date | null
  }

  export type TbPhieuNhapMaxAggregateOutputType = {
    id: string | null
    MaKhachSan: string | null
    MaNhaCungCap: string | null
    CacKhoanChiPhiPhatSinhHangHoa: Decimal | null
    TongTienCanTra: Decimal | null
    TienDaTra: Decimal | null
    Status: $Enums.tbphieunhap_Status | null
    StatusThongBao: $Enums.thongbao_Status | null
    createAt: Date | null
    updateAt: Date | null
  }

  export type TbPhieuNhapCountAggregateOutputType = {
    id: number
    MaKhachSan: number
    MaNhaCungCap: number
    CacKhoanChiPhiPhatSinhHangHoa: number
    TongTienCanTra: number
    TienDaTra: number
    Status: number
    StatusThongBao: number
    createAt: number
    updateAt: number
    _all: number
  }


  export type TbPhieuNhapAvgAggregateInputType = {
    CacKhoanChiPhiPhatSinhHangHoa?: true
    TongTienCanTra?: true
    TienDaTra?: true
  }

  export type TbPhieuNhapSumAggregateInputType = {
    CacKhoanChiPhiPhatSinhHangHoa?: true
    TongTienCanTra?: true
    TienDaTra?: true
  }

  export type TbPhieuNhapMinAggregateInputType = {
    id?: true
    MaKhachSan?: true
    MaNhaCungCap?: true
    CacKhoanChiPhiPhatSinhHangHoa?: true
    TongTienCanTra?: true
    TienDaTra?: true
    Status?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
  }

  export type TbPhieuNhapMaxAggregateInputType = {
    id?: true
    MaKhachSan?: true
    MaNhaCungCap?: true
    CacKhoanChiPhiPhatSinhHangHoa?: true
    TongTienCanTra?: true
    TienDaTra?: true
    Status?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
  }

  export type TbPhieuNhapCountAggregateInputType = {
    id?: true
    MaKhachSan?: true
    MaNhaCungCap?: true
    CacKhoanChiPhiPhatSinhHangHoa?: true
    TongTienCanTra?: true
    TienDaTra?: true
    Status?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
    _all?: true
  }

  export type TbPhieuNhapAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbPhieuNhap to aggregate.
     */
    where?: TbPhieuNhapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbPhieuNhaps to fetch.
     */
    orderBy?: TbPhieuNhapOrderByWithRelationInput | TbPhieuNhapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbPhieuNhapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbPhieuNhaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbPhieuNhaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbPhieuNhaps
    **/
    _count?: true | TbPhieuNhapCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbPhieuNhapAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbPhieuNhapSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbPhieuNhapMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbPhieuNhapMaxAggregateInputType
  }

  export type GetTbPhieuNhapAggregateType<T extends TbPhieuNhapAggregateArgs> = {
        [P in keyof T & keyof AggregateTbPhieuNhap]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbPhieuNhap[P]>
      : GetScalarType<T[P], AggregateTbPhieuNhap[P]>
  }




  export type TbPhieuNhapGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbPhieuNhapWhereInput
    orderBy?: TbPhieuNhapOrderByWithAggregationInput | TbPhieuNhapOrderByWithAggregationInput[]
    by: TbPhieuNhapScalarFieldEnum[] | TbPhieuNhapScalarFieldEnum
    having?: TbPhieuNhapScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbPhieuNhapCountAggregateInputType | true
    _avg?: TbPhieuNhapAvgAggregateInputType
    _sum?: TbPhieuNhapSumAggregateInputType
    _min?: TbPhieuNhapMinAggregateInputType
    _max?: TbPhieuNhapMaxAggregateInputType
  }

  export type TbPhieuNhapGroupByOutputType = {
    id: string
    MaKhachSan: string
    MaNhaCungCap: string | null
    CacKhoanChiPhiPhatSinhHangHoa: Decimal | null
    TongTienCanTra: Decimal
    TienDaTra: Decimal
    Status: $Enums.tbphieunhap_Status
    StatusThongBao: $Enums.thongbao_Status
    createAt: Date
    updateAt: Date
    _count: TbPhieuNhapCountAggregateOutputType | null
    _avg: TbPhieuNhapAvgAggregateOutputType | null
    _sum: TbPhieuNhapSumAggregateOutputType | null
    _min: TbPhieuNhapMinAggregateOutputType | null
    _max: TbPhieuNhapMaxAggregateOutputType | null
  }

  type GetTbPhieuNhapGroupByPayload<T extends TbPhieuNhapGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbPhieuNhapGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbPhieuNhapGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbPhieuNhapGroupByOutputType[P]>
            : GetScalarType<T[P], TbPhieuNhapGroupByOutputType[P]>
        }
      >
    >


  export type TbPhieuNhapSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaKhachSan?: boolean
    MaNhaCungCap?: boolean
    CacKhoanChiPhiPhatSinhHangHoa?: boolean
    TongTienCanTra?: boolean
    TienDaTra?: boolean
    Status?: boolean
    StatusThongBao?: boolean
    createAt?: boolean
    updateAt?: boolean
    NhaCungCap?: boolean | TbPhieuNhap$NhaCungCapArgs<ExtArgs>
    KhachSan?: boolean | TbKhachSanDefaultArgs<ExtArgs>
    ChiTietNoiDungNhap?: boolean | TbPhieuNhap$ChiTietNoiDungNhapArgs<ExtArgs>
    _count?: boolean | TbPhieuNhapCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbPhieuNhap"]>

  export type TbPhieuNhapSelectScalar = {
    id?: boolean
    MaKhachSan?: boolean
    MaNhaCungCap?: boolean
    CacKhoanChiPhiPhatSinhHangHoa?: boolean
    TongTienCanTra?: boolean
    TienDaTra?: boolean
    Status?: boolean
    StatusThongBao?: boolean
    createAt?: boolean
    updateAt?: boolean
  }

  export type TbPhieuNhapInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    NhaCungCap?: boolean | TbPhieuNhap$NhaCungCapArgs<ExtArgs>
    KhachSan?: boolean | TbKhachSanDefaultArgs<ExtArgs>
    ChiTietNoiDungNhap?: boolean | TbPhieuNhap$ChiTietNoiDungNhapArgs<ExtArgs>
    _count?: boolean | TbPhieuNhapCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbPhieuNhapPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbPhieuNhap"
    objects: {
      NhaCungCap: Prisma.$TbNhaCungCapPayload<ExtArgs> | null
      KhachSan: Prisma.$TbKhachSanPayload<ExtArgs>
      ChiTietNoiDungNhap: Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaKhachSan: string
      MaNhaCungCap: string | null
      CacKhoanChiPhiPhatSinhHangHoa: Prisma.Decimal | null
      TongTienCanTra: Prisma.Decimal
      TienDaTra: Prisma.Decimal
      Status: $Enums.tbphieunhap_Status
      StatusThongBao: $Enums.thongbao_Status
      createAt: Date
      updateAt: Date
    }, ExtArgs["result"]["tbPhieuNhap"]>
    composites: {}
  }


  type TbPhieuNhapGetPayload<S extends boolean | null | undefined | TbPhieuNhapDefaultArgs> = $Result.GetResult<Prisma.$TbPhieuNhapPayload, S>

  type TbPhieuNhapCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbPhieuNhapFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbPhieuNhapCountAggregateInputType | true
    }

  export interface TbPhieuNhapDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbPhieuNhap'], meta: { name: 'TbPhieuNhap' } }
    /**
     * Find zero or one TbPhieuNhap that matches the filter.
     * @param {TbPhieuNhapFindUniqueArgs} args - Arguments to find a TbPhieuNhap
     * @example
     * // Get one TbPhieuNhap
     * const tbPhieuNhap = await prisma.tbPhieuNhap.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbPhieuNhapFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbPhieuNhapFindUniqueArgs<ExtArgs>>
    ): Prisma__TbPhieuNhapClient<$Result.GetResult<Prisma.$TbPhieuNhapPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbPhieuNhap that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbPhieuNhapFindUniqueOrThrowArgs} args - Arguments to find a TbPhieuNhap
     * @example
     * // Get one TbPhieuNhap
     * const tbPhieuNhap = await prisma.tbPhieuNhap.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbPhieuNhapFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbPhieuNhapFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbPhieuNhapClient<$Result.GetResult<Prisma.$TbPhieuNhapPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbPhieuNhap that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhieuNhapFindFirstArgs} args - Arguments to find a TbPhieuNhap
     * @example
     * // Get one TbPhieuNhap
     * const tbPhieuNhap = await prisma.tbPhieuNhap.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbPhieuNhapFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbPhieuNhapFindFirstArgs<ExtArgs>>
    ): Prisma__TbPhieuNhapClient<$Result.GetResult<Prisma.$TbPhieuNhapPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbPhieuNhap that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhieuNhapFindFirstOrThrowArgs} args - Arguments to find a TbPhieuNhap
     * @example
     * // Get one TbPhieuNhap
     * const tbPhieuNhap = await prisma.tbPhieuNhap.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbPhieuNhapFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbPhieuNhapFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbPhieuNhapClient<$Result.GetResult<Prisma.$TbPhieuNhapPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbPhieuNhaps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhieuNhapFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbPhieuNhaps
     * const tbPhieuNhaps = await prisma.tbPhieuNhap.findMany()
     * 
     * // Get first 10 TbPhieuNhaps
     * const tbPhieuNhaps = await prisma.tbPhieuNhap.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbPhieuNhapWithIdOnly = await prisma.tbPhieuNhap.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbPhieuNhapFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbPhieuNhapFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbPhieuNhapPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbPhieuNhap.
     * @param {TbPhieuNhapCreateArgs} args - Arguments to create a TbPhieuNhap.
     * @example
     * // Create one TbPhieuNhap
     * const TbPhieuNhap = await prisma.tbPhieuNhap.create({
     *   data: {
     *     // ... data to create a TbPhieuNhap
     *   }
     * })
     * 
    **/
    create<T extends TbPhieuNhapCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbPhieuNhapCreateArgs<ExtArgs>>
    ): Prisma__TbPhieuNhapClient<$Result.GetResult<Prisma.$TbPhieuNhapPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbPhieuNhaps.
     *     @param {TbPhieuNhapCreateManyArgs} args - Arguments to create many TbPhieuNhaps.
     *     @example
     *     // Create many TbPhieuNhaps
     *     const tbPhieuNhap = await prisma.tbPhieuNhap.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbPhieuNhapCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbPhieuNhapCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbPhieuNhap.
     * @param {TbPhieuNhapDeleteArgs} args - Arguments to delete one TbPhieuNhap.
     * @example
     * // Delete one TbPhieuNhap
     * const TbPhieuNhap = await prisma.tbPhieuNhap.delete({
     *   where: {
     *     // ... filter to delete one TbPhieuNhap
     *   }
     * })
     * 
    **/
    delete<T extends TbPhieuNhapDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbPhieuNhapDeleteArgs<ExtArgs>>
    ): Prisma__TbPhieuNhapClient<$Result.GetResult<Prisma.$TbPhieuNhapPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbPhieuNhap.
     * @param {TbPhieuNhapUpdateArgs} args - Arguments to update one TbPhieuNhap.
     * @example
     * // Update one TbPhieuNhap
     * const tbPhieuNhap = await prisma.tbPhieuNhap.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbPhieuNhapUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbPhieuNhapUpdateArgs<ExtArgs>>
    ): Prisma__TbPhieuNhapClient<$Result.GetResult<Prisma.$TbPhieuNhapPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbPhieuNhaps.
     * @param {TbPhieuNhapDeleteManyArgs} args - Arguments to filter TbPhieuNhaps to delete.
     * @example
     * // Delete a few TbPhieuNhaps
     * const { count } = await prisma.tbPhieuNhap.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbPhieuNhapDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbPhieuNhapDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbPhieuNhaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhieuNhapUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbPhieuNhaps
     * const tbPhieuNhap = await prisma.tbPhieuNhap.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbPhieuNhapUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbPhieuNhapUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbPhieuNhap.
     * @param {TbPhieuNhapUpsertArgs} args - Arguments to update or create a TbPhieuNhap.
     * @example
     * // Update or create a TbPhieuNhap
     * const tbPhieuNhap = await prisma.tbPhieuNhap.upsert({
     *   create: {
     *     // ... data to create a TbPhieuNhap
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbPhieuNhap we want to update
     *   }
     * })
    **/
    upsert<T extends TbPhieuNhapUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbPhieuNhapUpsertArgs<ExtArgs>>
    ): Prisma__TbPhieuNhapClient<$Result.GetResult<Prisma.$TbPhieuNhapPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbPhieuNhaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhieuNhapCountArgs} args - Arguments to filter TbPhieuNhaps to count.
     * @example
     * // Count the number of TbPhieuNhaps
     * const count = await prisma.tbPhieuNhap.count({
     *   where: {
     *     // ... the filter for the TbPhieuNhaps we want to count
     *   }
     * })
    **/
    count<T extends TbPhieuNhapCountArgs>(
      args?: Subset<T, TbPhieuNhapCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbPhieuNhapCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbPhieuNhap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhieuNhapAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbPhieuNhapAggregateArgs>(args: Subset<T, TbPhieuNhapAggregateArgs>): Prisma.PrismaPromise<GetTbPhieuNhapAggregateType<T>>

    /**
     * Group by TbPhieuNhap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhieuNhapGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbPhieuNhapGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbPhieuNhapGroupByArgs['orderBy'] }
        : { orderBy?: TbPhieuNhapGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbPhieuNhapGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbPhieuNhapGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbPhieuNhap model
   */
  readonly fields: TbPhieuNhapFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbPhieuNhap.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbPhieuNhapClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    NhaCungCap<T extends TbPhieuNhap$NhaCungCapArgs<ExtArgs> = {}>(args?: Subset<T, TbPhieuNhap$NhaCungCapArgs<ExtArgs>>): Prisma__TbNhaCungCapClient<$Result.GetResult<Prisma.$TbNhaCungCapPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    KhachSan<T extends TbKhachSanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbKhachSanDefaultArgs<ExtArgs>>): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    ChiTietNoiDungNhap<T extends TbPhieuNhap$ChiTietNoiDungNhapArgs<ExtArgs> = {}>(args?: Subset<T, TbPhieuNhap$ChiTietNoiDungNhapArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbPhieuNhap model
   */ 
  interface TbPhieuNhapFieldRefs {
    readonly id: FieldRef<"TbPhieuNhap", 'String'>
    readonly MaKhachSan: FieldRef<"TbPhieuNhap", 'String'>
    readonly MaNhaCungCap: FieldRef<"TbPhieuNhap", 'String'>
    readonly CacKhoanChiPhiPhatSinhHangHoa: FieldRef<"TbPhieuNhap", 'Decimal'>
    readonly TongTienCanTra: FieldRef<"TbPhieuNhap", 'Decimal'>
    readonly TienDaTra: FieldRef<"TbPhieuNhap", 'Decimal'>
    readonly Status: FieldRef<"TbPhieuNhap", 'tbphieunhap_Status'>
    readonly StatusThongBao: FieldRef<"TbPhieuNhap", 'thongbao_Status'>
    readonly createAt: FieldRef<"TbPhieuNhap", 'DateTime'>
    readonly updateAt: FieldRef<"TbPhieuNhap", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * TbPhieuNhap findUnique
   */
  export type TbPhieuNhapFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhieuNhap
     */
    select?: TbPhieuNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhieuNhapInclude<ExtArgs> | null
    /**
     * Filter, which TbPhieuNhap to fetch.
     */
    where: TbPhieuNhapWhereUniqueInput
  }


  /**
   * TbPhieuNhap findUniqueOrThrow
   */
  export type TbPhieuNhapFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhieuNhap
     */
    select?: TbPhieuNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhieuNhapInclude<ExtArgs> | null
    /**
     * Filter, which TbPhieuNhap to fetch.
     */
    where: TbPhieuNhapWhereUniqueInput
  }


  /**
   * TbPhieuNhap findFirst
   */
  export type TbPhieuNhapFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhieuNhap
     */
    select?: TbPhieuNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhieuNhapInclude<ExtArgs> | null
    /**
     * Filter, which TbPhieuNhap to fetch.
     */
    where?: TbPhieuNhapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbPhieuNhaps to fetch.
     */
    orderBy?: TbPhieuNhapOrderByWithRelationInput | TbPhieuNhapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbPhieuNhaps.
     */
    cursor?: TbPhieuNhapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbPhieuNhaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbPhieuNhaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbPhieuNhaps.
     */
    distinct?: TbPhieuNhapScalarFieldEnum | TbPhieuNhapScalarFieldEnum[]
  }


  /**
   * TbPhieuNhap findFirstOrThrow
   */
  export type TbPhieuNhapFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhieuNhap
     */
    select?: TbPhieuNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhieuNhapInclude<ExtArgs> | null
    /**
     * Filter, which TbPhieuNhap to fetch.
     */
    where?: TbPhieuNhapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbPhieuNhaps to fetch.
     */
    orderBy?: TbPhieuNhapOrderByWithRelationInput | TbPhieuNhapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbPhieuNhaps.
     */
    cursor?: TbPhieuNhapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbPhieuNhaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbPhieuNhaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbPhieuNhaps.
     */
    distinct?: TbPhieuNhapScalarFieldEnum | TbPhieuNhapScalarFieldEnum[]
  }


  /**
   * TbPhieuNhap findMany
   */
  export type TbPhieuNhapFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhieuNhap
     */
    select?: TbPhieuNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhieuNhapInclude<ExtArgs> | null
    /**
     * Filter, which TbPhieuNhaps to fetch.
     */
    where?: TbPhieuNhapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbPhieuNhaps to fetch.
     */
    orderBy?: TbPhieuNhapOrderByWithRelationInput | TbPhieuNhapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbPhieuNhaps.
     */
    cursor?: TbPhieuNhapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbPhieuNhaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbPhieuNhaps.
     */
    skip?: number
    distinct?: TbPhieuNhapScalarFieldEnum | TbPhieuNhapScalarFieldEnum[]
  }


  /**
   * TbPhieuNhap create
   */
  export type TbPhieuNhapCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhieuNhap
     */
    select?: TbPhieuNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhieuNhapInclude<ExtArgs> | null
    /**
     * The data needed to create a TbPhieuNhap.
     */
    data: XOR<TbPhieuNhapCreateInput, TbPhieuNhapUncheckedCreateInput>
  }


  /**
   * TbPhieuNhap createMany
   */
  export type TbPhieuNhapCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbPhieuNhaps.
     */
    data: TbPhieuNhapCreateManyInput | TbPhieuNhapCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbPhieuNhap update
   */
  export type TbPhieuNhapUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhieuNhap
     */
    select?: TbPhieuNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhieuNhapInclude<ExtArgs> | null
    /**
     * The data needed to update a TbPhieuNhap.
     */
    data: XOR<TbPhieuNhapUpdateInput, TbPhieuNhapUncheckedUpdateInput>
    /**
     * Choose, which TbPhieuNhap to update.
     */
    where: TbPhieuNhapWhereUniqueInput
  }


  /**
   * TbPhieuNhap updateMany
   */
  export type TbPhieuNhapUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbPhieuNhaps.
     */
    data: XOR<TbPhieuNhapUpdateManyMutationInput, TbPhieuNhapUncheckedUpdateManyInput>
    /**
     * Filter which TbPhieuNhaps to update
     */
    where?: TbPhieuNhapWhereInput
  }


  /**
   * TbPhieuNhap upsert
   */
  export type TbPhieuNhapUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhieuNhap
     */
    select?: TbPhieuNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhieuNhapInclude<ExtArgs> | null
    /**
     * The filter to search for the TbPhieuNhap to update in case it exists.
     */
    where: TbPhieuNhapWhereUniqueInput
    /**
     * In case the TbPhieuNhap found by the `where` argument doesn't exist, create a new TbPhieuNhap with this data.
     */
    create: XOR<TbPhieuNhapCreateInput, TbPhieuNhapUncheckedCreateInput>
    /**
     * In case the TbPhieuNhap was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbPhieuNhapUpdateInput, TbPhieuNhapUncheckedUpdateInput>
  }


  /**
   * TbPhieuNhap delete
   */
  export type TbPhieuNhapDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhieuNhap
     */
    select?: TbPhieuNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhieuNhapInclude<ExtArgs> | null
    /**
     * Filter which TbPhieuNhap to delete.
     */
    where: TbPhieuNhapWhereUniqueInput
  }


  /**
   * TbPhieuNhap deleteMany
   */
  export type TbPhieuNhapDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbPhieuNhaps to delete
     */
    where?: TbPhieuNhapWhereInput
  }


  /**
   * TbPhieuNhap.NhaCungCap
   */
  export type TbPhieuNhap$NhaCungCapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhaCungCap
     */
    select?: TbNhaCungCapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhaCungCapInclude<ExtArgs> | null
    where?: TbNhaCungCapWhereInput
  }


  /**
   * TbPhieuNhap.ChiTietNoiDungNhap
   */
  export type TbPhieuNhap$ChiTietNoiDungNhapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietNoiDungNhap
     */
    select?: TbChiTietNoiDungNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietNoiDungNhapInclude<ExtArgs> | null
    where?: TbChiTietNoiDungNhapWhereInput
    orderBy?: TbChiTietNoiDungNhapOrderByWithRelationInput | TbChiTietNoiDungNhapOrderByWithRelationInput[]
    cursor?: TbChiTietNoiDungNhapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbChiTietNoiDungNhapScalarFieldEnum | TbChiTietNoiDungNhapScalarFieldEnum[]
  }


  /**
   * TbPhieuNhap without action
   */
  export type TbPhieuNhapDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhieuNhap
     */
    select?: TbPhieuNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhieuNhapInclude<ExtArgs> | null
  }



  /**
   * Model TbChiTietNoiDungNhap
   */

  export type AggregateTbChiTietNoiDungNhap = {
    _count: TbChiTietNoiDungNhapCountAggregateOutputType | null
    _avg: TbChiTietNoiDungNhapAvgAggregateOutputType | null
    _sum: TbChiTietNoiDungNhapSumAggregateOutputType | null
    _min: TbChiTietNoiDungNhapMinAggregateOutputType | null
    _max: TbChiTietNoiDungNhapMaxAggregateOutputType | null
  }

  export type TbChiTietNoiDungNhapAvgAggregateOutputType = {
    ThanhTien: Decimal | null
    SLNhap: number | null
    GiamGia: Decimal | null
  }

  export type TbChiTietNoiDungNhapSumAggregateOutputType = {
    ThanhTien: Decimal | null
    SLNhap: number | null
    GiamGia: Decimal | null
  }

  export type TbChiTietNoiDungNhapMinAggregateOutputType = {
    id: string | null
    MaHangHoa: string | null
    MaPhieuNhap: string | null
    ThanhTien: Decimal | null
    SLNhap: number | null
    GiamGia: Decimal | null
    createAt: Date | null
    updateAt: Date | null
  }

  export type TbChiTietNoiDungNhapMaxAggregateOutputType = {
    id: string | null
    MaHangHoa: string | null
    MaPhieuNhap: string | null
    ThanhTien: Decimal | null
    SLNhap: number | null
    GiamGia: Decimal | null
    createAt: Date | null
    updateAt: Date | null
  }

  export type TbChiTietNoiDungNhapCountAggregateOutputType = {
    id: number
    MaHangHoa: number
    MaPhieuNhap: number
    ThanhTien: number
    SLNhap: number
    GiamGia: number
    createAt: number
    updateAt: number
    _all: number
  }


  export type TbChiTietNoiDungNhapAvgAggregateInputType = {
    ThanhTien?: true
    SLNhap?: true
    GiamGia?: true
  }

  export type TbChiTietNoiDungNhapSumAggregateInputType = {
    ThanhTien?: true
    SLNhap?: true
    GiamGia?: true
  }

  export type TbChiTietNoiDungNhapMinAggregateInputType = {
    id?: true
    MaHangHoa?: true
    MaPhieuNhap?: true
    ThanhTien?: true
    SLNhap?: true
    GiamGia?: true
    createAt?: true
    updateAt?: true
  }

  export type TbChiTietNoiDungNhapMaxAggregateInputType = {
    id?: true
    MaHangHoa?: true
    MaPhieuNhap?: true
    ThanhTien?: true
    SLNhap?: true
    GiamGia?: true
    createAt?: true
    updateAt?: true
  }

  export type TbChiTietNoiDungNhapCountAggregateInputType = {
    id?: true
    MaHangHoa?: true
    MaPhieuNhap?: true
    ThanhTien?: true
    SLNhap?: true
    GiamGia?: true
    createAt?: true
    updateAt?: true
    _all?: true
  }

  export type TbChiTietNoiDungNhapAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbChiTietNoiDungNhap to aggregate.
     */
    where?: TbChiTietNoiDungNhapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbChiTietNoiDungNhaps to fetch.
     */
    orderBy?: TbChiTietNoiDungNhapOrderByWithRelationInput | TbChiTietNoiDungNhapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbChiTietNoiDungNhapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbChiTietNoiDungNhaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbChiTietNoiDungNhaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbChiTietNoiDungNhaps
    **/
    _count?: true | TbChiTietNoiDungNhapCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbChiTietNoiDungNhapAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbChiTietNoiDungNhapSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbChiTietNoiDungNhapMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbChiTietNoiDungNhapMaxAggregateInputType
  }

  export type GetTbChiTietNoiDungNhapAggregateType<T extends TbChiTietNoiDungNhapAggregateArgs> = {
        [P in keyof T & keyof AggregateTbChiTietNoiDungNhap]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbChiTietNoiDungNhap[P]>
      : GetScalarType<T[P], AggregateTbChiTietNoiDungNhap[P]>
  }




  export type TbChiTietNoiDungNhapGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbChiTietNoiDungNhapWhereInput
    orderBy?: TbChiTietNoiDungNhapOrderByWithAggregationInput | TbChiTietNoiDungNhapOrderByWithAggregationInput[]
    by: TbChiTietNoiDungNhapScalarFieldEnum[] | TbChiTietNoiDungNhapScalarFieldEnum
    having?: TbChiTietNoiDungNhapScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbChiTietNoiDungNhapCountAggregateInputType | true
    _avg?: TbChiTietNoiDungNhapAvgAggregateInputType
    _sum?: TbChiTietNoiDungNhapSumAggregateInputType
    _min?: TbChiTietNoiDungNhapMinAggregateInputType
    _max?: TbChiTietNoiDungNhapMaxAggregateInputType
  }

  export type TbChiTietNoiDungNhapGroupByOutputType = {
    id: string
    MaHangHoa: string
    MaPhieuNhap: string
    ThanhTien: Decimal
    SLNhap: number
    GiamGia: Decimal | null
    createAt: Date
    updateAt: Date
    _count: TbChiTietNoiDungNhapCountAggregateOutputType | null
    _avg: TbChiTietNoiDungNhapAvgAggregateOutputType | null
    _sum: TbChiTietNoiDungNhapSumAggregateOutputType | null
    _min: TbChiTietNoiDungNhapMinAggregateOutputType | null
    _max: TbChiTietNoiDungNhapMaxAggregateOutputType | null
  }

  type GetTbChiTietNoiDungNhapGroupByPayload<T extends TbChiTietNoiDungNhapGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbChiTietNoiDungNhapGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbChiTietNoiDungNhapGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbChiTietNoiDungNhapGroupByOutputType[P]>
            : GetScalarType<T[P], TbChiTietNoiDungNhapGroupByOutputType[P]>
        }
      >
    >


  export type TbChiTietNoiDungNhapSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaHangHoa?: boolean
    MaPhieuNhap?: boolean
    ThanhTien?: boolean
    SLNhap?: boolean
    GiamGia?: boolean
    createAt?: boolean
    updateAt?: boolean
    HangHoa?: boolean | TbHangHoaDefaultArgs<ExtArgs>
    PhieuNhap?: boolean | TbPhieuNhapDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbChiTietNoiDungNhap"]>

  export type TbChiTietNoiDungNhapSelectScalar = {
    id?: boolean
    MaHangHoa?: boolean
    MaPhieuNhap?: boolean
    ThanhTien?: boolean
    SLNhap?: boolean
    GiamGia?: boolean
    createAt?: boolean
    updateAt?: boolean
  }

  export type TbChiTietNoiDungNhapInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    HangHoa?: boolean | TbHangHoaDefaultArgs<ExtArgs>
    PhieuNhap?: boolean | TbPhieuNhapDefaultArgs<ExtArgs>
  }


  export type $TbChiTietNoiDungNhapPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbChiTietNoiDungNhap"
    objects: {
      HangHoa: Prisma.$TbHangHoaPayload<ExtArgs>
      PhieuNhap: Prisma.$TbPhieuNhapPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaHangHoa: string
      MaPhieuNhap: string
      ThanhTien: Prisma.Decimal
      SLNhap: number
      GiamGia: Prisma.Decimal | null
      createAt: Date
      updateAt: Date
    }, ExtArgs["result"]["tbChiTietNoiDungNhap"]>
    composites: {}
  }


  type TbChiTietNoiDungNhapGetPayload<S extends boolean | null | undefined | TbChiTietNoiDungNhapDefaultArgs> = $Result.GetResult<Prisma.$TbChiTietNoiDungNhapPayload, S>

  type TbChiTietNoiDungNhapCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbChiTietNoiDungNhapFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbChiTietNoiDungNhapCountAggregateInputType | true
    }

  export interface TbChiTietNoiDungNhapDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbChiTietNoiDungNhap'], meta: { name: 'TbChiTietNoiDungNhap' } }
    /**
     * Find zero or one TbChiTietNoiDungNhap that matches the filter.
     * @param {TbChiTietNoiDungNhapFindUniqueArgs} args - Arguments to find a TbChiTietNoiDungNhap
     * @example
     * // Get one TbChiTietNoiDungNhap
     * const tbChiTietNoiDungNhap = await prisma.tbChiTietNoiDungNhap.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbChiTietNoiDungNhapFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiTietNoiDungNhapFindUniqueArgs<ExtArgs>>
    ): Prisma__TbChiTietNoiDungNhapClient<$Result.GetResult<Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbChiTietNoiDungNhap that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbChiTietNoiDungNhapFindUniqueOrThrowArgs} args - Arguments to find a TbChiTietNoiDungNhap
     * @example
     * // Get one TbChiTietNoiDungNhap
     * const tbChiTietNoiDungNhap = await prisma.tbChiTietNoiDungNhap.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbChiTietNoiDungNhapFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiTietNoiDungNhapFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbChiTietNoiDungNhapClient<$Result.GetResult<Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbChiTietNoiDungNhap that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietNoiDungNhapFindFirstArgs} args - Arguments to find a TbChiTietNoiDungNhap
     * @example
     * // Get one TbChiTietNoiDungNhap
     * const tbChiTietNoiDungNhap = await prisma.tbChiTietNoiDungNhap.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbChiTietNoiDungNhapFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiTietNoiDungNhapFindFirstArgs<ExtArgs>>
    ): Prisma__TbChiTietNoiDungNhapClient<$Result.GetResult<Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbChiTietNoiDungNhap that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietNoiDungNhapFindFirstOrThrowArgs} args - Arguments to find a TbChiTietNoiDungNhap
     * @example
     * // Get one TbChiTietNoiDungNhap
     * const tbChiTietNoiDungNhap = await prisma.tbChiTietNoiDungNhap.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbChiTietNoiDungNhapFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiTietNoiDungNhapFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbChiTietNoiDungNhapClient<$Result.GetResult<Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbChiTietNoiDungNhaps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietNoiDungNhapFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbChiTietNoiDungNhaps
     * const tbChiTietNoiDungNhaps = await prisma.tbChiTietNoiDungNhap.findMany()
     * 
     * // Get first 10 TbChiTietNoiDungNhaps
     * const tbChiTietNoiDungNhaps = await prisma.tbChiTietNoiDungNhap.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbChiTietNoiDungNhapWithIdOnly = await prisma.tbChiTietNoiDungNhap.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbChiTietNoiDungNhapFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiTietNoiDungNhapFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbChiTietNoiDungNhap.
     * @param {TbChiTietNoiDungNhapCreateArgs} args - Arguments to create a TbChiTietNoiDungNhap.
     * @example
     * // Create one TbChiTietNoiDungNhap
     * const TbChiTietNoiDungNhap = await prisma.tbChiTietNoiDungNhap.create({
     *   data: {
     *     // ... data to create a TbChiTietNoiDungNhap
     *   }
     * })
     * 
    **/
    create<T extends TbChiTietNoiDungNhapCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiTietNoiDungNhapCreateArgs<ExtArgs>>
    ): Prisma__TbChiTietNoiDungNhapClient<$Result.GetResult<Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbChiTietNoiDungNhaps.
     *     @param {TbChiTietNoiDungNhapCreateManyArgs} args - Arguments to create many TbChiTietNoiDungNhaps.
     *     @example
     *     // Create many TbChiTietNoiDungNhaps
     *     const tbChiTietNoiDungNhap = await prisma.tbChiTietNoiDungNhap.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbChiTietNoiDungNhapCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiTietNoiDungNhapCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbChiTietNoiDungNhap.
     * @param {TbChiTietNoiDungNhapDeleteArgs} args - Arguments to delete one TbChiTietNoiDungNhap.
     * @example
     * // Delete one TbChiTietNoiDungNhap
     * const TbChiTietNoiDungNhap = await prisma.tbChiTietNoiDungNhap.delete({
     *   where: {
     *     // ... filter to delete one TbChiTietNoiDungNhap
     *   }
     * })
     * 
    **/
    delete<T extends TbChiTietNoiDungNhapDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiTietNoiDungNhapDeleteArgs<ExtArgs>>
    ): Prisma__TbChiTietNoiDungNhapClient<$Result.GetResult<Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbChiTietNoiDungNhap.
     * @param {TbChiTietNoiDungNhapUpdateArgs} args - Arguments to update one TbChiTietNoiDungNhap.
     * @example
     * // Update one TbChiTietNoiDungNhap
     * const tbChiTietNoiDungNhap = await prisma.tbChiTietNoiDungNhap.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbChiTietNoiDungNhapUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiTietNoiDungNhapUpdateArgs<ExtArgs>>
    ): Prisma__TbChiTietNoiDungNhapClient<$Result.GetResult<Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbChiTietNoiDungNhaps.
     * @param {TbChiTietNoiDungNhapDeleteManyArgs} args - Arguments to filter TbChiTietNoiDungNhaps to delete.
     * @example
     * // Delete a few TbChiTietNoiDungNhaps
     * const { count } = await prisma.tbChiTietNoiDungNhap.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbChiTietNoiDungNhapDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbChiTietNoiDungNhapDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbChiTietNoiDungNhaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietNoiDungNhapUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbChiTietNoiDungNhaps
     * const tbChiTietNoiDungNhap = await prisma.tbChiTietNoiDungNhap.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbChiTietNoiDungNhapUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiTietNoiDungNhapUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbChiTietNoiDungNhap.
     * @param {TbChiTietNoiDungNhapUpsertArgs} args - Arguments to update or create a TbChiTietNoiDungNhap.
     * @example
     * // Update or create a TbChiTietNoiDungNhap
     * const tbChiTietNoiDungNhap = await prisma.tbChiTietNoiDungNhap.upsert({
     *   create: {
     *     // ... data to create a TbChiTietNoiDungNhap
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbChiTietNoiDungNhap we want to update
     *   }
     * })
    **/
    upsert<T extends TbChiTietNoiDungNhapUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbChiTietNoiDungNhapUpsertArgs<ExtArgs>>
    ): Prisma__TbChiTietNoiDungNhapClient<$Result.GetResult<Prisma.$TbChiTietNoiDungNhapPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbChiTietNoiDungNhaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietNoiDungNhapCountArgs} args - Arguments to filter TbChiTietNoiDungNhaps to count.
     * @example
     * // Count the number of TbChiTietNoiDungNhaps
     * const count = await prisma.tbChiTietNoiDungNhap.count({
     *   where: {
     *     // ... the filter for the TbChiTietNoiDungNhaps we want to count
     *   }
     * })
    **/
    count<T extends TbChiTietNoiDungNhapCountArgs>(
      args?: Subset<T, TbChiTietNoiDungNhapCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbChiTietNoiDungNhapCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbChiTietNoiDungNhap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietNoiDungNhapAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbChiTietNoiDungNhapAggregateArgs>(args: Subset<T, TbChiTietNoiDungNhapAggregateArgs>): Prisma.PrismaPromise<GetTbChiTietNoiDungNhapAggregateType<T>>

    /**
     * Group by TbChiTietNoiDungNhap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbChiTietNoiDungNhapGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbChiTietNoiDungNhapGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbChiTietNoiDungNhapGroupByArgs['orderBy'] }
        : { orderBy?: TbChiTietNoiDungNhapGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbChiTietNoiDungNhapGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbChiTietNoiDungNhapGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbChiTietNoiDungNhap model
   */
  readonly fields: TbChiTietNoiDungNhapFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbChiTietNoiDungNhap.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbChiTietNoiDungNhapClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    HangHoa<T extends TbHangHoaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbHangHoaDefaultArgs<ExtArgs>>): Prisma__TbHangHoaClient<$Result.GetResult<Prisma.$TbHangHoaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    PhieuNhap<T extends TbPhieuNhapDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbPhieuNhapDefaultArgs<ExtArgs>>): Prisma__TbPhieuNhapClient<$Result.GetResult<Prisma.$TbPhieuNhapPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbChiTietNoiDungNhap model
   */ 
  interface TbChiTietNoiDungNhapFieldRefs {
    readonly id: FieldRef<"TbChiTietNoiDungNhap", 'String'>
    readonly MaHangHoa: FieldRef<"TbChiTietNoiDungNhap", 'String'>
    readonly MaPhieuNhap: FieldRef<"TbChiTietNoiDungNhap", 'String'>
    readonly ThanhTien: FieldRef<"TbChiTietNoiDungNhap", 'Decimal'>
    readonly SLNhap: FieldRef<"TbChiTietNoiDungNhap", 'Int'>
    readonly GiamGia: FieldRef<"TbChiTietNoiDungNhap", 'Decimal'>
    readonly createAt: FieldRef<"TbChiTietNoiDungNhap", 'DateTime'>
    readonly updateAt: FieldRef<"TbChiTietNoiDungNhap", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * TbChiTietNoiDungNhap findUnique
   */
  export type TbChiTietNoiDungNhapFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietNoiDungNhap
     */
    select?: TbChiTietNoiDungNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietNoiDungNhapInclude<ExtArgs> | null
    /**
     * Filter, which TbChiTietNoiDungNhap to fetch.
     */
    where: TbChiTietNoiDungNhapWhereUniqueInput
  }


  /**
   * TbChiTietNoiDungNhap findUniqueOrThrow
   */
  export type TbChiTietNoiDungNhapFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietNoiDungNhap
     */
    select?: TbChiTietNoiDungNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietNoiDungNhapInclude<ExtArgs> | null
    /**
     * Filter, which TbChiTietNoiDungNhap to fetch.
     */
    where: TbChiTietNoiDungNhapWhereUniqueInput
  }


  /**
   * TbChiTietNoiDungNhap findFirst
   */
  export type TbChiTietNoiDungNhapFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietNoiDungNhap
     */
    select?: TbChiTietNoiDungNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietNoiDungNhapInclude<ExtArgs> | null
    /**
     * Filter, which TbChiTietNoiDungNhap to fetch.
     */
    where?: TbChiTietNoiDungNhapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbChiTietNoiDungNhaps to fetch.
     */
    orderBy?: TbChiTietNoiDungNhapOrderByWithRelationInput | TbChiTietNoiDungNhapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbChiTietNoiDungNhaps.
     */
    cursor?: TbChiTietNoiDungNhapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbChiTietNoiDungNhaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbChiTietNoiDungNhaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbChiTietNoiDungNhaps.
     */
    distinct?: TbChiTietNoiDungNhapScalarFieldEnum | TbChiTietNoiDungNhapScalarFieldEnum[]
  }


  /**
   * TbChiTietNoiDungNhap findFirstOrThrow
   */
  export type TbChiTietNoiDungNhapFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietNoiDungNhap
     */
    select?: TbChiTietNoiDungNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietNoiDungNhapInclude<ExtArgs> | null
    /**
     * Filter, which TbChiTietNoiDungNhap to fetch.
     */
    where?: TbChiTietNoiDungNhapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbChiTietNoiDungNhaps to fetch.
     */
    orderBy?: TbChiTietNoiDungNhapOrderByWithRelationInput | TbChiTietNoiDungNhapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbChiTietNoiDungNhaps.
     */
    cursor?: TbChiTietNoiDungNhapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbChiTietNoiDungNhaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbChiTietNoiDungNhaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbChiTietNoiDungNhaps.
     */
    distinct?: TbChiTietNoiDungNhapScalarFieldEnum | TbChiTietNoiDungNhapScalarFieldEnum[]
  }


  /**
   * TbChiTietNoiDungNhap findMany
   */
  export type TbChiTietNoiDungNhapFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietNoiDungNhap
     */
    select?: TbChiTietNoiDungNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietNoiDungNhapInclude<ExtArgs> | null
    /**
     * Filter, which TbChiTietNoiDungNhaps to fetch.
     */
    where?: TbChiTietNoiDungNhapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbChiTietNoiDungNhaps to fetch.
     */
    orderBy?: TbChiTietNoiDungNhapOrderByWithRelationInput | TbChiTietNoiDungNhapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbChiTietNoiDungNhaps.
     */
    cursor?: TbChiTietNoiDungNhapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbChiTietNoiDungNhaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbChiTietNoiDungNhaps.
     */
    skip?: number
    distinct?: TbChiTietNoiDungNhapScalarFieldEnum | TbChiTietNoiDungNhapScalarFieldEnum[]
  }


  /**
   * TbChiTietNoiDungNhap create
   */
  export type TbChiTietNoiDungNhapCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietNoiDungNhap
     */
    select?: TbChiTietNoiDungNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietNoiDungNhapInclude<ExtArgs> | null
    /**
     * The data needed to create a TbChiTietNoiDungNhap.
     */
    data: XOR<TbChiTietNoiDungNhapCreateInput, TbChiTietNoiDungNhapUncheckedCreateInput>
  }


  /**
   * TbChiTietNoiDungNhap createMany
   */
  export type TbChiTietNoiDungNhapCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbChiTietNoiDungNhaps.
     */
    data: TbChiTietNoiDungNhapCreateManyInput | TbChiTietNoiDungNhapCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbChiTietNoiDungNhap update
   */
  export type TbChiTietNoiDungNhapUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietNoiDungNhap
     */
    select?: TbChiTietNoiDungNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietNoiDungNhapInclude<ExtArgs> | null
    /**
     * The data needed to update a TbChiTietNoiDungNhap.
     */
    data: XOR<TbChiTietNoiDungNhapUpdateInput, TbChiTietNoiDungNhapUncheckedUpdateInput>
    /**
     * Choose, which TbChiTietNoiDungNhap to update.
     */
    where: TbChiTietNoiDungNhapWhereUniqueInput
  }


  /**
   * TbChiTietNoiDungNhap updateMany
   */
  export type TbChiTietNoiDungNhapUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbChiTietNoiDungNhaps.
     */
    data: XOR<TbChiTietNoiDungNhapUpdateManyMutationInput, TbChiTietNoiDungNhapUncheckedUpdateManyInput>
    /**
     * Filter which TbChiTietNoiDungNhaps to update
     */
    where?: TbChiTietNoiDungNhapWhereInput
  }


  /**
   * TbChiTietNoiDungNhap upsert
   */
  export type TbChiTietNoiDungNhapUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietNoiDungNhap
     */
    select?: TbChiTietNoiDungNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietNoiDungNhapInclude<ExtArgs> | null
    /**
     * The filter to search for the TbChiTietNoiDungNhap to update in case it exists.
     */
    where: TbChiTietNoiDungNhapWhereUniqueInput
    /**
     * In case the TbChiTietNoiDungNhap found by the `where` argument doesn't exist, create a new TbChiTietNoiDungNhap with this data.
     */
    create: XOR<TbChiTietNoiDungNhapCreateInput, TbChiTietNoiDungNhapUncheckedCreateInput>
    /**
     * In case the TbChiTietNoiDungNhap was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbChiTietNoiDungNhapUpdateInput, TbChiTietNoiDungNhapUncheckedUpdateInput>
  }


  /**
   * TbChiTietNoiDungNhap delete
   */
  export type TbChiTietNoiDungNhapDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietNoiDungNhap
     */
    select?: TbChiTietNoiDungNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietNoiDungNhapInclude<ExtArgs> | null
    /**
     * Filter which TbChiTietNoiDungNhap to delete.
     */
    where: TbChiTietNoiDungNhapWhereUniqueInput
  }


  /**
   * TbChiTietNoiDungNhap deleteMany
   */
  export type TbChiTietNoiDungNhapDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbChiTietNoiDungNhaps to delete
     */
    where?: TbChiTietNoiDungNhapWhereInput
  }


  /**
   * TbChiTietNoiDungNhap without action
   */
  export type TbChiTietNoiDungNhapDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietNoiDungNhap
     */
    select?: TbChiTietNoiDungNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietNoiDungNhapInclude<ExtArgs> | null
  }



  /**
   * Model TbNhomHangHoa
   */

  export type AggregateTbNhomHangHoa = {
    _count: TbNhomHangHoaCountAggregateOutputType | null
    _min: TbNhomHangHoaMinAggregateOutputType | null
    _max: TbNhomHangHoaMaxAggregateOutputType | null
  }

  export type TbNhomHangHoaMinAggregateOutputType = {
    id: string | null
    MaKhachSan: string | null
    TenNhomHangHoa: string | null
  }

  export type TbNhomHangHoaMaxAggregateOutputType = {
    id: string | null
    MaKhachSan: string | null
    TenNhomHangHoa: string | null
  }

  export type TbNhomHangHoaCountAggregateOutputType = {
    id: number
    MaKhachSan: number
    TenNhomHangHoa: number
    _all: number
  }


  export type TbNhomHangHoaMinAggregateInputType = {
    id?: true
    MaKhachSan?: true
    TenNhomHangHoa?: true
  }

  export type TbNhomHangHoaMaxAggregateInputType = {
    id?: true
    MaKhachSan?: true
    TenNhomHangHoa?: true
  }

  export type TbNhomHangHoaCountAggregateInputType = {
    id?: true
    MaKhachSan?: true
    TenNhomHangHoa?: true
    _all?: true
  }

  export type TbNhomHangHoaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbNhomHangHoa to aggregate.
     */
    where?: TbNhomHangHoaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhomHangHoas to fetch.
     */
    orderBy?: TbNhomHangHoaOrderByWithRelationInput | TbNhomHangHoaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbNhomHangHoaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhomHangHoas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhomHangHoas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbNhomHangHoas
    **/
    _count?: true | TbNhomHangHoaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbNhomHangHoaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbNhomHangHoaMaxAggregateInputType
  }

  export type GetTbNhomHangHoaAggregateType<T extends TbNhomHangHoaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbNhomHangHoa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbNhomHangHoa[P]>
      : GetScalarType<T[P], AggregateTbNhomHangHoa[P]>
  }




  export type TbNhomHangHoaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbNhomHangHoaWhereInput
    orderBy?: TbNhomHangHoaOrderByWithAggregationInput | TbNhomHangHoaOrderByWithAggregationInput[]
    by: TbNhomHangHoaScalarFieldEnum[] | TbNhomHangHoaScalarFieldEnum
    having?: TbNhomHangHoaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbNhomHangHoaCountAggregateInputType | true
    _min?: TbNhomHangHoaMinAggregateInputType
    _max?: TbNhomHangHoaMaxAggregateInputType
  }

  export type TbNhomHangHoaGroupByOutputType = {
    id: string
    MaKhachSan: string
    TenNhomHangHoa: string
    _count: TbNhomHangHoaCountAggregateOutputType | null
    _min: TbNhomHangHoaMinAggregateOutputType | null
    _max: TbNhomHangHoaMaxAggregateOutputType | null
  }

  type GetTbNhomHangHoaGroupByPayload<T extends TbNhomHangHoaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbNhomHangHoaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbNhomHangHoaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbNhomHangHoaGroupByOutputType[P]>
            : GetScalarType<T[P], TbNhomHangHoaGroupByOutputType[P]>
        }
      >
    >


  export type TbNhomHangHoaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaKhachSan?: boolean
    TenNhomHangHoa?: boolean
    HangHoa?: boolean | TbNhomHangHoa$HangHoaArgs<ExtArgs>
    KhachSan?: boolean | TbKhachSanDefaultArgs<ExtArgs>
    _count?: boolean | TbNhomHangHoaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbNhomHangHoa"]>

  export type TbNhomHangHoaSelectScalar = {
    id?: boolean
    MaKhachSan?: boolean
    TenNhomHangHoa?: boolean
  }

  export type TbNhomHangHoaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    HangHoa?: boolean | TbNhomHangHoa$HangHoaArgs<ExtArgs>
    KhachSan?: boolean | TbKhachSanDefaultArgs<ExtArgs>
    _count?: boolean | TbNhomHangHoaCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbNhomHangHoaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbNhomHangHoa"
    objects: {
      HangHoa: Prisma.$TbHangHoaPayload<ExtArgs>[]
      KhachSan: Prisma.$TbKhachSanPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaKhachSan: string
      TenNhomHangHoa: string
    }, ExtArgs["result"]["tbNhomHangHoa"]>
    composites: {}
  }


  type TbNhomHangHoaGetPayload<S extends boolean | null | undefined | TbNhomHangHoaDefaultArgs> = $Result.GetResult<Prisma.$TbNhomHangHoaPayload, S>

  type TbNhomHangHoaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbNhomHangHoaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbNhomHangHoaCountAggregateInputType | true
    }

  export interface TbNhomHangHoaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbNhomHangHoa'], meta: { name: 'TbNhomHangHoa' } }
    /**
     * Find zero or one TbNhomHangHoa that matches the filter.
     * @param {TbNhomHangHoaFindUniqueArgs} args - Arguments to find a TbNhomHangHoa
     * @example
     * // Get one TbNhomHangHoa
     * const tbNhomHangHoa = await prisma.tbNhomHangHoa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbNhomHangHoaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomHangHoaFindUniqueArgs<ExtArgs>>
    ): Prisma__TbNhomHangHoaClient<$Result.GetResult<Prisma.$TbNhomHangHoaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbNhomHangHoa that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbNhomHangHoaFindUniqueOrThrowArgs} args - Arguments to find a TbNhomHangHoa
     * @example
     * // Get one TbNhomHangHoa
     * const tbNhomHangHoa = await prisma.tbNhomHangHoa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbNhomHangHoaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomHangHoaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbNhomHangHoaClient<$Result.GetResult<Prisma.$TbNhomHangHoaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbNhomHangHoa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomHangHoaFindFirstArgs} args - Arguments to find a TbNhomHangHoa
     * @example
     * // Get one TbNhomHangHoa
     * const tbNhomHangHoa = await prisma.tbNhomHangHoa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbNhomHangHoaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomHangHoaFindFirstArgs<ExtArgs>>
    ): Prisma__TbNhomHangHoaClient<$Result.GetResult<Prisma.$TbNhomHangHoaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbNhomHangHoa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomHangHoaFindFirstOrThrowArgs} args - Arguments to find a TbNhomHangHoa
     * @example
     * // Get one TbNhomHangHoa
     * const tbNhomHangHoa = await prisma.tbNhomHangHoa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbNhomHangHoaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomHangHoaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbNhomHangHoaClient<$Result.GetResult<Prisma.$TbNhomHangHoaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbNhomHangHoas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomHangHoaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbNhomHangHoas
     * const tbNhomHangHoas = await prisma.tbNhomHangHoa.findMany()
     * 
     * // Get first 10 TbNhomHangHoas
     * const tbNhomHangHoas = await prisma.tbNhomHangHoa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbNhomHangHoaWithIdOnly = await prisma.tbNhomHangHoa.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbNhomHangHoaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomHangHoaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbNhomHangHoaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbNhomHangHoa.
     * @param {TbNhomHangHoaCreateArgs} args - Arguments to create a TbNhomHangHoa.
     * @example
     * // Create one TbNhomHangHoa
     * const TbNhomHangHoa = await prisma.tbNhomHangHoa.create({
     *   data: {
     *     // ... data to create a TbNhomHangHoa
     *   }
     * })
     * 
    **/
    create<T extends TbNhomHangHoaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomHangHoaCreateArgs<ExtArgs>>
    ): Prisma__TbNhomHangHoaClient<$Result.GetResult<Prisma.$TbNhomHangHoaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbNhomHangHoas.
     *     @param {TbNhomHangHoaCreateManyArgs} args - Arguments to create many TbNhomHangHoas.
     *     @example
     *     // Create many TbNhomHangHoas
     *     const tbNhomHangHoa = await prisma.tbNhomHangHoa.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbNhomHangHoaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomHangHoaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbNhomHangHoa.
     * @param {TbNhomHangHoaDeleteArgs} args - Arguments to delete one TbNhomHangHoa.
     * @example
     * // Delete one TbNhomHangHoa
     * const TbNhomHangHoa = await prisma.tbNhomHangHoa.delete({
     *   where: {
     *     // ... filter to delete one TbNhomHangHoa
     *   }
     * })
     * 
    **/
    delete<T extends TbNhomHangHoaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomHangHoaDeleteArgs<ExtArgs>>
    ): Prisma__TbNhomHangHoaClient<$Result.GetResult<Prisma.$TbNhomHangHoaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbNhomHangHoa.
     * @param {TbNhomHangHoaUpdateArgs} args - Arguments to update one TbNhomHangHoa.
     * @example
     * // Update one TbNhomHangHoa
     * const tbNhomHangHoa = await prisma.tbNhomHangHoa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbNhomHangHoaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomHangHoaUpdateArgs<ExtArgs>>
    ): Prisma__TbNhomHangHoaClient<$Result.GetResult<Prisma.$TbNhomHangHoaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbNhomHangHoas.
     * @param {TbNhomHangHoaDeleteManyArgs} args - Arguments to filter TbNhomHangHoas to delete.
     * @example
     * // Delete a few TbNhomHangHoas
     * const { count } = await prisma.tbNhomHangHoa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbNhomHangHoaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomHangHoaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbNhomHangHoas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomHangHoaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbNhomHangHoas
     * const tbNhomHangHoa = await prisma.tbNhomHangHoa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbNhomHangHoaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomHangHoaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbNhomHangHoa.
     * @param {TbNhomHangHoaUpsertArgs} args - Arguments to update or create a TbNhomHangHoa.
     * @example
     * // Update or create a TbNhomHangHoa
     * const tbNhomHangHoa = await prisma.tbNhomHangHoa.upsert({
     *   create: {
     *     // ... data to create a TbNhomHangHoa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbNhomHangHoa we want to update
     *   }
     * })
    **/
    upsert<T extends TbNhomHangHoaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomHangHoaUpsertArgs<ExtArgs>>
    ): Prisma__TbNhomHangHoaClient<$Result.GetResult<Prisma.$TbNhomHangHoaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbNhomHangHoas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomHangHoaCountArgs} args - Arguments to filter TbNhomHangHoas to count.
     * @example
     * // Count the number of TbNhomHangHoas
     * const count = await prisma.tbNhomHangHoa.count({
     *   where: {
     *     // ... the filter for the TbNhomHangHoas we want to count
     *   }
     * })
    **/
    count<T extends TbNhomHangHoaCountArgs>(
      args?: Subset<T, TbNhomHangHoaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbNhomHangHoaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbNhomHangHoa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomHangHoaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbNhomHangHoaAggregateArgs>(args: Subset<T, TbNhomHangHoaAggregateArgs>): Prisma.PrismaPromise<GetTbNhomHangHoaAggregateType<T>>

    /**
     * Group by TbNhomHangHoa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomHangHoaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbNhomHangHoaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbNhomHangHoaGroupByArgs['orderBy'] }
        : { orderBy?: TbNhomHangHoaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbNhomHangHoaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbNhomHangHoaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbNhomHangHoa model
   */
  readonly fields: TbNhomHangHoaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbNhomHangHoa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbNhomHangHoaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    HangHoa<T extends TbNhomHangHoa$HangHoaArgs<ExtArgs> = {}>(args?: Subset<T, TbNhomHangHoa$HangHoaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbHangHoaPayload<ExtArgs>, T, 'findMany'> | Null>;

    KhachSan<T extends TbKhachSanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbKhachSanDefaultArgs<ExtArgs>>): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbNhomHangHoa model
   */ 
  interface TbNhomHangHoaFieldRefs {
    readonly id: FieldRef<"TbNhomHangHoa", 'String'>
    readonly MaKhachSan: FieldRef<"TbNhomHangHoa", 'String'>
    readonly TenNhomHangHoa: FieldRef<"TbNhomHangHoa", 'String'>
  }
    

  // Custom InputTypes

  /**
   * TbNhomHangHoa findUnique
   */
  export type TbNhomHangHoaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomHangHoa
     */
    select?: TbNhomHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomHangHoa to fetch.
     */
    where: TbNhomHangHoaWhereUniqueInput
  }


  /**
   * TbNhomHangHoa findUniqueOrThrow
   */
  export type TbNhomHangHoaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomHangHoa
     */
    select?: TbNhomHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomHangHoa to fetch.
     */
    where: TbNhomHangHoaWhereUniqueInput
  }


  /**
   * TbNhomHangHoa findFirst
   */
  export type TbNhomHangHoaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomHangHoa
     */
    select?: TbNhomHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomHangHoa to fetch.
     */
    where?: TbNhomHangHoaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhomHangHoas to fetch.
     */
    orderBy?: TbNhomHangHoaOrderByWithRelationInput | TbNhomHangHoaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbNhomHangHoas.
     */
    cursor?: TbNhomHangHoaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhomHangHoas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhomHangHoas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbNhomHangHoas.
     */
    distinct?: TbNhomHangHoaScalarFieldEnum | TbNhomHangHoaScalarFieldEnum[]
  }


  /**
   * TbNhomHangHoa findFirstOrThrow
   */
  export type TbNhomHangHoaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomHangHoa
     */
    select?: TbNhomHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomHangHoa to fetch.
     */
    where?: TbNhomHangHoaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhomHangHoas to fetch.
     */
    orderBy?: TbNhomHangHoaOrderByWithRelationInput | TbNhomHangHoaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbNhomHangHoas.
     */
    cursor?: TbNhomHangHoaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhomHangHoas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhomHangHoas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbNhomHangHoas.
     */
    distinct?: TbNhomHangHoaScalarFieldEnum | TbNhomHangHoaScalarFieldEnum[]
  }


  /**
   * TbNhomHangHoa findMany
   */
  export type TbNhomHangHoaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomHangHoa
     */
    select?: TbNhomHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomHangHoas to fetch.
     */
    where?: TbNhomHangHoaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhomHangHoas to fetch.
     */
    orderBy?: TbNhomHangHoaOrderByWithRelationInput | TbNhomHangHoaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbNhomHangHoas.
     */
    cursor?: TbNhomHangHoaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhomHangHoas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhomHangHoas.
     */
    skip?: number
    distinct?: TbNhomHangHoaScalarFieldEnum | TbNhomHangHoaScalarFieldEnum[]
  }


  /**
   * TbNhomHangHoa create
   */
  export type TbNhomHangHoaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomHangHoa
     */
    select?: TbNhomHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomHangHoaInclude<ExtArgs> | null
    /**
     * The data needed to create a TbNhomHangHoa.
     */
    data: XOR<TbNhomHangHoaCreateInput, TbNhomHangHoaUncheckedCreateInput>
  }


  /**
   * TbNhomHangHoa createMany
   */
  export type TbNhomHangHoaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbNhomHangHoas.
     */
    data: TbNhomHangHoaCreateManyInput | TbNhomHangHoaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbNhomHangHoa update
   */
  export type TbNhomHangHoaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomHangHoa
     */
    select?: TbNhomHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomHangHoaInclude<ExtArgs> | null
    /**
     * The data needed to update a TbNhomHangHoa.
     */
    data: XOR<TbNhomHangHoaUpdateInput, TbNhomHangHoaUncheckedUpdateInput>
    /**
     * Choose, which TbNhomHangHoa to update.
     */
    where: TbNhomHangHoaWhereUniqueInput
  }


  /**
   * TbNhomHangHoa updateMany
   */
  export type TbNhomHangHoaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbNhomHangHoas.
     */
    data: XOR<TbNhomHangHoaUpdateManyMutationInput, TbNhomHangHoaUncheckedUpdateManyInput>
    /**
     * Filter which TbNhomHangHoas to update
     */
    where?: TbNhomHangHoaWhereInput
  }


  /**
   * TbNhomHangHoa upsert
   */
  export type TbNhomHangHoaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomHangHoa
     */
    select?: TbNhomHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomHangHoaInclude<ExtArgs> | null
    /**
     * The filter to search for the TbNhomHangHoa to update in case it exists.
     */
    where: TbNhomHangHoaWhereUniqueInput
    /**
     * In case the TbNhomHangHoa found by the `where` argument doesn't exist, create a new TbNhomHangHoa with this data.
     */
    create: XOR<TbNhomHangHoaCreateInput, TbNhomHangHoaUncheckedCreateInput>
    /**
     * In case the TbNhomHangHoa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbNhomHangHoaUpdateInput, TbNhomHangHoaUncheckedUpdateInput>
  }


  /**
   * TbNhomHangHoa delete
   */
  export type TbNhomHangHoaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomHangHoa
     */
    select?: TbNhomHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomHangHoaInclude<ExtArgs> | null
    /**
     * Filter which TbNhomHangHoa to delete.
     */
    where: TbNhomHangHoaWhereUniqueInput
  }


  /**
   * TbNhomHangHoa deleteMany
   */
  export type TbNhomHangHoaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbNhomHangHoas to delete
     */
    where?: TbNhomHangHoaWhereInput
  }


  /**
   * TbNhomHangHoa.HangHoa
   */
  export type TbNhomHangHoa$HangHoaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHangHoa
     */
    select?: TbHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHangHoaInclude<ExtArgs> | null
    where?: TbHangHoaWhereInput
    orderBy?: TbHangHoaOrderByWithRelationInput | TbHangHoaOrderByWithRelationInput[]
    cursor?: TbHangHoaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbHangHoaScalarFieldEnum | TbHangHoaScalarFieldEnum[]
  }


  /**
   * TbNhomHangHoa without action
   */
  export type TbNhomHangHoaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomHangHoa
     */
    select?: TbNhomHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomHangHoaInclude<ExtArgs> | null
  }



  /**
   * Model TbHoaDon
   */

  export type AggregateTbHoaDon = {
    _count: TbHoaDonCountAggregateOutputType | null
    _avg: TbHoaDonAvgAggregateOutputType | null
    _sum: TbHoaDonSumAggregateOutputType | null
    _min: TbHoaDonMinAggregateOutputType | null
    _max: TbHoaDonMaxAggregateOutputType | null
  }

  export type TbHoaDonAvgAggregateOutputType = {
    TongHoaDon: Decimal | null
    KhachThanhToan: Decimal | null
  }

  export type TbHoaDonSumAggregateOutputType = {
    TongHoaDon: Decimal | null
    KhachThanhToan: Decimal | null
  }

  export type TbHoaDonMinAggregateOutputType = {
    id: string | null
    MaTaiKhoanSub: string | null
    MaKhachSan: string | null
    TongHoaDon: Decimal | null
    KhachThanhToan: Decimal | null
    NgayThanhToan: Date | null
    GhiChu: string | null
    Status: $Enums.tbhoadon_Status | null
    StatusThongBao: $Enums.thongbao_Status | null
    createAt: Date | null
    updateAt: Date | null
    PhuongThucThanhToan: $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type TbHoaDonMaxAggregateOutputType = {
    id: string | null
    MaTaiKhoanSub: string | null
    MaKhachSan: string | null
    TongHoaDon: Decimal | null
    KhachThanhToan: Decimal | null
    NgayThanhToan: Date | null
    GhiChu: string | null
    Status: $Enums.tbhoadon_Status | null
    StatusThongBao: $Enums.thongbao_Status | null
    createAt: Date | null
    updateAt: Date | null
    PhuongThucThanhToan: $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type TbHoaDonCountAggregateOutputType = {
    id: number
    MaTaiKhoanSub: number
    MaKhachSan: number
    TongHoaDon: number
    KhachThanhToan: number
    NgayThanhToan: number
    GhiChu: number
    Status: number
    StatusThongBao: number
    createAt: number
    updateAt: number
    PhuongThucThanhToan: number
    _all: number
  }


  export type TbHoaDonAvgAggregateInputType = {
    TongHoaDon?: true
    KhachThanhToan?: true
  }

  export type TbHoaDonSumAggregateInputType = {
    TongHoaDon?: true
    KhachThanhToan?: true
  }

  export type TbHoaDonMinAggregateInputType = {
    id?: true
    MaTaiKhoanSub?: true
    MaKhachSan?: true
    TongHoaDon?: true
    KhachThanhToan?: true
    NgayThanhToan?: true
    GhiChu?: true
    Status?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
    PhuongThucThanhToan?: true
  }

  export type TbHoaDonMaxAggregateInputType = {
    id?: true
    MaTaiKhoanSub?: true
    MaKhachSan?: true
    TongHoaDon?: true
    KhachThanhToan?: true
    NgayThanhToan?: true
    GhiChu?: true
    Status?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
    PhuongThucThanhToan?: true
  }

  export type TbHoaDonCountAggregateInputType = {
    id?: true
    MaTaiKhoanSub?: true
    MaKhachSan?: true
    TongHoaDon?: true
    KhachThanhToan?: true
    NgayThanhToan?: true
    GhiChu?: true
    Status?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
    PhuongThucThanhToan?: true
    _all?: true
  }

  export type TbHoaDonAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbHoaDon to aggregate.
     */
    where?: TbHoaDonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbHoaDons to fetch.
     */
    orderBy?: TbHoaDonOrderByWithRelationInput | TbHoaDonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbHoaDonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbHoaDons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbHoaDons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbHoaDons
    **/
    _count?: true | TbHoaDonCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbHoaDonAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbHoaDonSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbHoaDonMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbHoaDonMaxAggregateInputType
  }

  export type GetTbHoaDonAggregateType<T extends TbHoaDonAggregateArgs> = {
        [P in keyof T & keyof AggregateTbHoaDon]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbHoaDon[P]>
      : GetScalarType<T[P], AggregateTbHoaDon[P]>
  }




  export type TbHoaDonGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbHoaDonWhereInput
    orderBy?: TbHoaDonOrderByWithAggregationInput | TbHoaDonOrderByWithAggregationInput[]
    by: TbHoaDonScalarFieldEnum[] | TbHoaDonScalarFieldEnum
    having?: TbHoaDonScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbHoaDonCountAggregateInputType | true
    _avg?: TbHoaDonAvgAggregateInputType
    _sum?: TbHoaDonSumAggregateInputType
    _min?: TbHoaDonMinAggregateInputType
    _max?: TbHoaDonMaxAggregateInputType
  }

  export type TbHoaDonGroupByOutputType = {
    id: string
    MaTaiKhoanSub: string | null
    MaKhachSan: string
    TongHoaDon: Decimal | null
    KhachThanhToan: Decimal | null
    NgayThanhToan: Date | null
    GhiChu: string | null
    Status: $Enums.tbhoadon_Status
    StatusThongBao: $Enums.thongbao_Status
    createAt: Date
    updateAt: Date
    PhuongThucThanhToan: $Enums.tbhoadon_PhuongThucThanhToan | null
    _count: TbHoaDonCountAggregateOutputType | null
    _avg: TbHoaDonAvgAggregateOutputType | null
    _sum: TbHoaDonSumAggregateOutputType | null
    _min: TbHoaDonMinAggregateOutputType | null
    _max: TbHoaDonMaxAggregateOutputType | null
  }

  type GetTbHoaDonGroupByPayload<T extends TbHoaDonGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbHoaDonGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbHoaDonGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbHoaDonGroupByOutputType[P]>
            : GetScalarType<T[P], TbHoaDonGroupByOutputType[P]>
        }
      >
    >


  export type TbHoaDonSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaTaiKhoanSub?: boolean
    MaKhachSan?: boolean
    TongHoaDon?: boolean
    KhachThanhToan?: boolean
    NgayThanhToan?: boolean
    GhiChu?: boolean
    Status?: boolean
    StatusThongBao?: boolean
    createAt?: boolean
    updateAt?: boolean
    PhuongThucThanhToan?: boolean
    ChiTietDichVuDatCho?: boolean | TbHoaDon$ChiTietDichVuDatChoArgs<ExtArgs>
    KhachSan?: boolean | TbKhachSanDefaultArgs<ExtArgs>
    TaiKhoanSub?: boolean | TbHoaDon$TaiKhoanSubArgs<ExtArgs>
    _count?: boolean | TbHoaDonCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbHoaDon"]>

  export type TbHoaDonSelectScalar = {
    id?: boolean
    MaTaiKhoanSub?: boolean
    MaKhachSan?: boolean
    TongHoaDon?: boolean
    KhachThanhToan?: boolean
    NgayThanhToan?: boolean
    GhiChu?: boolean
    Status?: boolean
    StatusThongBao?: boolean
    createAt?: boolean
    updateAt?: boolean
    PhuongThucThanhToan?: boolean
  }

  export type TbHoaDonInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ChiTietDichVuDatCho?: boolean | TbHoaDon$ChiTietDichVuDatChoArgs<ExtArgs>
    KhachSan?: boolean | TbKhachSanDefaultArgs<ExtArgs>
    TaiKhoanSub?: boolean | TbHoaDon$TaiKhoanSubArgs<ExtArgs>
    _count?: boolean | TbHoaDonCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbHoaDonPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbHoaDon"
    objects: {
      ChiTietDichVuDatCho: Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>[]
      KhachSan: Prisma.$TbKhachSanPayload<ExtArgs>
      TaiKhoanSub: Prisma.$SubUserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaTaiKhoanSub: string | null
      MaKhachSan: string
      TongHoaDon: Prisma.Decimal | null
      KhachThanhToan: Prisma.Decimal | null
      NgayThanhToan: Date | null
      GhiChu: string | null
      Status: $Enums.tbhoadon_Status
      StatusThongBao: $Enums.thongbao_Status
      createAt: Date
      updateAt: Date
      PhuongThucThanhToan: $Enums.tbhoadon_PhuongThucThanhToan | null
    }, ExtArgs["result"]["tbHoaDon"]>
    composites: {}
  }


  type TbHoaDonGetPayload<S extends boolean | null | undefined | TbHoaDonDefaultArgs> = $Result.GetResult<Prisma.$TbHoaDonPayload, S>

  type TbHoaDonCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbHoaDonFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbHoaDonCountAggregateInputType | true
    }

  export interface TbHoaDonDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbHoaDon'], meta: { name: 'TbHoaDon' } }
    /**
     * Find zero or one TbHoaDon that matches the filter.
     * @param {TbHoaDonFindUniqueArgs} args - Arguments to find a TbHoaDon
     * @example
     * // Get one TbHoaDon
     * const tbHoaDon = await prisma.tbHoaDon.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbHoaDonFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbHoaDonFindUniqueArgs<ExtArgs>>
    ): Prisma__TbHoaDonClient<$Result.GetResult<Prisma.$TbHoaDonPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbHoaDon that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbHoaDonFindUniqueOrThrowArgs} args - Arguments to find a TbHoaDon
     * @example
     * // Get one TbHoaDon
     * const tbHoaDon = await prisma.tbHoaDon.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbHoaDonFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbHoaDonFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbHoaDonClient<$Result.GetResult<Prisma.$TbHoaDonPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbHoaDon that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHoaDonFindFirstArgs} args - Arguments to find a TbHoaDon
     * @example
     * // Get one TbHoaDon
     * const tbHoaDon = await prisma.tbHoaDon.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbHoaDonFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbHoaDonFindFirstArgs<ExtArgs>>
    ): Prisma__TbHoaDonClient<$Result.GetResult<Prisma.$TbHoaDonPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbHoaDon that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHoaDonFindFirstOrThrowArgs} args - Arguments to find a TbHoaDon
     * @example
     * // Get one TbHoaDon
     * const tbHoaDon = await prisma.tbHoaDon.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbHoaDonFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbHoaDonFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbHoaDonClient<$Result.GetResult<Prisma.$TbHoaDonPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbHoaDons that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHoaDonFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbHoaDons
     * const tbHoaDons = await prisma.tbHoaDon.findMany()
     * 
     * // Get first 10 TbHoaDons
     * const tbHoaDons = await prisma.tbHoaDon.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbHoaDonWithIdOnly = await prisma.tbHoaDon.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbHoaDonFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbHoaDonFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbHoaDonPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbHoaDon.
     * @param {TbHoaDonCreateArgs} args - Arguments to create a TbHoaDon.
     * @example
     * // Create one TbHoaDon
     * const TbHoaDon = await prisma.tbHoaDon.create({
     *   data: {
     *     // ... data to create a TbHoaDon
     *   }
     * })
     * 
    **/
    create<T extends TbHoaDonCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbHoaDonCreateArgs<ExtArgs>>
    ): Prisma__TbHoaDonClient<$Result.GetResult<Prisma.$TbHoaDonPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbHoaDons.
     *     @param {TbHoaDonCreateManyArgs} args - Arguments to create many TbHoaDons.
     *     @example
     *     // Create many TbHoaDons
     *     const tbHoaDon = await prisma.tbHoaDon.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbHoaDonCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbHoaDonCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbHoaDon.
     * @param {TbHoaDonDeleteArgs} args - Arguments to delete one TbHoaDon.
     * @example
     * // Delete one TbHoaDon
     * const TbHoaDon = await prisma.tbHoaDon.delete({
     *   where: {
     *     // ... filter to delete one TbHoaDon
     *   }
     * })
     * 
    **/
    delete<T extends TbHoaDonDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbHoaDonDeleteArgs<ExtArgs>>
    ): Prisma__TbHoaDonClient<$Result.GetResult<Prisma.$TbHoaDonPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbHoaDon.
     * @param {TbHoaDonUpdateArgs} args - Arguments to update one TbHoaDon.
     * @example
     * // Update one TbHoaDon
     * const tbHoaDon = await prisma.tbHoaDon.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbHoaDonUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbHoaDonUpdateArgs<ExtArgs>>
    ): Prisma__TbHoaDonClient<$Result.GetResult<Prisma.$TbHoaDonPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbHoaDons.
     * @param {TbHoaDonDeleteManyArgs} args - Arguments to filter TbHoaDons to delete.
     * @example
     * // Delete a few TbHoaDons
     * const { count } = await prisma.tbHoaDon.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbHoaDonDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbHoaDonDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbHoaDons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHoaDonUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbHoaDons
     * const tbHoaDon = await prisma.tbHoaDon.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbHoaDonUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbHoaDonUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbHoaDon.
     * @param {TbHoaDonUpsertArgs} args - Arguments to update or create a TbHoaDon.
     * @example
     * // Update or create a TbHoaDon
     * const tbHoaDon = await prisma.tbHoaDon.upsert({
     *   create: {
     *     // ... data to create a TbHoaDon
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbHoaDon we want to update
     *   }
     * })
    **/
    upsert<T extends TbHoaDonUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbHoaDonUpsertArgs<ExtArgs>>
    ): Prisma__TbHoaDonClient<$Result.GetResult<Prisma.$TbHoaDonPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbHoaDons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHoaDonCountArgs} args - Arguments to filter TbHoaDons to count.
     * @example
     * // Count the number of TbHoaDons
     * const count = await prisma.tbHoaDon.count({
     *   where: {
     *     // ... the filter for the TbHoaDons we want to count
     *   }
     * })
    **/
    count<T extends TbHoaDonCountArgs>(
      args?: Subset<T, TbHoaDonCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbHoaDonCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbHoaDon.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHoaDonAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbHoaDonAggregateArgs>(args: Subset<T, TbHoaDonAggregateArgs>): Prisma.PrismaPromise<GetTbHoaDonAggregateType<T>>

    /**
     * Group by TbHoaDon.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbHoaDonGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbHoaDonGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbHoaDonGroupByArgs['orderBy'] }
        : { orderBy?: TbHoaDonGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbHoaDonGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbHoaDonGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbHoaDon model
   */
  readonly fields: TbHoaDonFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbHoaDon.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbHoaDonClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    ChiTietDichVuDatCho<T extends TbHoaDon$ChiTietDichVuDatChoArgs<ExtArgs> = {}>(args?: Subset<T, TbHoaDon$ChiTietDichVuDatChoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbChiTietDichVuDatChoPayload<ExtArgs>, T, 'findMany'> | Null>;

    KhachSan<T extends TbKhachSanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbKhachSanDefaultArgs<ExtArgs>>): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    TaiKhoanSub<T extends TbHoaDon$TaiKhoanSubArgs<ExtArgs> = {}>(args?: Subset<T, TbHoaDon$TaiKhoanSubArgs<ExtArgs>>): Prisma__SubUserClient<$Result.GetResult<Prisma.$SubUserPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbHoaDon model
   */ 
  interface TbHoaDonFieldRefs {
    readonly id: FieldRef<"TbHoaDon", 'String'>
    readonly MaTaiKhoanSub: FieldRef<"TbHoaDon", 'String'>
    readonly MaKhachSan: FieldRef<"TbHoaDon", 'String'>
    readonly TongHoaDon: FieldRef<"TbHoaDon", 'Decimal'>
    readonly KhachThanhToan: FieldRef<"TbHoaDon", 'Decimal'>
    readonly NgayThanhToan: FieldRef<"TbHoaDon", 'DateTime'>
    readonly GhiChu: FieldRef<"TbHoaDon", 'String'>
    readonly Status: FieldRef<"TbHoaDon", 'tbhoadon_Status'>
    readonly StatusThongBao: FieldRef<"TbHoaDon", 'thongbao_Status'>
    readonly createAt: FieldRef<"TbHoaDon", 'DateTime'>
    readonly updateAt: FieldRef<"TbHoaDon", 'DateTime'>
    readonly PhuongThucThanhToan: FieldRef<"TbHoaDon", 'tbhoadon_PhuongThucThanhToan'>
  }
    

  // Custom InputTypes

  /**
   * TbHoaDon findUnique
   */
  export type TbHoaDonFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDon
     */
    select?: TbHoaDonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHoaDonInclude<ExtArgs> | null
    /**
     * Filter, which TbHoaDon to fetch.
     */
    where: TbHoaDonWhereUniqueInput
  }


  /**
   * TbHoaDon findUniqueOrThrow
   */
  export type TbHoaDonFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDon
     */
    select?: TbHoaDonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHoaDonInclude<ExtArgs> | null
    /**
     * Filter, which TbHoaDon to fetch.
     */
    where: TbHoaDonWhereUniqueInput
  }


  /**
   * TbHoaDon findFirst
   */
  export type TbHoaDonFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDon
     */
    select?: TbHoaDonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHoaDonInclude<ExtArgs> | null
    /**
     * Filter, which TbHoaDon to fetch.
     */
    where?: TbHoaDonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbHoaDons to fetch.
     */
    orderBy?: TbHoaDonOrderByWithRelationInput | TbHoaDonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbHoaDons.
     */
    cursor?: TbHoaDonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbHoaDons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbHoaDons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbHoaDons.
     */
    distinct?: TbHoaDonScalarFieldEnum | TbHoaDonScalarFieldEnum[]
  }


  /**
   * TbHoaDon findFirstOrThrow
   */
  export type TbHoaDonFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDon
     */
    select?: TbHoaDonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHoaDonInclude<ExtArgs> | null
    /**
     * Filter, which TbHoaDon to fetch.
     */
    where?: TbHoaDonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbHoaDons to fetch.
     */
    orderBy?: TbHoaDonOrderByWithRelationInput | TbHoaDonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbHoaDons.
     */
    cursor?: TbHoaDonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbHoaDons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbHoaDons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbHoaDons.
     */
    distinct?: TbHoaDonScalarFieldEnum | TbHoaDonScalarFieldEnum[]
  }


  /**
   * TbHoaDon findMany
   */
  export type TbHoaDonFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDon
     */
    select?: TbHoaDonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHoaDonInclude<ExtArgs> | null
    /**
     * Filter, which TbHoaDons to fetch.
     */
    where?: TbHoaDonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbHoaDons to fetch.
     */
    orderBy?: TbHoaDonOrderByWithRelationInput | TbHoaDonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbHoaDons.
     */
    cursor?: TbHoaDonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbHoaDons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbHoaDons.
     */
    skip?: number
    distinct?: TbHoaDonScalarFieldEnum | TbHoaDonScalarFieldEnum[]
  }


  /**
   * TbHoaDon create
   */
  export type TbHoaDonCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDon
     */
    select?: TbHoaDonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHoaDonInclude<ExtArgs> | null
    /**
     * The data needed to create a TbHoaDon.
     */
    data: XOR<TbHoaDonCreateInput, TbHoaDonUncheckedCreateInput>
  }


  /**
   * TbHoaDon createMany
   */
  export type TbHoaDonCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbHoaDons.
     */
    data: TbHoaDonCreateManyInput | TbHoaDonCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbHoaDon update
   */
  export type TbHoaDonUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDon
     */
    select?: TbHoaDonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHoaDonInclude<ExtArgs> | null
    /**
     * The data needed to update a TbHoaDon.
     */
    data: XOR<TbHoaDonUpdateInput, TbHoaDonUncheckedUpdateInput>
    /**
     * Choose, which TbHoaDon to update.
     */
    where: TbHoaDonWhereUniqueInput
  }


  /**
   * TbHoaDon updateMany
   */
  export type TbHoaDonUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbHoaDons.
     */
    data: XOR<TbHoaDonUpdateManyMutationInput, TbHoaDonUncheckedUpdateManyInput>
    /**
     * Filter which TbHoaDons to update
     */
    where?: TbHoaDonWhereInput
  }


  /**
   * TbHoaDon upsert
   */
  export type TbHoaDonUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDon
     */
    select?: TbHoaDonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHoaDonInclude<ExtArgs> | null
    /**
     * The filter to search for the TbHoaDon to update in case it exists.
     */
    where: TbHoaDonWhereUniqueInput
    /**
     * In case the TbHoaDon found by the `where` argument doesn't exist, create a new TbHoaDon with this data.
     */
    create: XOR<TbHoaDonCreateInput, TbHoaDonUncheckedCreateInput>
    /**
     * In case the TbHoaDon was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbHoaDonUpdateInput, TbHoaDonUncheckedUpdateInput>
  }


  /**
   * TbHoaDon delete
   */
  export type TbHoaDonDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDon
     */
    select?: TbHoaDonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHoaDonInclude<ExtArgs> | null
    /**
     * Filter which TbHoaDon to delete.
     */
    where: TbHoaDonWhereUniqueInput
  }


  /**
   * TbHoaDon deleteMany
   */
  export type TbHoaDonDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbHoaDons to delete
     */
    where?: TbHoaDonWhereInput
  }


  /**
   * TbHoaDon.ChiTietDichVuDatCho
   */
  export type TbHoaDon$ChiTietDichVuDatChoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiTietDichVuDatCho
     */
    select?: TbChiTietDichVuDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiTietDichVuDatChoInclude<ExtArgs> | null
    where?: TbChiTietDichVuDatChoWhereInput
    orderBy?: TbChiTietDichVuDatChoOrderByWithRelationInput | TbChiTietDichVuDatChoOrderByWithRelationInput[]
    cursor?: TbChiTietDichVuDatChoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbChiTietDichVuDatChoScalarFieldEnum | TbChiTietDichVuDatChoScalarFieldEnum[]
  }


  /**
   * TbHoaDon.TaiKhoanSub
   */
  export type TbHoaDon$TaiKhoanSubArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubUser
     */
    select?: SubUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubUserInclude<ExtArgs> | null
    where?: SubUserWhereInput
  }


  /**
   * TbHoaDon without action
   */
  export type TbHoaDonDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDon
     */
    select?: TbHoaDonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHoaDonInclude<ExtArgs> | null
  }



  /**
   * Model TbKhachHang
   */

  export type AggregateTbKhachHang = {
    _count: TbKhachHangCountAggregateOutputType | null
    _min: TbKhachHangMinAggregateOutputType | null
    _max: TbKhachHangMaxAggregateOutputType | null
  }

  export type TbKhachHangMinAggregateOutputType = {
    id: string | null
    TenKH: string | null
    SDTKH: string | null
    EmailKH: string | null
    createAt: Date | null
    updateAt: Date | null
  }

  export type TbKhachHangMaxAggregateOutputType = {
    id: string | null
    TenKH: string | null
    SDTKH: string | null
    EmailKH: string | null
    createAt: Date | null
    updateAt: Date | null
  }

  export type TbKhachHangCountAggregateOutputType = {
    id: number
    TenKH: number
    SDTKH: number
    EmailKH: number
    createAt: number
    updateAt: number
    _all: number
  }


  export type TbKhachHangMinAggregateInputType = {
    id?: true
    TenKH?: true
    SDTKH?: true
    EmailKH?: true
    createAt?: true
    updateAt?: true
  }

  export type TbKhachHangMaxAggregateInputType = {
    id?: true
    TenKH?: true
    SDTKH?: true
    EmailKH?: true
    createAt?: true
    updateAt?: true
  }

  export type TbKhachHangCountAggregateInputType = {
    id?: true
    TenKH?: true
    SDTKH?: true
    EmailKH?: true
    createAt?: true
    updateAt?: true
    _all?: true
  }

  export type TbKhachHangAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbKhachHang to aggregate.
     */
    where?: TbKhachHangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbKhachHangs to fetch.
     */
    orderBy?: TbKhachHangOrderByWithRelationInput | TbKhachHangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbKhachHangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbKhachHangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbKhachHangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbKhachHangs
    **/
    _count?: true | TbKhachHangCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbKhachHangMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbKhachHangMaxAggregateInputType
  }

  export type GetTbKhachHangAggregateType<T extends TbKhachHangAggregateArgs> = {
        [P in keyof T & keyof AggregateTbKhachHang]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbKhachHang[P]>
      : GetScalarType<T[P], AggregateTbKhachHang[P]>
  }




  export type TbKhachHangGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbKhachHangWhereInput
    orderBy?: TbKhachHangOrderByWithAggregationInput | TbKhachHangOrderByWithAggregationInput[]
    by: TbKhachHangScalarFieldEnum[] | TbKhachHangScalarFieldEnum
    having?: TbKhachHangScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbKhachHangCountAggregateInputType | true
    _min?: TbKhachHangMinAggregateInputType
    _max?: TbKhachHangMaxAggregateInputType
  }

  export type TbKhachHangGroupByOutputType = {
    id: string
    TenKH: string | null
    SDTKH: string | null
    EmailKH: string
    createAt: Date
    updateAt: Date
    _count: TbKhachHangCountAggregateOutputType | null
    _min: TbKhachHangMinAggregateOutputType | null
    _max: TbKhachHangMaxAggregateOutputType | null
  }

  type GetTbKhachHangGroupByPayload<T extends TbKhachHangGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbKhachHangGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbKhachHangGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbKhachHangGroupByOutputType[P]>
            : GetScalarType<T[P], TbKhachHangGroupByOutputType[P]>
        }
      >
    >


  export type TbKhachHangSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    TenKH?: boolean
    SDTKH?: boolean
    EmailKH?: boolean
    createAt?: boolean
    updateAt?: boolean
    DatCho?: boolean | TbKhachHang$DatChoArgs<ExtArgs>
    _count?: boolean | TbKhachHangCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbKhachHang"]>

  export type TbKhachHangSelectScalar = {
    id?: boolean
    TenKH?: boolean
    SDTKH?: boolean
    EmailKH?: boolean
    createAt?: boolean
    updateAt?: boolean
  }

  export type TbKhachHangInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DatCho?: boolean | TbKhachHang$DatChoArgs<ExtArgs>
    _count?: boolean | TbKhachHangCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbKhachHangPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbKhachHang"
    objects: {
      DatCho: Prisma.$TbDatChoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      TenKH: string | null
      SDTKH: string | null
      EmailKH: string
      createAt: Date
      updateAt: Date
    }, ExtArgs["result"]["tbKhachHang"]>
    composites: {}
  }


  type TbKhachHangGetPayload<S extends boolean | null | undefined | TbKhachHangDefaultArgs> = $Result.GetResult<Prisma.$TbKhachHangPayload, S>

  type TbKhachHangCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbKhachHangFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbKhachHangCountAggregateInputType | true
    }

  export interface TbKhachHangDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbKhachHang'], meta: { name: 'TbKhachHang' } }
    /**
     * Find zero or one TbKhachHang that matches the filter.
     * @param {TbKhachHangFindUniqueArgs} args - Arguments to find a TbKhachHang
     * @example
     * // Get one TbKhachHang
     * const tbKhachHang = await prisma.tbKhachHang.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbKhachHangFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbKhachHangFindUniqueArgs<ExtArgs>>
    ): Prisma__TbKhachHangClient<$Result.GetResult<Prisma.$TbKhachHangPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbKhachHang that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbKhachHangFindUniqueOrThrowArgs} args - Arguments to find a TbKhachHang
     * @example
     * // Get one TbKhachHang
     * const tbKhachHang = await prisma.tbKhachHang.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbKhachHangFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbKhachHangFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbKhachHangClient<$Result.GetResult<Prisma.$TbKhachHangPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbKhachHang that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachHangFindFirstArgs} args - Arguments to find a TbKhachHang
     * @example
     * // Get one TbKhachHang
     * const tbKhachHang = await prisma.tbKhachHang.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbKhachHangFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbKhachHangFindFirstArgs<ExtArgs>>
    ): Prisma__TbKhachHangClient<$Result.GetResult<Prisma.$TbKhachHangPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbKhachHang that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachHangFindFirstOrThrowArgs} args - Arguments to find a TbKhachHang
     * @example
     * // Get one TbKhachHang
     * const tbKhachHang = await prisma.tbKhachHang.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbKhachHangFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbKhachHangFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbKhachHangClient<$Result.GetResult<Prisma.$TbKhachHangPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbKhachHangs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachHangFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbKhachHangs
     * const tbKhachHangs = await prisma.tbKhachHang.findMany()
     * 
     * // Get first 10 TbKhachHangs
     * const tbKhachHangs = await prisma.tbKhachHang.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbKhachHangWithIdOnly = await prisma.tbKhachHang.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbKhachHangFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbKhachHangFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbKhachHangPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbKhachHang.
     * @param {TbKhachHangCreateArgs} args - Arguments to create a TbKhachHang.
     * @example
     * // Create one TbKhachHang
     * const TbKhachHang = await prisma.tbKhachHang.create({
     *   data: {
     *     // ... data to create a TbKhachHang
     *   }
     * })
     * 
    **/
    create<T extends TbKhachHangCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbKhachHangCreateArgs<ExtArgs>>
    ): Prisma__TbKhachHangClient<$Result.GetResult<Prisma.$TbKhachHangPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbKhachHangs.
     *     @param {TbKhachHangCreateManyArgs} args - Arguments to create many TbKhachHangs.
     *     @example
     *     // Create many TbKhachHangs
     *     const tbKhachHang = await prisma.tbKhachHang.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbKhachHangCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbKhachHangCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbKhachHang.
     * @param {TbKhachHangDeleteArgs} args - Arguments to delete one TbKhachHang.
     * @example
     * // Delete one TbKhachHang
     * const TbKhachHang = await prisma.tbKhachHang.delete({
     *   where: {
     *     // ... filter to delete one TbKhachHang
     *   }
     * })
     * 
    **/
    delete<T extends TbKhachHangDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbKhachHangDeleteArgs<ExtArgs>>
    ): Prisma__TbKhachHangClient<$Result.GetResult<Prisma.$TbKhachHangPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbKhachHang.
     * @param {TbKhachHangUpdateArgs} args - Arguments to update one TbKhachHang.
     * @example
     * // Update one TbKhachHang
     * const tbKhachHang = await prisma.tbKhachHang.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbKhachHangUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbKhachHangUpdateArgs<ExtArgs>>
    ): Prisma__TbKhachHangClient<$Result.GetResult<Prisma.$TbKhachHangPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbKhachHangs.
     * @param {TbKhachHangDeleteManyArgs} args - Arguments to filter TbKhachHangs to delete.
     * @example
     * // Delete a few TbKhachHangs
     * const { count } = await prisma.tbKhachHang.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbKhachHangDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbKhachHangDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbKhachHangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachHangUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbKhachHangs
     * const tbKhachHang = await prisma.tbKhachHang.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbKhachHangUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbKhachHangUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbKhachHang.
     * @param {TbKhachHangUpsertArgs} args - Arguments to update or create a TbKhachHang.
     * @example
     * // Update or create a TbKhachHang
     * const tbKhachHang = await prisma.tbKhachHang.upsert({
     *   create: {
     *     // ... data to create a TbKhachHang
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbKhachHang we want to update
     *   }
     * })
    **/
    upsert<T extends TbKhachHangUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbKhachHangUpsertArgs<ExtArgs>>
    ): Prisma__TbKhachHangClient<$Result.GetResult<Prisma.$TbKhachHangPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbKhachHangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachHangCountArgs} args - Arguments to filter TbKhachHangs to count.
     * @example
     * // Count the number of TbKhachHangs
     * const count = await prisma.tbKhachHang.count({
     *   where: {
     *     // ... the filter for the TbKhachHangs we want to count
     *   }
     * })
    **/
    count<T extends TbKhachHangCountArgs>(
      args?: Subset<T, TbKhachHangCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbKhachHangCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbKhachHang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachHangAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbKhachHangAggregateArgs>(args: Subset<T, TbKhachHangAggregateArgs>): Prisma.PrismaPromise<GetTbKhachHangAggregateType<T>>

    /**
     * Group by TbKhachHang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachHangGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbKhachHangGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbKhachHangGroupByArgs['orderBy'] }
        : { orderBy?: TbKhachHangGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbKhachHangGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbKhachHangGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbKhachHang model
   */
  readonly fields: TbKhachHangFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbKhachHang.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbKhachHangClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    DatCho<T extends TbKhachHang$DatChoArgs<ExtArgs> = {}>(args?: Subset<T, TbKhachHang$DatChoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbDatChoPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbKhachHang model
   */ 
  interface TbKhachHangFieldRefs {
    readonly id: FieldRef<"TbKhachHang", 'String'>
    readonly TenKH: FieldRef<"TbKhachHang", 'String'>
    readonly SDTKH: FieldRef<"TbKhachHang", 'String'>
    readonly EmailKH: FieldRef<"TbKhachHang", 'String'>
    readonly createAt: FieldRef<"TbKhachHang", 'DateTime'>
    readonly updateAt: FieldRef<"TbKhachHang", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * TbKhachHang findUnique
   */
  export type TbKhachHangFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachHang
     */
    select?: TbKhachHangSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachHangInclude<ExtArgs> | null
    /**
     * Filter, which TbKhachHang to fetch.
     */
    where: TbKhachHangWhereUniqueInput
  }


  /**
   * TbKhachHang findUniqueOrThrow
   */
  export type TbKhachHangFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachHang
     */
    select?: TbKhachHangSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachHangInclude<ExtArgs> | null
    /**
     * Filter, which TbKhachHang to fetch.
     */
    where: TbKhachHangWhereUniqueInput
  }


  /**
   * TbKhachHang findFirst
   */
  export type TbKhachHangFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachHang
     */
    select?: TbKhachHangSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachHangInclude<ExtArgs> | null
    /**
     * Filter, which TbKhachHang to fetch.
     */
    where?: TbKhachHangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbKhachHangs to fetch.
     */
    orderBy?: TbKhachHangOrderByWithRelationInput | TbKhachHangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbKhachHangs.
     */
    cursor?: TbKhachHangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbKhachHangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbKhachHangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbKhachHangs.
     */
    distinct?: TbKhachHangScalarFieldEnum | TbKhachHangScalarFieldEnum[]
  }


  /**
   * TbKhachHang findFirstOrThrow
   */
  export type TbKhachHangFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachHang
     */
    select?: TbKhachHangSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachHangInclude<ExtArgs> | null
    /**
     * Filter, which TbKhachHang to fetch.
     */
    where?: TbKhachHangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbKhachHangs to fetch.
     */
    orderBy?: TbKhachHangOrderByWithRelationInput | TbKhachHangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbKhachHangs.
     */
    cursor?: TbKhachHangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbKhachHangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbKhachHangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbKhachHangs.
     */
    distinct?: TbKhachHangScalarFieldEnum | TbKhachHangScalarFieldEnum[]
  }


  /**
   * TbKhachHang findMany
   */
  export type TbKhachHangFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachHang
     */
    select?: TbKhachHangSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachHangInclude<ExtArgs> | null
    /**
     * Filter, which TbKhachHangs to fetch.
     */
    where?: TbKhachHangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbKhachHangs to fetch.
     */
    orderBy?: TbKhachHangOrderByWithRelationInput | TbKhachHangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbKhachHangs.
     */
    cursor?: TbKhachHangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbKhachHangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbKhachHangs.
     */
    skip?: number
    distinct?: TbKhachHangScalarFieldEnum | TbKhachHangScalarFieldEnum[]
  }


  /**
   * TbKhachHang create
   */
  export type TbKhachHangCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachHang
     */
    select?: TbKhachHangSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachHangInclude<ExtArgs> | null
    /**
     * The data needed to create a TbKhachHang.
     */
    data: XOR<TbKhachHangCreateInput, TbKhachHangUncheckedCreateInput>
  }


  /**
   * TbKhachHang createMany
   */
  export type TbKhachHangCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbKhachHangs.
     */
    data: TbKhachHangCreateManyInput | TbKhachHangCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbKhachHang update
   */
  export type TbKhachHangUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachHang
     */
    select?: TbKhachHangSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachHangInclude<ExtArgs> | null
    /**
     * The data needed to update a TbKhachHang.
     */
    data: XOR<TbKhachHangUpdateInput, TbKhachHangUncheckedUpdateInput>
    /**
     * Choose, which TbKhachHang to update.
     */
    where: TbKhachHangWhereUniqueInput
  }


  /**
   * TbKhachHang updateMany
   */
  export type TbKhachHangUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbKhachHangs.
     */
    data: XOR<TbKhachHangUpdateManyMutationInput, TbKhachHangUncheckedUpdateManyInput>
    /**
     * Filter which TbKhachHangs to update
     */
    where?: TbKhachHangWhereInput
  }


  /**
   * TbKhachHang upsert
   */
  export type TbKhachHangUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachHang
     */
    select?: TbKhachHangSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachHangInclude<ExtArgs> | null
    /**
     * The filter to search for the TbKhachHang to update in case it exists.
     */
    where: TbKhachHangWhereUniqueInput
    /**
     * In case the TbKhachHang found by the `where` argument doesn't exist, create a new TbKhachHang with this data.
     */
    create: XOR<TbKhachHangCreateInput, TbKhachHangUncheckedCreateInput>
    /**
     * In case the TbKhachHang was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbKhachHangUpdateInput, TbKhachHangUncheckedUpdateInput>
  }


  /**
   * TbKhachHang delete
   */
  export type TbKhachHangDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachHang
     */
    select?: TbKhachHangSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachHangInclude<ExtArgs> | null
    /**
     * Filter which TbKhachHang to delete.
     */
    where: TbKhachHangWhereUniqueInput
  }


  /**
   * TbKhachHang deleteMany
   */
  export type TbKhachHangDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbKhachHangs to delete
     */
    where?: TbKhachHangWhereInput
  }


  /**
   * TbKhachHang.DatCho
   */
  export type TbKhachHang$DatChoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDatCho
     */
    select?: TbDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDatChoInclude<ExtArgs> | null
    where?: TbDatChoWhereInput
    orderBy?: TbDatChoOrderByWithRelationInput | TbDatChoOrderByWithRelationInput[]
    cursor?: TbDatChoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbDatChoScalarFieldEnum | TbDatChoScalarFieldEnum[]
  }


  /**
   * TbKhachHang without action
   */
  export type TbKhachHangDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachHang
     */
    select?: TbKhachHangSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachHangInclude<ExtArgs> | null
  }



  /**
   * Model TbKhachSan
   */

  export type AggregateTbKhachSan = {
    _count: TbKhachSanCountAggregateOutputType | null
    _min: TbKhachSanMinAggregateOutputType | null
    _max: TbKhachSanMaxAggregateOutputType | null
  }

  export type TbKhachSanMinAggregateOutputType = {
    id: string | null
    MaChiNhanh: string | null
    TenKhachSan: string | null
    DiaChiKhachSan: string | null
    SDTKhachSan: string | null
    EmailKhachSan: string | null
  }

  export type TbKhachSanMaxAggregateOutputType = {
    id: string | null
    MaChiNhanh: string | null
    TenKhachSan: string | null
    DiaChiKhachSan: string | null
    SDTKhachSan: string | null
    EmailKhachSan: string | null
  }

  export type TbKhachSanCountAggregateOutputType = {
    id: number
    MaChiNhanh: number
    TenKhachSan: number
    DiaChiKhachSan: number
    SDTKhachSan: number
    EmailKhachSan: number
    _all: number
  }


  export type TbKhachSanMinAggregateInputType = {
    id?: true
    MaChiNhanh?: true
    TenKhachSan?: true
    DiaChiKhachSan?: true
    SDTKhachSan?: true
    EmailKhachSan?: true
  }

  export type TbKhachSanMaxAggregateInputType = {
    id?: true
    MaChiNhanh?: true
    TenKhachSan?: true
    DiaChiKhachSan?: true
    SDTKhachSan?: true
    EmailKhachSan?: true
  }

  export type TbKhachSanCountAggregateInputType = {
    id?: true
    MaChiNhanh?: true
    TenKhachSan?: true
    DiaChiKhachSan?: true
    SDTKhachSan?: true
    EmailKhachSan?: true
    _all?: true
  }

  export type TbKhachSanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbKhachSan to aggregate.
     */
    where?: TbKhachSanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbKhachSans to fetch.
     */
    orderBy?: TbKhachSanOrderByWithRelationInput | TbKhachSanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbKhachSanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbKhachSans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbKhachSans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbKhachSans
    **/
    _count?: true | TbKhachSanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbKhachSanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbKhachSanMaxAggregateInputType
  }

  export type GetTbKhachSanAggregateType<T extends TbKhachSanAggregateArgs> = {
        [P in keyof T & keyof AggregateTbKhachSan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbKhachSan[P]>
      : GetScalarType<T[P], AggregateTbKhachSan[P]>
  }




  export type TbKhachSanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbKhachSanWhereInput
    orderBy?: TbKhachSanOrderByWithAggregationInput | TbKhachSanOrderByWithAggregationInput[]
    by: TbKhachSanScalarFieldEnum[] | TbKhachSanScalarFieldEnum
    having?: TbKhachSanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbKhachSanCountAggregateInputType | true
    _min?: TbKhachSanMinAggregateInputType
    _max?: TbKhachSanMaxAggregateInputType
  }

  export type TbKhachSanGroupByOutputType = {
    id: string
    MaChiNhanh: string
    TenKhachSan: string
    DiaChiKhachSan: string | null
    SDTKhachSan: string | null
    EmailKhachSan: string | null
    _count: TbKhachSanCountAggregateOutputType | null
    _min: TbKhachSanMinAggregateOutputType | null
    _max: TbKhachSanMaxAggregateOutputType | null
  }

  type GetTbKhachSanGroupByPayload<T extends TbKhachSanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbKhachSanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbKhachSanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbKhachSanGroupByOutputType[P]>
            : GetScalarType<T[P], TbKhachSanGroupByOutputType[P]>
        }
      >
    >


  export type TbKhachSanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaChiNhanh?: boolean
    TenKhachSan?: boolean
    DiaChiKhachSan?: boolean
    SDTKhachSan?: boolean
    EmailKhachSan?: boolean
    TaiKhoanSub?: boolean | TbKhachSan$TaiKhoanSubArgs<ExtArgs>
    HoaDon?: boolean | TbKhachSan$HoaDonArgs<ExtArgs>
    PhieuNhap?: boolean | TbKhachSan$PhieuNhapArgs<ExtArgs>
    NhomKhuVucPhong?: boolean | TbKhachSan$NhomKhuVucPhongArgs<ExtArgs>
    NhomHangHoa?: boolean | TbKhachSan$NhomHangHoaArgs<ExtArgs>
    NhomDichVu?: boolean | TbKhachSan$NhomDichVuArgs<ExtArgs>
    ChiNhanh?: boolean | TbChiNhanhDefaultArgs<ExtArgs>
    _count?: boolean | TbKhachSanCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbKhachSan"]>

  export type TbKhachSanSelectScalar = {
    id?: boolean
    MaChiNhanh?: boolean
    TenKhachSan?: boolean
    DiaChiKhachSan?: boolean
    SDTKhachSan?: boolean
    EmailKhachSan?: boolean
  }

  export type TbKhachSanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    TaiKhoanSub?: boolean | TbKhachSan$TaiKhoanSubArgs<ExtArgs>
    HoaDon?: boolean | TbKhachSan$HoaDonArgs<ExtArgs>
    PhieuNhap?: boolean | TbKhachSan$PhieuNhapArgs<ExtArgs>
    NhomKhuVucPhong?: boolean | TbKhachSan$NhomKhuVucPhongArgs<ExtArgs>
    NhomHangHoa?: boolean | TbKhachSan$NhomHangHoaArgs<ExtArgs>
    NhomDichVu?: boolean | TbKhachSan$NhomDichVuArgs<ExtArgs>
    ChiNhanh?: boolean | TbChiNhanhDefaultArgs<ExtArgs>
    _count?: boolean | TbKhachSanCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbKhachSanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbKhachSan"
    objects: {
      TaiKhoanSub: Prisma.$SubUserPayload<ExtArgs>[]
      HoaDon: Prisma.$TbHoaDonPayload<ExtArgs>[]
      PhieuNhap: Prisma.$TbPhieuNhapPayload<ExtArgs>[]
      NhomKhuVucPhong: Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>[]
      NhomHangHoa: Prisma.$TbNhomHangHoaPayload<ExtArgs>[]
      NhomDichVu: Prisma.$TbNhomDichVuPayload<ExtArgs>[]
      ChiNhanh: Prisma.$TbChiNhanhPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaChiNhanh: string
      TenKhachSan: string
      DiaChiKhachSan: string | null
      SDTKhachSan: string | null
      EmailKhachSan: string | null
    }, ExtArgs["result"]["tbKhachSan"]>
    composites: {}
  }


  type TbKhachSanGetPayload<S extends boolean | null | undefined | TbKhachSanDefaultArgs> = $Result.GetResult<Prisma.$TbKhachSanPayload, S>

  type TbKhachSanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbKhachSanFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbKhachSanCountAggregateInputType | true
    }

  export interface TbKhachSanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbKhachSan'], meta: { name: 'TbKhachSan' } }
    /**
     * Find zero or one TbKhachSan that matches the filter.
     * @param {TbKhachSanFindUniqueArgs} args - Arguments to find a TbKhachSan
     * @example
     * // Get one TbKhachSan
     * const tbKhachSan = await prisma.tbKhachSan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbKhachSanFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbKhachSanFindUniqueArgs<ExtArgs>>
    ): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbKhachSan that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbKhachSanFindUniqueOrThrowArgs} args - Arguments to find a TbKhachSan
     * @example
     * // Get one TbKhachSan
     * const tbKhachSan = await prisma.tbKhachSan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbKhachSanFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbKhachSanFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbKhachSan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachSanFindFirstArgs} args - Arguments to find a TbKhachSan
     * @example
     * // Get one TbKhachSan
     * const tbKhachSan = await prisma.tbKhachSan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbKhachSanFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbKhachSanFindFirstArgs<ExtArgs>>
    ): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbKhachSan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachSanFindFirstOrThrowArgs} args - Arguments to find a TbKhachSan
     * @example
     * // Get one TbKhachSan
     * const tbKhachSan = await prisma.tbKhachSan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbKhachSanFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbKhachSanFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbKhachSans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachSanFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbKhachSans
     * const tbKhachSans = await prisma.tbKhachSan.findMany()
     * 
     * // Get first 10 TbKhachSans
     * const tbKhachSans = await prisma.tbKhachSan.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbKhachSanWithIdOnly = await prisma.tbKhachSan.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbKhachSanFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbKhachSanFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbKhachSan.
     * @param {TbKhachSanCreateArgs} args - Arguments to create a TbKhachSan.
     * @example
     * // Create one TbKhachSan
     * const TbKhachSan = await prisma.tbKhachSan.create({
     *   data: {
     *     // ... data to create a TbKhachSan
     *   }
     * })
     * 
    **/
    create<T extends TbKhachSanCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbKhachSanCreateArgs<ExtArgs>>
    ): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbKhachSans.
     *     @param {TbKhachSanCreateManyArgs} args - Arguments to create many TbKhachSans.
     *     @example
     *     // Create many TbKhachSans
     *     const tbKhachSan = await prisma.tbKhachSan.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbKhachSanCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbKhachSanCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbKhachSan.
     * @param {TbKhachSanDeleteArgs} args - Arguments to delete one TbKhachSan.
     * @example
     * // Delete one TbKhachSan
     * const TbKhachSan = await prisma.tbKhachSan.delete({
     *   where: {
     *     // ... filter to delete one TbKhachSan
     *   }
     * })
     * 
    **/
    delete<T extends TbKhachSanDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbKhachSanDeleteArgs<ExtArgs>>
    ): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbKhachSan.
     * @param {TbKhachSanUpdateArgs} args - Arguments to update one TbKhachSan.
     * @example
     * // Update one TbKhachSan
     * const tbKhachSan = await prisma.tbKhachSan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbKhachSanUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbKhachSanUpdateArgs<ExtArgs>>
    ): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbKhachSans.
     * @param {TbKhachSanDeleteManyArgs} args - Arguments to filter TbKhachSans to delete.
     * @example
     * // Delete a few TbKhachSans
     * const { count } = await prisma.tbKhachSan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbKhachSanDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbKhachSanDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbKhachSans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachSanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbKhachSans
     * const tbKhachSan = await prisma.tbKhachSan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbKhachSanUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbKhachSanUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbKhachSan.
     * @param {TbKhachSanUpsertArgs} args - Arguments to update or create a TbKhachSan.
     * @example
     * // Update or create a TbKhachSan
     * const tbKhachSan = await prisma.tbKhachSan.upsert({
     *   create: {
     *     // ... data to create a TbKhachSan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbKhachSan we want to update
     *   }
     * })
    **/
    upsert<T extends TbKhachSanUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbKhachSanUpsertArgs<ExtArgs>>
    ): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbKhachSans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachSanCountArgs} args - Arguments to filter TbKhachSans to count.
     * @example
     * // Count the number of TbKhachSans
     * const count = await prisma.tbKhachSan.count({
     *   where: {
     *     // ... the filter for the TbKhachSans we want to count
     *   }
     * })
    **/
    count<T extends TbKhachSanCountArgs>(
      args?: Subset<T, TbKhachSanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbKhachSanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbKhachSan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachSanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbKhachSanAggregateArgs>(args: Subset<T, TbKhachSanAggregateArgs>): Prisma.PrismaPromise<GetTbKhachSanAggregateType<T>>

    /**
     * Group by TbKhachSan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbKhachSanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbKhachSanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbKhachSanGroupByArgs['orderBy'] }
        : { orderBy?: TbKhachSanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbKhachSanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbKhachSanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbKhachSan model
   */
  readonly fields: TbKhachSanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbKhachSan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbKhachSanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    TaiKhoanSub<T extends TbKhachSan$TaiKhoanSubArgs<ExtArgs> = {}>(args?: Subset<T, TbKhachSan$TaiKhoanSubArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubUserPayload<ExtArgs>, T, 'findMany'> | Null>;

    HoaDon<T extends TbKhachSan$HoaDonArgs<ExtArgs> = {}>(args?: Subset<T, TbKhachSan$HoaDonArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbHoaDonPayload<ExtArgs>, T, 'findMany'> | Null>;

    PhieuNhap<T extends TbKhachSan$PhieuNhapArgs<ExtArgs> = {}>(args?: Subset<T, TbKhachSan$PhieuNhapArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbPhieuNhapPayload<ExtArgs>, T, 'findMany'> | Null>;

    NhomKhuVucPhong<T extends TbKhachSan$NhomKhuVucPhongArgs<ExtArgs> = {}>(args?: Subset<T, TbKhachSan$NhomKhuVucPhongArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>, T, 'findMany'> | Null>;

    NhomHangHoa<T extends TbKhachSan$NhomHangHoaArgs<ExtArgs> = {}>(args?: Subset<T, TbKhachSan$NhomHangHoaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbNhomHangHoaPayload<ExtArgs>, T, 'findMany'> | Null>;

    NhomDichVu<T extends TbKhachSan$NhomDichVuArgs<ExtArgs> = {}>(args?: Subset<T, TbKhachSan$NhomDichVuArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbNhomDichVuPayload<ExtArgs>, T, 'findMany'> | Null>;

    ChiNhanh<T extends TbChiNhanhDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbChiNhanhDefaultArgs<ExtArgs>>): Prisma__TbChiNhanhClient<$Result.GetResult<Prisma.$TbChiNhanhPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbKhachSan model
   */ 
  interface TbKhachSanFieldRefs {
    readonly id: FieldRef<"TbKhachSan", 'String'>
    readonly MaChiNhanh: FieldRef<"TbKhachSan", 'String'>
    readonly TenKhachSan: FieldRef<"TbKhachSan", 'String'>
    readonly DiaChiKhachSan: FieldRef<"TbKhachSan", 'String'>
    readonly SDTKhachSan: FieldRef<"TbKhachSan", 'String'>
    readonly EmailKhachSan: FieldRef<"TbKhachSan", 'String'>
  }
    

  // Custom InputTypes

  /**
   * TbKhachSan findUnique
   */
  export type TbKhachSanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachSan
     */
    select?: TbKhachSanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachSanInclude<ExtArgs> | null
    /**
     * Filter, which TbKhachSan to fetch.
     */
    where: TbKhachSanWhereUniqueInput
  }


  /**
   * TbKhachSan findUniqueOrThrow
   */
  export type TbKhachSanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachSan
     */
    select?: TbKhachSanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachSanInclude<ExtArgs> | null
    /**
     * Filter, which TbKhachSan to fetch.
     */
    where: TbKhachSanWhereUniqueInput
  }


  /**
   * TbKhachSan findFirst
   */
  export type TbKhachSanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachSan
     */
    select?: TbKhachSanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachSanInclude<ExtArgs> | null
    /**
     * Filter, which TbKhachSan to fetch.
     */
    where?: TbKhachSanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbKhachSans to fetch.
     */
    orderBy?: TbKhachSanOrderByWithRelationInput | TbKhachSanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbKhachSans.
     */
    cursor?: TbKhachSanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbKhachSans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbKhachSans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbKhachSans.
     */
    distinct?: TbKhachSanScalarFieldEnum | TbKhachSanScalarFieldEnum[]
  }


  /**
   * TbKhachSan findFirstOrThrow
   */
  export type TbKhachSanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachSan
     */
    select?: TbKhachSanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachSanInclude<ExtArgs> | null
    /**
     * Filter, which TbKhachSan to fetch.
     */
    where?: TbKhachSanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbKhachSans to fetch.
     */
    orderBy?: TbKhachSanOrderByWithRelationInput | TbKhachSanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbKhachSans.
     */
    cursor?: TbKhachSanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbKhachSans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbKhachSans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbKhachSans.
     */
    distinct?: TbKhachSanScalarFieldEnum | TbKhachSanScalarFieldEnum[]
  }


  /**
   * TbKhachSan findMany
   */
  export type TbKhachSanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachSan
     */
    select?: TbKhachSanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachSanInclude<ExtArgs> | null
    /**
     * Filter, which TbKhachSans to fetch.
     */
    where?: TbKhachSanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbKhachSans to fetch.
     */
    orderBy?: TbKhachSanOrderByWithRelationInput | TbKhachSanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbKhachSans.
     */
    cursor?: TbKhachSanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbKhachSans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbKhachSans.
     */
    skip?: number
    distinct?: TbKhachSanScalarFieldEnum | TbKhachSanScalarFieldEnum[]
  }


  /**
   * TbKhachSan create
   */
  export type TbKhachSanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachSan
     */
    select?: TbKhachSanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachSanInclude<ExtArgs> | null
    /**
     * The data needed to create a TbKhachSan.
     */
    data: XOR<TbKhachSanCreateInput, TbKhachSanUncheckedCreateInput>
  }


  /**
   * TbKhachSan createMany
   */
  export type TbKhachSanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbKhachSans.
     */
    data: TbKhachSanCreateManyInput | TbKhachSanCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbKhachSan update
   */
  export type TbKhachSanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachSan
     */
    select?: TbKhachSanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachSanInclude<ExtArgs> | null
    /**
     * The data needed to update a TbKhachSan.
     */
    data: XOR<TbKhachSanUpdateInput, TbKhachSanUncheckedUpdateInput>
    /**
     * Choose, which TbKhachSan to update.
     */
    where: TbKhachSanWhereUniqueInput
  }


  /**
   * TbKhachSan updateMany
   */
  export type TbKhachSanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbKhachSans.
     */
    data: XOR<TbKhachSanUpdateManyMutationInput, TbKhachSanUncheckedUpdateManyInput>
    /**
     * Filter which TbKhachSans to update
     */
    where?: TbKhachSanWhereInput
  }


  /**
   * TbKhachSan upsert
   */
  export type TbKhachSanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachSan
     */
    select?: TbKhachSanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachSanInclude<ExtArgs> | null
    /**
     * The filter to search for the TbKhachSan to update in case it exists.
     */
    where: TbKhachSanWhereUniqueInput
    /**
     * In case the TbKhachSan found by the `where` argument doesn't exist, create a new TbKhachSan with this data.
     */
    create: XOR<TbKhachSanCreateInput, TbKhachSanUncheckedCreateInput>
    /**
     * In case the TbKhachSan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbKhachSanUpdateInput, TbKhachSanUncheckedUpdateInput>
  }


  /**
   * TbKhachSan delete
   */
  export type TbKhachSanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachSan
     */
    select?: TbKhachSanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachSanInclude<ExtArgs> | null
    /**
     * Filter which TbKhachSan to delete.
     */
    where: TbKhachSanWhereUniqueInput
  }


  /**
   * TbKhachSan deleteMany
   */
  export type TbKhachSanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbKhachSans to delete
     */
    where?: TbKhachSanWhereInput
  }


  /**
   * TbKhachSan.TaiKhoanSub
   */
  export type TbKhachSan$TaiKhoanSubArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubUser
     */
    select?: SubUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubUserInclude<ExtArgs> | null
    where?: SubUserWhereInput
    orderBy?: SubUserOrderByWithRelationInput | SubUserOrderByWithRelationInput[]
    cursor?: SubUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubUserScalarFieldEnum | SubUserScalarFieldEnum[]
  }


  /**
   * TbKhachSan.HoaDon
   */
  export type TbKhachSan$HoaDonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDon
     */
    select?: TbHoaDonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHoaDonInclude<ExtArgs> | null
    where?: TbHoaDonWhereInput
    orderBy?: TbHoaDonOrderByWithRelationInput | TbHoaDonOrderByWithRelationInput[]
    cursor?: TbHoaDonWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbHoaDonScalarFieldEnum | TbHoaDonScalarFieldEnum[]
  }


  /**
   * TbKhachSan.PhieuNhap
   */
  export type TbKhachSan$PhieuNhapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhieuNhap
     */
    select?: TbPhieuNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhieuNhapInclude<ExtArgs> | null
    where?: TbPhieuNhapWhereInput
    orderBy?: TbPhieuNhapOrderByWithRelationInput | TbPhieuNhapOrderByWithRelationInput[]
    cursor?: TbPhieuNhapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbPhieuNhapScalarFieldEnum | TbPhieuNhapScalarFieldEnum[]
  }


  /**
   * TbKhachSan.NhomKhuVucPhong
   */
  export type TbKhachSan$NhomKhuVucPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomKhuVucPhong
     */
    select?: TbNhomKhuVucPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomKhuVucPhongInclude<ExtArgs> | null
    where?: TbNhomKhuVucPhongWhereInput
    orderBy?: TbNhomKhuVucPhongOrderByWithRelationInput | TbNhomKhuVucPhongOrderByWithRelationInput[]
    cursor?: TbNhomKhuVucPhongWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbNhomKhuVucPhongScalarFieldEnum | TbNhomKhuVucPhongScalarFieldEnum[]
  }


  /**
   * TbKhachSan.NhomHangHoa
   */
  export type TbKhachSan$NhomHangHoaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomHangHoa
     */
    select?: TbNhomHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomHangHoaInclude<ExtArgs> | null
    where?: TbNhomHangHoaWhereInput
    orderBy?: TbNhomHangHoaOrderByWithRelationInput | TbNhomHangHoaOrderByWithRelationInput[]
    cursor?: TbNhomHangHoaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbNhomHangHoaScalarFieldEnum | TbNhomHangHoaScalarFieldEnum[]
  }


  /**
   * TbKhachSan.NhomDichVu
   */
  export type TbKhachSan$NhomDichVuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomDichVu
     */
    select?: TbNhomDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomDichVuInclude<ExtArgs> | null
    where?: TbNhomDichVuWhereInput
    orderBy?: TbNhomDichVuOrderByWithRelationInput | TbNhomDichVuOrderByWithRelationInput[]
    cursor?: TbNhomDichVuWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbNhomDichVuScalarFieldEnum | TbNhomDichVuScalarFieldEnum[]
  }


  /**
   * TbKhachSan without action
   */
  export type TbKhachSanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachSan
     */
    select?: TbKhachSanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachSanInclude<ExtArgs> | null
  }



  /**
   * Model TbLoaiPhong
   */

  export type AggregateTbLoaiPhong = {
    _count: TbLoaiPhongCountAggregateOutputType | null
    _avg: TbLoaiPhongAvgAggregateOutputType | null
    _sum: TbLoaiPhongSumAggregateOutputType | null
    _min: TbLoaiPhongMinAggregateOutputType | null
    _max: TbLoaiPhongMaxAggregateOutputType | null
  }

  export type TbLoaiPhongAvgAggregateOutputType = {
    GiaTheoGio: Decimal | null
    GiaTheoNgay: Decimal | null
  }

  export type TbLoaiPhongSumAggregateOutputType = {
    GiaTheoGio: Decimal | null
    GiaTheoNgay: Decimal | null
  }

  export type TbLoaiPhongMinAggregateOutputType = {
    id: string | null
    MaKhachSan: string | null
    TenLoaiPhong: string | null
    GiaTheoGio: Decimal | null
    GiaTheoNgay: Decimal | null
  }

  export type TbLoaiPhongMaxAggregateOutputType = {
    id: string | null
    MaKhachSan: string | null
    TenLoaiPhong: string | null
    GiaTheoGio: Decimal | null
    GiaTheoNgay: Decimal | null
  }

  export type TbLoaiPhongCountAggregateOutputType = {
    id: number
    MaKhachSan: number
    TenLoaiPhong: number
    GiaTheoGio: number
    GiaTheoNgay: number
    _all: number
  }


  export type TbLoaiPhongAvgAggregateInputType = {
    GiaTheoGio?: true
    GiaTheoNgay?: true
  }

  export type TbLoaiPhongSumAggregateInputType = {
    GiaTheoGio?: true
    GiaTheoNgay?: true
  }

  export type TbLoaiPhongMinAggregateInputType = {
    id?: true
    MaKhachSan?: true
    TenLoaiPhong?: true
    GiaTheoGio?: true
    GiaTheoNgay?: true
  }

  export type TbLoaiPhongMaxAggregateInputType = {
    id?: true
    MaKhachSan?: true
    TenLoaiPhong?: true
    GiaTheoGio?: true
    GiaTheoNgay?: true
  }

  export type TbLoaiPhongCountAggregateInputType = {
    id?: true
    MaKhachSan?: true
    TenLoaiPhong?: true
    GiaTheoGio?: true
    GiaTheoNgay?: true
    _all?: true
  }

  export type TbLoaiPhongAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbLoaiPhong to aggregate.
     */
    where?: TbLoaiPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbLoaiPhongs to fetch.
     */
    orderBy?: TbLoaiPhongOrderByWithRelationInput | TbLoaiPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbLoaiPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbLoaiPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbLoaiPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbLoaiPhongs
    **/
    _count?: true | TbLoaiPhongCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbLoaiPhongAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbLoaiPhongSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbLoaiPhongMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbLoaiPhongMaxAggregateInputType
  }

  export type GetTbLoaiPhongAggregateType<T extends TbLoaiPhongAggregateArgs> = {
        [P in keyof T & keyof AggregateTbLoaiPhong]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbLoaiPhong[P]>
      : GetScalarType<T[P], AggregateTbLoaiPhong[P]>
  }




  export type TbLoaiPhongGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbLoaiPhongWhereInput
    orderBy?: TbLoaiPhongOrderByWithAggregationInput | TbLoaiPhongOrderByWithAggregationInput[]
    by: TbLoaiPhongScalarFieldEnum[] | TbLoaiPhongScalarFieldEnum
    having?: TbLoaiPhongScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbLoaiPhongCountAggregateInputType | true
    _avg?: TbLoaiPhongAvgAggregateInputType
    _sum?: TbLoaiPhongSumAggregateInputType
    _min?: TbLoaiPhongMinAggregateInputType
    _max?: TbLoaiPhongMaxAggregateInputType
  }

  export type TbLoaiPhongGroupByOutputType = {
    id: string
    MaKhachSan: string
    TenLoaiPhong: string
    GiaTheoGio: Decimal
    GiaTheoNgay: Decimal
    _count: TbLoaiPhongCountAggregateOutputType | null
    _avg: TbLoaiPhongAvgAggregateOutputType | null
    _sum: TbLoaiPhongSumAggregateOutputType | null
    _min: TbLoaiPhongMinAggregateOutputType | null
    _max: TbLoaiPhongMaxAggregateOutputType | null
  }

  type GetTbLoaiPhongGroupByPayload<T extends TbLoaiPhongGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbLoaiPhongGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbLoaiPhongGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbLoaiPhongGroupByOutputType[P]>
            : GetScalarType<T[P], TbLoaiPhongGroupByOutputType[P]>
        }
      >
    >


  export type TbLoaiPhongSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaKhachSan?: boolean
    TenLoaiPhong?: boolean
    GiaTheoGio?: boolean
    GiaTheoNgay?: boolean
    CacLinkAnhLoaiPhong?: boolean | TbLoaiPhong$CacLinkAnhLoaiPhongArgs<ExtArgs>
    Phong?: boolean | TbLoaiPhong$PhongArgs<ExtArgs>
    _count?: boolean | TbLoaiPhongCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbLoaiPhong"]>

  export type TbLoaiPhongSelectScalar = {
    id?: boolean
    MaKhachSan?: boolean
    TenLoaiPhong?: boolean
    GiaTheoGio?: boolean
    GiaTheoNgay?: boolean
  }

  export type TbLoaiPhongInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CacLinkAnhLoaiPhong?: boolean | TbLoaiPhong$CacLinkAnhLoaiPhongArgs<ExtArgs>
    Phong?: boolean | TbLoaiPhong$PhongArgs<ExtArgs>
    _count?: boolean | TbLoaiPhongCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbLoaiPhongPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbLoaiPhong"
    objects: {
      CacLinkAnhLoaiPhong: Prisma.$TbCacLinkAnhLoaiPhongPayload<ExtArgs>[]
      Phong: Prisma.$TbPhongPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaKhachSan: string
      TenLoaiPhong: string
      GiaTheoGio: Prisma.Decimal
      GiaTheoNgay: Prisma.Decimal
    }, ExtArgs["result"]["tbLoaiPhong"]>
    composites: {}
  }


  type TbLoaiPhongGetPayload<S extends boolean | null | undefined | TbLoaiPhongDefaultArgs> = $Result.GetResult<Prisma.$TbLoaiPhongPayload, S>

  type TbLoaiPhongCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbLoaiPhongFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbLoaiPhongCountAggregateInputType | true
    }

  export interface TbLoaiPhongDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbLoaiPhong'], meta: { name: 'TbLoaiPhong' } }
    /**
     * Find zero or one TbLoaiPhong that matches the filter.
     * @param {TbLoaiPhongFindUniqueArgs} args - Arguments to find a TbLoaiPhong
     * @example
     * // Get one TbLoaiPhong
     * const tbLoaiPhong = await prisma.tbLoaiPhong.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbLoaiPhongFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbLoaiPhongFindUniqueArgs<ExtArgs>>
    ): Prisma__TbLoaiPhongClient<$Result.GetResult<Prisma.$TbLoaiPhongPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbLoaiPhong that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbLoaiPhongFindUniqueOrThrowArgs} args - Arguments to find a TbLoaiPhong
     * @example
     * // Get one TbLoaiPhong
     * const tbLoaiPhong = await prisma.tbLoaiPhong.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbLoaiPhongFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbLoaiPhongFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbLoaiPhongClient<$Result.GetResult<Prisma.$TbLoaiPhongPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbLoaiPhong that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbLoaiPhongFindFirstArgs} args - Arguments to find a TbLoaiPhong
     * @example
     * // Get one TbLoaiPhong
     * const tbLoaiPhong = await prisma.tbLoaiPhong.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbLoaiPhongFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbLoaiPhongFindFirstArgs<ExtArgs>>
    ): Prisma__TbLoaiPhongClient<$Result.GetResult<Prisma.$TbLoaiPhongPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbLoaiPhong that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbLoaiPhongFindFirstOrThrowArgs} args - Arguments to find a TbLoaiPhong
     * @example
     * // Get one TbLoaiPhong
     * const tbLoaiPhong = await prisma.tbLoaiPhong.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbLoaiPhongFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbLoaiPhongFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbLoaiPhongClient<$Result.GetResult<Prisma.$TbLoaiPhongPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbLoaiPhongs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbLoaiPhongFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbLoaiPhongs
     * const tbLoaiPhongs = await prisma.tbLoaiPhong.findMany()
     * 
     * // Get first 10 TbLoaiPhongs
     * const tbLoaiPhongs = await prisma.tbLoaiPhong.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbLoaiPhongWithIdOnly = await prisma.tbLoaiPhong.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbLoaiPhongFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbLoaiPhongFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbLoaiPhongPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbLoaiPhong.
     * @param {TbLoaiPhongCreateArgs} args - Arguments to create a TbLoaiPhong.
     * @example
     * // Create one TbLoaiPhong
     * const TbLoaiPhong = await prisma.tbLoaiPhong.create({
     *   data: {
     *     // ... data to create a TbLoaiPhong
     *   }
     * })
     * 
    **/
    create<T extends TbLoaiPhongCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbLoaiPhongCreateArgs<ExtArgs>>
    ): Prisma__TbLoaiPhongClient<$Result.GetResult<Prisma.$TbLoaiPhongPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbLoaiPhongs.
     *     @param {TbLoaiPhongCreateManyArgs} args - Arguments to create many TbLoaiPhongs.
     *     @example
     *     // Create many TbLoaiPhongs
     *     const tbLoaiPhong = await prisma.tbLoaiPhong.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbLoaiPhongCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbLoaiPhongCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbLoaiPhong.
     * @param {TbLoaiPhongDeleteArgs} args - Arguments to delete one TbLoaiPhong.
     * @example
     * // Delete one TbLoaiPhong
     * const TbLoaiPhong = await prisma.tbLoaiPhong.delete({
     *   where: {
     *     // ... filter to delete one TbLoaiPhong
     *   }
     * })
     * 
    **/
    delete<T extends TbLoaiPhongDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbLoaiPhongDeleteArgs<ExtArgs>>
    ): Prisma__TbLoaiPhongClient<$Result.GetResult<Prisma.$TbLoaiPhongPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbLoaiPhong.
     * @param {TbLoaiPhongUpdateArgs} args - Arguments to update one TbLoaiPhong.
     * @example
     * // Update one TbLoaiPhong
     * const tbLoaiPhong = await prisma.tbLoaiPhong.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbLoaiPhongUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbLoaiPhongUpdateArgs<ExtArgs>>
    ): Prisma__TbLoaiPhongClient<$Result.GetResult<Prisma.$TbLoaiPhongPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbLoaiPhongs.
     * @param {TbLoaiPhongDeleteManyArgs} args - Arguments to filter TbLoaiPhongs to delete.
     * @example
     * // Delete a few TbLoaiPhongs
     * const { count } = await prisma.tbLoaiPhong.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbLoaiPhongDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbLoaiPhongDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbLoaiPhongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbLoaiPhongUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbLoaiPhongs
     * const tbLoaiPhong = await prisma.tbLoaiPhong.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbLoaiPhongUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbLoaiPhongUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbLoaiPhong.
     * @param {TbLoaiPhongUpsertArgs} args - Arguments to update or create a TbLoaiPhong.
     * @example
     * // Update or create a TbLoaiPhong
     * const tbLoaiPhong = await prisma.tbLoaiPhong.upsert({
     *   create: {
     *     // ... data to create a TbLoaiPhong
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbLoaiPhong we want to update
     *   }
     * })
    **/
    upsert<T extends TbLoaiPhongUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbLoaiPhongUpsertArgs<ExtArgs>>
    ): Prisma__TbLoaiPhongClient<$Result.GetResult<Prisma.$TbLoaiPhongPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbLoaiPhongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbLoaiPhongCountArgs} args - Arguments to filter TbLoaiPhongs to count.
     * @example
     * // Count the number of TbLoaiPhongs
     * const count = await prisma.tbLoaiPhong.count({
     *   where: {
     *     // ... the filter for the TbLoaiPhongs we want to count
     *   }
     * })
    **/
    count<T extends TbLoaiPhongCountArgs>(
      args?: Subset<T, TbLoaiPhongCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbLoaiPhongCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbLoaiPhong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbLoaiPhongAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbLoaiPhongAggregateArgs>(args: Subset<T, TbLoaiPhongAggregateArgs>): Prisma.PrismaPromise<GetTbLoaiPhongAggregateType<T>>

    /**
     * Group by TbLoaiPhong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbLoaiPhongGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbLoaiPhongGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbLoaiPhongGroupByArgs['orderBy'] }
        : { orderBy?: TbLoaiPhongGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbLoaiPhongGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbLoaiPhongGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbLoaiPhong model
   */
  readonly fields: TbLoaiPhongFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbLoaiPhong.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbLoaiPhongClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    CacLinkAnhLoaiPhong<T extends TbLoaiPhong$CacLinkAnhLoaiPhongArgs<ExtArgs> = {}>(args?: Subset<T, TbLoaiPhong$CacLinkAnhLoaiPhongArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbCacLinkAnhLoaiPhongPayload<ExtArgs>, T, 'findMany'> | Null>;

    Phong<T extends TbLoaiPhong$PhongArgs<ExtArgs> = {}>(args?: Subset<T, TbLoaiPhong$PhongArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbPhongPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbLoaiPhong model
   */ 
  interface TbLoaiPhongFieldRefs {
    readonly id: FieldRef<"TbLoaiPhong", 'String'>
    readonly MaKhachSan: FieldRef<"TbLoaiPhong", 'String'>
    readonly TenLoaiPhong: FieldRef<"TbLoaiPhong", 'String'>
    readonly GiaTheoGio: FieldRef<"TbLoaiPhong", 'Decimal'>
    readonly GiaTheoNgay: FieldRef<"TbLoaiPhong", 'Decimal'>
  }
    

  // Custom InputTypes

  /**
   * TbLoaiPhong findUnique
   */
  export type TbLoaiPhongFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbLoaiPhong
     */
    select?: TbLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbLoaiPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbLoaiPhong to fetch.
     */
    where: TbLoaiPhongWhereUniqueInput
  }


  /**
   * TbLoaiPhong findUniqueOrThrow
   */
  export type TbLoaiPhongFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbLoaiPhong
     */
    select?: TbLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbLoaiPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbLoaiPhong to fetch.
     */
    where: TbLoaiPhongWhereUniqueInput
  }


  /**
   * TbLoaiPhong findFirst
   */
  export type TbLoaiPhongFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbLoaiPhong
     */
    select?: TbLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbLoaiPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbLoaiPhong to fetch.
     */
    where?: TbLoaiPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbLoaiPhongs to fetch.
     */
    orderBy?: TbLoaiPhongOrderByWithRelationInput | TbLoaiPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbLoaiPhongs.
     */
    cursor?: TbLoaiPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbLoaiPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbLoaiPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbLoaiPhongs.
     */
    distinct?: TbLoaiPhongScalarFieldEnum | TbLoaiPhongScalarFieldEnum[]
  }


  /**
   * TbLoaiPhong findFirstOrThrow
   */
  export type TbLoaiPhongFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbLoaiPhong
     */
    select?: TbLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbLoaiPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbLoaiPhong to fetch.
     */
    where?: TbLoaiPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbLoaiPhongs to fetch.
     */
    orderBy?: TbLoaiPhongOrderByWithRelationInput | TbLoaiPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbLoaiPhongs.
     */
    cursor?: TbLoaiPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbLoaiPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbLoaiPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbLoaiPhongs.
     */
    distinct?: TbLoaiPhongScalarFieldEnum | TbLoaiPhongScalarFieldEnum[]
  }


  /**
   * TbLoaiPhong findMany
   */
  export type TbLoaiPhongFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbLoaiPhong
     */
    select?: TbLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbLoaiPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbLoaiPhongs to fetch.
     */
    where?: TbLoaiPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbLoaiPhongs to fetch.
     */
    orderBy?: TbLoaiPhongOrderByWithRelationInput | TbLoaiPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbLoaiPhongs.
     */
    cursor?: TbLoaiPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbLoaiPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbLoaiPhongs.
     */
    skip?: number
    distinct?: TbLoaiPhongScalarFieldEnum | TbLoaiPhongScalarFieldEnum[]
  }


  /**
   * TbLoaiPhong create
   */
  export type TbLoaiPhongCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbLoaiPhong
     */
    select?: TbLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbLoaiPhongInclude<ExtArgs> | null
    /**
     * The data needed to create a TbLoaiPhong.
     */
    data: XOR<TbLoaiPhongCreateInput, TbLoaiPhongUncheckedCreateInput>
  }


  /**
   * TbLoaiPhong createMany
   */
  export type TbLoaiPhongCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbLoaiPhongs.
     */
    data: TbLoaiPhongCreateManyInput | TbLoaiPhongCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbLoaiPhong update
   */
  export type TbLoaiPhongUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbLoaiPhong
     */
    select?: TbLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbLoaiPhongInclude<ExtArgs> | null
    /**
     * The data needed to update a TbLoaiPhong.
     */
    data: XOR<TbLoaiPhongUpdateInput, TbLoaiPhongUncheckedUpdateInput>
    /**
     * Choose, which TbLoaiPhong to update.
     */
    where: TbLoaiPhongWhereUniqueInput
  }


  /**
   * TbLoaiPhong updateMany
   */
  export type TbLoaiPhongUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbLoaiPhongs.
     */
    data: XOR<TbLoaiPhongUpdateManyMutationInput, TbLoaiPhongUncheckedUpdateManyInput>
    /**
     * Filter which TbLoaiPhongs to update
     */
    where?: TbLoaiPhongWhereInput
  }


  /**
   * TbLoaiPhong upsert
   */
  export type TbLoaiPhongUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbLoaiPhong
     */
    select?: TbLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbLoaiPhongInclude<ExtArgs> | null
    /**
     * The filter to search for the TbLoaiPhong to update in case it exists.
     */
    where: TbLoaiPhongWhereUniqueInput
    /**
     * In case the TbLoaiPhong found by the `where` argument doesn't exist, create a new TbLoaiPhong with this data.
     */
    create: XOR<TbLoaiPhongCreateInput, TbLoaiPhongUncheckedCreateInput>
    /**
     * In case the TbLoaiPhong was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbLoaiPhongUpdateInput, TbLoaiPhongUncheckedUpdateInput>
  }


  /**
   * TbLoaiPhong delete
   */
  export type TbLoaiPhongDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbLoaiPhong
     */
    select?: TbLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbLoaiPhongInclude<ExtArgs> | null
    /**
     * Filter which TbLoaiPhong to delete.
     */
    where: TbLoaiPhongWhereUniqueInput
  }


  /**
   * TbLoaiPhong deleteMany
   */
  export type TbLoaiPhongDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbLoaiPhongs to delete
     */
    where?: TbLoaiPhongWhereInput
  }


  /**
   * TbLoaiPhong.CacLinkAnhLoaiPhong
   */
  export type TbLoaiPhong$CacLinkAnhLoaiPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhLoaiPhong
     */
    select?: TbCacLinkAnhLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhLoaiPhongInclude<ExtArgs> | null
    where?: TbCacLinkAnhLoaiPhongWhereInput
    orderBy?: TbCacLinkAnhLoaiPhongOrderByWithRelationInput | TbCacLinkAnhLoaiPhongOrderByWithRelationInput[]
    cursor?: TbCacLinkAnhLoaiPhongWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbCacLinkAnhLoaiPhongScalarFieldEnum | TbCacLinkAnhLoaiPhongScalarFieldEnum[]
  }


  /**
   * TbLoaiPhong.Phong
   */
  export type TbLoaiPhong$PhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhong
     */
    select?: TbPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhongInclude<ExtArgs> | null
    where?: TbPhongWhereInput
    orderBy?: TbPhongOrderByWithRelationInput | TbPhongOrderByWithRelationInput[]
    cursor?: TbPhongWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbPhongScalarFieldEnum | TbPhongScalarFieldEnum[]
  }


  /**
   * TbLoaiPhong without action
   */
  export type TbLoaiPhongDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbLoaiPhong
     */
    select?: TbLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbLoaiPhongInclude<ExtArgs> | null
  }



  /**
   * Model TbCacLinkAnhLoaiPhong
   */

  export type AggregateTbCacLinkAnhLoaiPhong = {
    _count: TbCacLinkAnhLoaiPhongCountAggregateOutputType | null
    _min: TbCacLinkAnhLoaiPhongMinAggregateOutputType | null
    _max: TbCacLinkAnhLoaiPhongMaxAggregateOutputType | null
  }

  export type TbCacLinkAnhLoaiPhongMinAggregateOutputType = {
    id: string | null
    MaLoaiPhong: string | null
    LinkAnh: string | null
  }

  export type TbCacLinkAnhLoaiPhongMaxAggregateOutputType = {
    id: string | null
    MaLoaiPhong: string | null
    LinkAnh: string | null
  }

  export type TbCacLinkAnhLoaiPhongCountAggregateOutputType = {
    id: number
    MaLoaiPhong: number
    LinkAnh: number
    _all: number
  }


  export type TbCacLinkAnhLoaiPhongMinAggregateInputType = {
    id?: true
    MaLoaiPhong?: true
    LinkAnh?: true
  }

  export type TbCacLinkAnhLoaiPhongMaxAggregateInputType = {
    id?: true
    MaLoaiPhong?: true
    LinkAnh?: true
  }

  export type TbCacLinkAnhLoaiPhongCountAggregateInputType = {
    id?: true
    MaLoaiPhong?: true
    LinkAnh?: true
    _all?: true
  }

  export type TbCacLinkAnhLoaiPhongAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbCacLinkAnhLoaiPhong to aggregate.
     */
    where?: TbCacLinkAnhLoaiPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhLoaiPhongs to fetch.
     */
    orderBy?: TbCacLinkAnhLoaiPhongOrderByWithRelationInput | TbCacLinkAnhLoaiPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbCacLinkAnhLoaiPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhLoaiPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhLoaiPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbCacLinkAnhLoaiPhongs
    **/
    _count?: true | TbCacLinkAnhLoaiPhongCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbCacLinkAnhLoaiPhongMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbCacLinkAnhLoaiPhongMaxAggregateInputType
  }

  export type GetTbCacLinkAnhLoaiPhongAggregateType<T extends TbCacLinkAnhLoaiPhongAggregateArgs> = {
        [P in keyof T & keyof AggregateTbCacLinkAnhLoaiPhong]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbCacLinkAnhLoaiPhong[P]>
      : GetScalarType<T[P], AggregateTbCacLinkAnhLoaiPhong[P]>
  }




  export type TbCacLinkAnhLoaiPhongGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbCacLinkAnhLoaiPhongWhereInput
    orderBy?: TbCacLinkAnhLoaiPhongOrderByWithAggregationInput | TbCacLinkAnhLoaiPhongOrderByWithAggregationInput[]
    by: TbCacLinkAnhLoaiPhongScalarFieldEnum[] | TbCacLinkAnhLoaiPhongScalarFieldEnum
    having?: TbCacLinkAnhLoaiPhongScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbCacLinkAnhLoaiPhongCountAggregateInputType | true
    _min?: TbCacLinkAnhLoaiPhongMinAggregateInputType
    _max?: TbCacLinkAnhLoaiPhongMaxAggregateInputType
  }

  export type TbCacLinkAnhLoaiPhongGroupByOutputType = {
    id: string
    MaLoaiPhong: string
    LinkAnh: string
    _count: TbCacLinkAnhLoaiPhongCountAggregateOutputType | null
    _min: TbCacLinkAnhLoaiPhongMinAggregateOutputType | null
    _max: TbCacLinkAnhLoaiPhongMaxAggregateOutputType | null
  }

  type GetTbCacLinkAnhLoaiPhongGroupByPayload<T extends TbCacLinkAnhLoaiPhongGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbCacLinkAnhLoaiPhongGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbCacLinkAnhLoaiPhongGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbCacLinkAnhLoaiPhongGroupByOutputType[P]>
            : GetScalarType<T[P], TbCacLinkAnhLoaiPhongGroupByOutputType[P]>
        }
      >
    >


  export type TbCacLinkAnhLoaiPhongSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaLoaiPhong?: boolean
    LinkAnh?: boolean
    LoaiPhong?: boolean | TbLoaiPhongDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbCacLinkAnhLoaiPhong"]>

  export type TbCacLinkAnhLoaiPhongSelectScalar = {
    id?: boolean
    MaLoaiPhong?: boolean
    LinkAnh?: boolean
  }

  export type TbCacLinkAnhLoaiPhongInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    LoaiPhong?: boolean | TbLoaiPhongDefaultArgs<ExtArgs>
  }


  export type $TbCacLinkAnhLoaiPhongPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbCacLinkAnhLoaiPhong"
    objects: {
      LoaiPhong: Prisma.$TbLoaiPhongPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaLoaiPhong: string
      LinkAnh: string
    }, ExtArgs["result"]["tbCacLinkAnhLoaiPhong"]>
    composites: {}
  }


  type TbCacLinkAnhLoaiPhongGetPayload<S extends boolean | null | undefined | TbCacLinkAnhLoaiPhongDefaultArgs> = $Result.GetResult<Prisma.$TbCacLinkAnhLoaiPhongPayload, S>

  type TbCacLinkAnhLoaiPhongCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbCacLinkAnhLoaiPhongFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbCacLinkAnhLoaiPhongCountAggregateInputType | true
    }

  export interface TbCacLinkAnhLoaiPhongDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbCacLinkAnhLoaiPhong'], meta: { name: 'TbCacLinkAnhLoaiPhong' } }
    /**
     * Find zero or one TbCacLinkAnhLoaiPhong that matches the filter.
     * @param {TbCacLinkAnhLoaiPhongFindUniqueArgs} args - Arguments to find a TbCacLinkAnhLoaiPhong
     * @example
     * // Get one TbCacLinkAnhLoaiPhong
     * const tbCacLinkAnhLoaiPhong = await prisma.tbCacLinkAnhLoaiPhong.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbCacLinkAnhLoaiPhongFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhLoaiPhongFindUniqueArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhLoaiPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhLoaiPhongPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbCacLinkAnhLoaiPhong that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbCacLinkAnhLoaiPhongFindUniqueOrThrowArgs} args - Arguments to find a TbCacLinkAnhLoaiPhong
     * @example
     * // Get one TbCacLinkAnhLoaiPhong
     * const tbCacLinkAnhLoaiPhong = await prisma.tbCacLinkAnhLoaiPhong.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbCacLinkAnhLoaiPhongFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhLoaiPhongFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhLoaiPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhLoaiPhongPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbCacLinkAnhLoaiPhong that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhLoaiPhongFindFirstArgs} args - Arguments to find a TbCacLinkAnhLoaiPhong
     * @example
     * // Get one TbCacLinkAnhLoaiPhong
     * const tbCacLinkAnhLoaiPhong = await prisma.tbCacLinkAnhLoaiPhong.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbCacLinkAnhLoaiPhongFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhLoaiPhongFindFirstArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhLoaiPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhLoaiPhongPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbCacLinkAnhLoaiPhong that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhLoaiPhongFindFirstOrThrowArgs} args - Arguments to find a TbCacLinkAnhLoaiPhong
     * @example
     * // Get one TbCacLinkAnhLoaiPhong
     * const tbCacLinkAnhLoaiPhong = await prisma.tbCacLinkAnhLoaiPhong.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbCacLinkAnhLoaiPhongFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhLoaiPhongFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhLoaiPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhLoaiPhongPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbCacLinkAnhLoaiPhongs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhLoaiPhongFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbCacLinkAnhLoaiPhongs
     * const tbCacLinkAnhLoaiPhongs = await prisma.tbCacLinkAnhLoaiPhong.findMany()
     * 
     * // Get first 10 TbCacLinkAnhLoaiPhongs
     * const tbCacLinkAnhLoaiPhongs = await prisma.tbCacLinkAnhLoaiPhong.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbCacLinkAnhLoaiPhongWithIdOnly = await prisma.tbCacLinkAnhLoaiPhong.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbCacLinkAnhLoaiPhongFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhLoaiPhongFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbCacLinkAnhLoaiPhongPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbCacLinkAnhLoaiPhong.
     * @param {TbCacLinkAnhLoaiPhongCreateArgs} args - Arguments to create a TbCacLinkAnhLoaiPhong.
     * @example
     * // Create one TbCacLinkAnhLoaiPhong
     * const TbCacLinkAnhLoaiPhong = await prisma.tbCacLinkAnhLoaiPhong.create({
     *   data: {
     *     // ... data to create a TbCacLinkAnhLoaiPhong
     *   }
     * })
     * 
    **/
    create<T extends TbCacLinkAnhLoaiPhongCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhLoaiPhongCreateArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhLoaiPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhLoaiPhongPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbCacLinkAnhLoaiPhongs.
     *     @param {TbCacLinkAnhLoaiPhongCreateManyArgs} args - Arguments to create many TbCacLinkAnhLoaiPhongs.
     *     @example
     *     // Create many TbCacLinkAnhLoaiPhongs
     *     const tbCacLinkAnhLoaiPhong = await prisma.tbCacLinkAnhLoaiPhong.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbCacLinkAnhLoaiPhongCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhLoaiPhongCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbCacLinkAnhLoaiPhong.
     * @param {TbCacLinkAnhLoaiPhongDeleteArgs} args - Arguments to delete one TbCacLinkAnhLoaiPhong.
     * @example
     * // Delete one TbCacLinkAnhLoaiPhong
     * const TbCacLinkAnhLoaiPhong = await prisma.tbCacLinkAnhLoaiPhong.delete({
     *   where: {
     *     // ... filter to delete one TbCacLinkAnhLoaiPhong
     *   }
     * })
     * 
    **/
    delete<T extends TbCacLinkAnhLoaiPhongDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhLoaiPhongDeleteArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhLoaiPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhLoaiPhongPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbCacLinkAnhLoaiPhong.
     * @param {TbCacLinkAnhLoaiPhongUpdateArgs} args - Arguments to update one TbCacLinkAnhLoaiPhong.
     * @example
     * // Update one TbCacLinkAnhLoaiPhong
     * const tbCacLinkAnhLoaiPhong = await prisma.tbCacLinkAnhLoaiPhong.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbCacLinkAnhLoaiPhongUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhLoaiPhongUpdateArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhLoaiPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhLoaiPhongPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbCacLinkAnhLoaiPhongs.
     * @param {TbCacLinkAnhLoaiPhongDeleteManyArgs} args - Arguments to filter TbCacLinkAnhLoaiPhongs to delete.
     * @example
     * // Delete a few TbCacLinkAnhLoaiPhongs
     * const { count } = await prisma.tbCacLinkAnhLoaiPhong.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbCacLinkAnhLoaiPhongDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhLoaiPhongDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbCacLinkAnhLoaiPhongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhLoaiPhongUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbCacLinkAnhLoaiPhongs
     * const tbCacLinkAnhLoaiPhong = await prisma.tbCacLinkAnhLoaiPhong.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbCacLinkAnhLoaiPhongUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhLoaiPhongUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbCacLinkAnhLoaiPhong.
     * @param {TbCacLinkAnhLoaiPhongUpsertArgs} args - Arguments to update or create a TbCacLinkAnhLoaiPhong.
     * @example
     * // Update or create a TbCacLinkAnhLoaiPhong
     * const tbCacLinkAnhLoaiPhong = await prisma.tbCacLinkAnhLoaiPhong.upsert({
     *   create: {
     *     // ... data to create a TbCacLinkAnhLoaiPhong
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbCacLinkAnhLoaiPhong we want to update
     *   }
     * })
    **/
    upsert<T extends TbCacLinkAnhLoaiPhongUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhLoaiPhongUpsertArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhLoaiPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhLoaiPhongPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbCacLinkAnhLoaiPhongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhLoaiPhongCountArgs} args - Arguments to filter TbCacLinkAnhLoaiPhongs to count.
     * @example
     * // Count the number of TbCacLinkAnhLoaiPhongs
     * const count = await prisma.tbCacLinkAnhLoaiPhong.count({
     *   where: {
     *     // ... the filter for the TbCacLinkAnhLoaiPhongs we want to count
     *   }
     * })
    **/
    count<T extends TbCacLinkAnhLoaiPhongCountArgs>(
      args?: Subset<T, TbCacLinkAnhLoaiPhongCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbCacLinkAnhLoaiPhongCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbCacLinkAnhLoaiPhong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhLoaiPhongAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbCacLinkAnhLoaiPhongAggregateArgs>(args: Subset<T, TbCacLinkAnhLoaiPhongAggregateArgs>): Prisma.PrismaPromise<GetTbCacLinkAnhLoaiPhongAggregateType<T>>

    /**
     * Group by TbCacLinkAnhLoaiPhong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhLoaiPhongGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbCacLinkAnhLoaiPhongGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbCacLinkAnhLoaiPhongGroupByArgs['orderBy'] }
        : { orderBy?: TbCacLinkAnhLoaiPhongGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbCacLinkAnhLoaiPhongGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbCacLinkAnhLoaiPhongGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbCacLinkAnhLoaiPhong model
   */
  readonly fields: TbCacLinkAnhLoaiPhongFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbCacLinkAnhLoaiPhong.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbCacLinkAnhLoaiPhongClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    LoaiPhong<T extends TbLoaiPhongDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbLoaiPhongDefaultArgs<ExtArgs>>): Prisma__TbLoaiPhongClient<$Result.GetResult<Prisma.$TbLoaiPhongPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbCacLinkAnhLoaiPhong model
   */ 
  interface TbCacLinkAnhLoaiPhongFieldRefs {
    readonly id: FieldRef<"TbCacLinkAnhLoaiPhong", 'String'>
    readonly MaLoaiPhong: FieldRef<"TbCacLinkAnhLoaiPhong", 'String'>
    readonly LinkAnh: FieldRef<"TbCacLinkAnhLoaiPhong", 'String'>
  }
    

  // Custom InputTypes

  /**
   * TbCacLinkAnhLoaiPhong findUnique
   */
  export type TbCacLinkAnhLoaiPhongFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhLoaiPhong
     */
    select?: TbCacLinkAnhLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhLoaiPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhLoaiPhong to fetch.
     */
    where: TbCacLinkAnhLoaiPhongWhereUniqueInput
  }


  /**
   * TbCacLinkAnhLoaiPhong findUniqueOrThrow
   */
  export type TbCacLinkAnhLoaiPhongFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhLoaiPhong
     */
    select?: TbCacLinkAnhLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhLoaiPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhLoaiPhong to fetch.
     */
    where: TbCacLinkAnhLoaiPhongWhereUniqueInput
  }


  /**
   * TbCacLinkAnhLoaiPhong findFirst
   */
  export type TbCacLinkAnhLoaiPhongFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhLoaiPhong
     */
    select?: TbCacLinkAnhLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhLoaiPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhLoaiPhong to fetch.
     */
    where?: TbCacLinkAnhLoaiPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhLoaiPhongs to fetch.
     */
    orderBy?: TbCacLinkAnhLoaiPhongOrderByWithRelationInput | TbCacLinkAnhLoaiPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbCacLinkAnhLoaiPhongs.
     */
    cursor?: TbCacLinkAnhLoaiPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhLoaiPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhLoaiPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbCacLinkAnhLoaiPhongs.
     */
    distinct?: TbCacLinkAnhLoaiPhongScalarFieldEnum | TbCacLinkAnhLoaiPhongScalarFieldEnum[]
  }


  /**
   * TbCacLinkAnhLoaiPhong findFirstOrThrow
   */
  export type TbCacLinkAnhLoaiPhongFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhLoaiPhong
     */
    select?: TbCacLinkAnhLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhLoaiPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhLoaiPhong to fetch.
     */
    where?: TbCacLinkAnhLoaiPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhLoaiPhongs to fetch.
     */
    orderBy?: TbCacLinkAnhLoaiPhongOrderByWithRelationInput | TbCacLinkAnhLoaiPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbCacLinkAnhLoaiPhongs.
     */
    cursor?: TbCacLinkAnhLoaiPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhLoaiPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhLoaiPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbCacLinkAnhLoaiPhongs.
     */
    distinct?: TbCacLinkAnhLoaiPhongScalarFieldEnum | TbCacLinkAnhLoaiPhongScalarFieldEnum[]
  }


  /**
   * TbCacLinkAnhLoaiPhong findMany
   */
  export type TbCacLinkAnhLoaiPhongFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhLoaiPhong
     */
    select?: TbCacLinkAnhLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhLoaiPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhLoaiPhongs to fetch.
     */
    where?: TbCacLinkAnhLoaiPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhLoaiPhongs to fetch.
     */
    orderBy?: TbCacLinkAnhLoaiPhongOrderByWithRelationInput | TbCacLinkAnhLoaiPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbCacLinkAnhLoaiPhongs.
     */
    cursor?: TbCacLinkAnhLoaiPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhLoaiPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhLoaiPhongs.
     */
    skip?: number
    distinct?: TbCacLinkAnhLoaiPhongScalarFieldEnum | TbCacLinkAnhLoaiPhongScalarFieldEnum[]
  }


  /**
   * TbCacLinkAnhLoaiPhong create
   */
  export type TbCacLinkAnhLoaiPhongCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhLoaiPhong
     */
    select?: TbCacLinkAnhLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhLoaiPhongInclude<ExtArgs> | null
    /**
     * The data needed to create a TbCacLinkAnhLoaiPhong.
     */
    data: XOR<TbCacLinkAnhLoaiPhongCreateInput, TbCacLinkAnhLoaiPhongUncheckedCreateInput>
  }


  /**
   * TbCacLinkAnhLoaiPhong createMany
   */
  export type TbCacLinkAnhLoaiPhongCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbCacLinkAnhLoaiPhongs.
     */
    data: TbCacLinkAnhLoaiPhongCreateManyInput | TbCacLinkAnhLoaiPhongCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbCacLinkAnhLoaiPhong update
   */
  export type TbCacLinkAnhLoaiPhongUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhLoaiPhong
     */
    select?: TbCacLinkAnhLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhLoaiPhongInclude<ExtArgs> | null
    /**
     * The data needed to update a TbCacLinkAnhLoaiPhong.
     */
    data: XOR<TbCacLinkAnhLoaiPhongUpdateInput, TbCacLinkAnhLoaiPhongUncheckedUpdateInput>
    /**
     * Choose, which TbCacLinkAnhLoaiPhong to update.
     */
    where: TbCacLinkAnhLoaiPhongWhereUniqueInput
  }


  /**
   * TbCacLinkAnhLoaiPhong updateMany
   */
  export type TbCacLinkAnhLoaiPhongUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbCacLinkAnhLoaiPhongs.
     */
    data: XOR<TbCacLinkAnhLoaiPhongUpdateManyMutationInput, TbCacLinkAnhLoaiPhongUncheckedUpdateManyInput>
    /**
     * Filter which TbCacLinkAnhLoaiPhongs to update
     */
    where?: TbCacLinkAnhLoaiPhongWhereInput
  }


  /**
   * TbCacLinkAnhLoaiPhong upsert
   */
  export type TbCacLinkAnhLoaiPhongUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhLoaiPhong
     */
    select?: TbCacLinkAnhLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhLoaiPhongInclude<ExtArgs> | null
    /**
     * The filter to search for the TbCacLinkAnhLoaiPhong to update in case it exists.
     */
    where: TbCacLinkAnhLoaiPhongWhereUniqueInput
    /**
     * In case the TbCacLinkAnhLoaiPhong found by the `where` argument doesn't exist, create a new TbCacLinkAnhLoaiPhong with this data.
     */
    create: XOR<TbCacLinkAnhLoaiPhongCreateInput, TbCacLinkAnhLoaiPhongUncheckedCreateInput>
    /**
     * In case the TbCacLinkAnhLoaiPhong was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbCacLinkAnhLoaiPhongUpdateInput, TbCacLinkAnhLoaiPhongUncheckedUpdateInput>
  }


  /**
   * TbCacLinkAnhLoaiPhong delete
   */
  export type TbCacLinkAnhLoaiPhongDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhLoaiPhong
     */
    select?: TbCacLinkAnhLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhLoaiPhongInclude<ExtArgs> | null
    /**
     * Filter which TbCacLinkAnhLoaiPhong to delete.
     */
    where: TbCacLinkAnhLoaiPhongWhereUniqueInput
  }


  /**
   * TbCacLinkAnhLoaiPhong deleteMany
   */
  export type TbCacLinkAnhLoaiPhongDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbCacLinkAnhLoaiPhongs to delete
     */
    where?: TbCacLinkAnhLoaiPhongWhereInput
  }


  /**
   * TbCacLinkAnhLoaiPhong without action
   */
  export type TbCacLinkAnhLoaiPhongDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhLoaiPhong
     */
    select?: TbCacLinkAnhLoaiPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhLoaiPhongInclude<ExtArgs> | null
  }



  /**
   * Model TbCacLinkAnhDichVu
   */

  export type AggregateTbCacLinkAnhDichVu = {
    _count: TbCacLinkAnhDichVuCountAggregateOutputType | null
    _min: TbCacLinkAnhDichVuMinAggregateOutputType | null
    _max: TbCacLinkAnhDichVuMaxAggregateOutputType | null
  }

  export type TbCacLinkAnhDichVuMinAggregateOutputType = {
    id: string | null
    MaDichVu: string | null
    LinkAnh: string | null
  }

  export type TbCacLinkAnhDichVuMaxAggregateOutputType = {
    id: string | null
    MaDichVu: string | null
    LinkAnh: string | null
  }

  export type TbCacLinkAnhDichVuCountAggregateOutputType = {
    id: number
    MaDichVu: number
    LinkAnh: number
    _all: number
  }


  export type TbCacLinkAnhDichVuMinAggregateInputType = {
    id?: true
    MaDichVu?: true
    LinkAnh?: true
  }

  export type TbCacLinkAnhDichVuMaxAggregateInputType = {
    id?: true
    MaDichVu?: true
    LinkAnh?: true
  }

  export type TbCacLinkAnhDichVuCountAggregateInputType = {
    id?: true
    MaDichVu?: true
    LinkAnh?: true
    _all?: true
  }

  export type TbCacLinkAnhDichVuAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbCacLinkAnhDichVu to aggregate.
     */
    where?: TbCacLinkAnhDichVuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhDichVus to fetch.
     */
    orderBy?: TbCacLinkAnhDichVuOrderByWithRelationInput | TbCacLinkAnhDichVuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbCacLinkAnhDichVuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhDichVus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhDichVus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbCacLinkAnhDichVus
    **/
    _count?: true | TbCacLinkAnhDichVuCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbCacLinkAnhDichVuMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbCacLinkAnhDichVuMaxAggregateInputType
  }

  export type GetTbCacLinkAnhDichVuAggregateType<T extends TbCacLinkAnhDichVuAggregateArgs> = {
        [P in keyof T & keyof AggregateTbCacLinkAnhDichVu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbCacLinkAnhDichVu[P]>
      : GetScalarType<T[P], AggregateTbCacLinkAnhDichVu[P]>
  }




  export type TbCacLinkAnhDichVuGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbCacLinkAnhDichVuWhereInput
    orderBy?: TbCacLinkAnhDichVuOrderByWithAggregationInput | TbCacLinkAnhDichVuOrderByWithAggregationInput[]
    by: TbCacLinkAnhDichVuScalarFieldEnum[] | TbCacLinkAnhDichVuScalarFieldEnum
    having?: TbCacLinkAnhDichVuScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbCacLinkAnhDichVuCountAggregateInputType | true
    _min?: TbCacLinkAnhDichVuMinAggregateInputType
    _max?: TbCacLinkAnhDichVuMaxAggregateInputType
  }

  export type TbCacLinkAnhDichVuGroupByOutputType = {
    id: string
    MaDichVu: string
    LinkAnh: string
    _count: TbCacLinkAnhDichVuCountAggregateOutputType | null
    _min: TbCacLinkAnhDichVuMinAggregateOutputType | null
    _max: TbCacLinkAnhDichVuMaxAggregateOutputType | null
  }

  type GetTbCacLinkAnhDichVuGroupByPayload<T extends TbCacLinkAnhDichVuGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbCacLinkAnhDichVuGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbCacLinkAnhDichVuGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbCacLinkAnhDichVuGroupByOutputType[P]>
            : GetScalarType<T[P], TbCacLinkAnhDichVuGroupByOutputType[P]>
        }
      >
    >


  export type TbCacLinkAnhDichVuSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaDichVu?: boolean
    LinkAnh?: boolean
    DichVu?: boolean | TbDichVuDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbCacLinkAnhDichVu"]>

  export type TbCacLinkAnhDichVuSelectScalar = {
    id?: boolean
    MaDichVu?: boolean
    LinkAnh?: boolean
  }

  export type TbCacLinkAnhDichVuInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DichVu?: boolean | TbDichVuDefaultArgs<ExtArgs>
  }


  export type $TbCacLinkAnhDichVuPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbCacLinkAnhDichVu"
    objects: {
      DichVu: Prisma.$TbDichVuPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaDichVu: string
      LinkAnh: string
    }, ExtArgs["result"]["tbCacLinkAnhDichVu"]>
    composites: {}
  }


  type TbCacLinkAnhDichVuGetPayload<S extends boolean | null | undefined | TbCacLinkAnhDichVuDefaultArgs> = $Result.GetResult<Prisma.$TbCacLinkAnhDichVuPayload, S>

  type TbCacLinkAnhDichVuCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbCacLinkAnhDichVuFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbCacLinkAnhDichVuCountAggregateInputType | true
    }

  export interface TbCacLinkAnhDichVuDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbCacLinkAnhDichVu'], meta: { name: 'TbCacLinkAnhDichVu' } }
    /**
     * Find zero or one TbCacLinkAnhDichVu that matches the filter.
     * @param {TbCacLinkAnhDichVuFindUniqueArgs} args - Arguments to find a TbCacLinkAnhDichVu
     * @example
     * // Get one TbCacLinkAnhDichVu
     * const tbCacLinkAnhDichVu = await prisma.tbCacLinkAnhDichVu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbCacLinkAnhDichVuFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhDichVuFindUniqueArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhDichVuClient<$Result.GetResult<Prisma.$TbCacLinkAnhDichVuPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbCacLinkAnhDichVu that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbCacLinkAnhDichVuFindUniqueOrThrowArgs} args - Arguments to find a TbCacLinkAnhDichVu
     * @example
     * // Get one TbCacLinkAnhDichVu
     * const tbCacLinkAnhDichVu = await prisma.tbCacLinkAnhDichVu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbCacLinkAnhDichVuFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhDichVuFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhDichVuClient<$Result.GetResult<Prisma.$TbCacLinkAnhDichVuPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbCacLinkAnhDichVu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhDichVuFindFirstArgs} args - Arguments to find a TbCacLinkAnhDichVu
     * @example
     * // Get one TbCacLinkAnhDichVu
     * const tbCacLinkAnhDichVu = await prisma.tbCacLinkAnhDichVu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbCacLinkAnhDichVuFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhDichVuFindFirstArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhDichVuClient<$Result.GetResult<Prisma.$TbCacLinkAnhDichVuPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbCacLinkAnhDichVu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhDichVuFindFirstOrThrowArgs} args - Arguments to find a TbCacLinkAnhDichVu
     * @example
     * // Get one TbCacLinkAnhDichVu
     * const tbCacLinkAnhDichVu = await prisma.tbCacLinkAnhDichVu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbCacLinkAnhDichVuFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhDichVuFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhDichVuClient<$Result.GetResult<Prisma.$TbCacLinkAnhDichVuPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbCacLinkAnhDichVus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhDichVuFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbCacLinkAnhDichVus
     * const tbCacLinkAnhDichVus = await prisma.tbCacLinkAnhDichVu.findMany()
     * 
     * // Get first 10 TbCacLinkAnhDichVus
     * const tbCacLinkAnhDichVus = await prisma.tbCacLinkAnhDichVu.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbCacLinkAnhDichVuWithIdOnly = await prisma.tbCacLinkAnhDichVu.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbCacLinkAnhDichVuFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhDichVuFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbCacLinkAnhDichVuPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbCacLinkAnhDichVu.
     * @param {TbCacLinkAnhDichVuCreateArgs} args - Arguments to create a TbCacLinkAnhDichVu.
     * @example
     * // Create one TbCacLinkAnhDichVu
     * const TbCacLinkAnhDichVu = await prisma.tbCacLinkAnhDichVu.create({
     *   data: {
     *     // ... data to create a TbCacLinkAnhDichVu
     *   }
     * })
     * 
    **/
    create<T extends TbCacLinkAnhDichVuCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhDichVuCreateArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhDichVuClient<$Result.GetResult<Prisma.$TbCacLinkAnhDichVuPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbCacLinkAnhDichVus.
     *     @param {TbCacLinkAnhDichVuCreateManyArgs} args - Arguments to create many TbCacLinkAnhDichVus.
     *     @example
     *     // Create many TbCacLinkAnhDichVus
     *     const tbCacLinkAnhDichVu = await prisma.tbCacLinkAnhDichVu.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbCacLinkAnhDichVuCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhDichVuCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbCacLinkAnhDichVu.
     * @param {TbCacLinkAnhDichVuDeleteArgs} args - Arguments to delete one TbCacLinkAnhDichVu.
     * @example
     * // Delete one TbCacLinkAnhDichVu
     * const TbCacLinkAnhDichVu = await prisma.tbCacLinkAnhDichVu.delete({
     *   where: {
     *     // ... filter to delete one TbCacLinkAnhDichVu
     *   }
     * })
     * 
    **/
    delete<T extends TbCacLinkAnhDichVuDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhDichVuDeleteArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhDichVuClient<$Result.GetResult<Prisma.$TbCacLinkAnhDichVuPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbCacLinkAnhDichVu.
     * @param {TbCacLinkAnhDichVuUpdateArgs} args - Arguments to update one TbCacLinkAnhDichVu.
     * @example
     * // Update one TbCacLinkAnhDichVu
     * const tbCacLinkAnhDichVu = await prisma.tbCacLinkAnhDichVu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbCacLinkAnhDichVuUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhDichVuUpdateArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhDichVuClient<$Result.GetResult<Prisma.$TbCacLinkAnhDichVuPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbCacLinkAnhDichVus.
     * @param {TbCacLinkAnhDichVuDeleteManyArgs} args - Arguments to filter TbCacLinkAnhDichVus to delete.
     * @example
     * // Delete a few TbCacLinkAnhDichVus
     * const { count } = await prisma.tbCacLinkAnhDichVu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbCacLinkAnhDichVuDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhDichVuDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbCacLinkAnhDichVus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhDichVuUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbCacLinkAnhDichVus
     * const tbCacLinkAnhDichVu = await prisma.tbCacLinkAnhDichVu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbCacLinkAnhDichVuUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhDichVuUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbCacLinkAnhDichVu.
     * @param {TbCacLinkAnhDichVuUpsertArgs} args - Arguments to update or create a TbCacLinkAnhDichVu.
     * @example
     * // Update or create a TbCacLinkAnhDichVu
     * const tbCacLinkAnhDichVu = await prisma.tbCacLinkAnhDichVu.upsert({
     *   create: {
     *     // ... data to create a TbCacLinkAnhDichVu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbCacLinkAnhDichVu we want to update
     *   }
     * })
    **/
    upsert<T extends TbCacLinkAnhDichVuUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhDichVuUpsertArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhDichVuClient<$Result.GetResult<Prisma.$TbCacLinkAnhDichVuPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbCacLinkAnhDichVus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhDichVuCountArgs} args - Arguments to filter TbCacLinkAnhDichVus to count.
     * @example
     * // Count the number of TbCacLinkAnhDichVus
     * const count = await prisma.tbCacLinkAnhDichVu.count({
     *   where: {
     *     // ... the filter for the TbCacLinkAnhDichVus we want to count
     *   }
     * })
    **/
    count<T extends TbCacLinkAnhDichVuCountArgs>(
      args?: Subset<T, TbCacLinkAnhDichVuCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbCacLinkAnhDichVuCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbCacLinkAnhDichVu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhDichVuAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbCacLinkAnhDichVuAggregateArgs>(args: Subset<T, TbCacLinkAnhDichVuAggregateArgs>): Prisma.PrismaPromise<GetTbCacLinkAnhDichVuAggregateType<T>>

    /**
     * Group by TbCacLinkAnhDichVu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhDichVuGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbCacLinkAnhDichVuGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbCacLinkAnhDichVuGroupByArgs['orderBy'] }
        : { orderBy?: TbCacLinkAnhDichVuGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbCacLinkAnhDichVuGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbCacLinkAnhDichVuGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbCacLinkAnhDichVu model
   */
  readonly fields: TbCacLinkAnhDichVuFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbCacLinkAnhDichVu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbCacLinkAnhDichVuClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    DichVu<T extends TbDichVuDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbDichVuDefaultArgs<ExtArgs>>): Prisma__TbDichVuClient<$Result.GetResult<Prisma.$TbDichVuPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbCacLinkAnhDichVu model
   */ 
  interface TbCacLinkAnhDichVuFieldRefs {
    readonly id: FieldRef<"TbCacLinkAnhDichVu", 'String'>
    readonly MaDichVu: FieldRef<"TbCacLinkAnhDichVu", 'String'>
    readonly LinkAnh: FieldRef<"TbCacLinkAnhDichVu", 'String'>
  }
    

  // Custom InputTypes

  /**
   * TbCacLinkAnhDichVu findUnique
   */
  export type TbCacLinkAnhDichVuFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhDichVu
     */
    select?: TbCacLinkAnhDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhDichVu to fetch.
     */
    where: TbCacLinkAnhDichVuWhereUniqueInput
  }


  /**
   * TbCacLinkAnhDichVu findUniqueOrThrow
   */
  export type TbCacLinkAnhDichVuFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhDichVu
     */
    select?: TbCacLinkAnhDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhDichVu to fetch.
     */
    where: TbCacLinkAnhDichVuWhereUniqueInput
  }


  /**
   * TbCacLinkAnhDichVu findFirst
   */
  export type TbCacLinkAnhDichVuFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhDichVu
     */
    select?: TbCacLinkAnhDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhDichVu to fetch.
     */
    where?: TbCacLinkAnhDichVuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhDichVus to fetch.
     */
    orderBy?: TbCacLinkAnhDichVuOrderByWithRelationInput | TbCacLinkAnhDichVuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbCacLinkAnhDichVus.
     */
    cursor?: TbCacLinkAnhDichVuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhDichVus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhDichVus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbCacLinkAnhDichVus.
     */
    distinct?: TbCacLinkAnhDichVuScalarFieldEnum | TbCacLinkAnhDichVuScalarFieldEnum[]
  }


  /**
   * TbCacLinkAnhDichVu findFirstOrThrow
   */
  export type TbCacLinkAnhDichVuFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhDichVu
     */
    select?: TbCacLinkAnhDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhDichVu to fetch.
     */
    where?: TbCacLinkAnhDichVuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhDichVus to fetch.
     */
    orderBy?: TbCacLinkAnhDichVuOrderByWithRelationInput | TbCacLinkAnhDichVuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbCacLinkAnhDichVus.
     */
    cursor?: TbCacLinkAnhDichVuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhDichVus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhDichVus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbCacLinkAnhDichVus.
     */
    distinct?: TbCacLinkAnhDichVuScalarFieldEnum | TbCacLinkAnhDichVuScalarFieldEnum[]
  }


  /**
   * TbCacLinkAnhDichVu findMany
   */
  export type TbCacLinkAnhDichVuFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhDichVu
     */
    select?: TbCacLinkAnhDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhDichVuInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhDichVus to fetch.
     */
    where?: TbCacLinkAnhDichVuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhDichVus to fetch.
     */
    orderBy?: TbCacLinkAnhDichVuOrderByWithRelationInput | TbCacLinkAnhDichVuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbCacLinkAnhDichVus.
     */
    cursor?: TbCacLinkAnhDichVuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhDichVus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhDichVus.
     */
    skip?: number
    distinct?: TbCacLinkAnhDichVuScalarFieldEnum | TbCacLinkAnhDichVuScalarFieldEnum[]
  }


  /**
   * TbCacLinkAnhDichVu create
   */
  export type TbCacLinkAnhDichVuCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhDichVu
     */
    select?: TbCacLinkAnhDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhDichVuInclude<ExtArgs> | null
    /**
     * The data needed to create a TbCacLinkAnhDichVu.
     */
    data: XOR<TbCacLinkAnhDichVuCreateInput, TbCacLinkAnhDichVuUncheckedCreateInput>
  }


  /**
   * TbCacLinkAnhDichVu createMany
   */
  export type TbCacLinkAnhDichVuCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbCacLinkAnhDichVus.
     */
    data: TbCacLinkAnhDichVuCreateManyInput | TbCacLinkAnhDichVuCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbCacLinkAnhDichVu update
   */
  export type TbCacLinkAnhDichVuUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhDichVu
     */
    select?: TbCacLinkAnhDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhDichVuInclude<ExtArgs> | null
    /**
     * The data needed to update a TbCacLinkAnhDichVu.
     */
    data: XOR<TbCacLinkAnhDichVuUpdateInput, TbCacLinkAnhDichVuUncheckedUpdateInput>
    /**
     * Choose, which TbCacLinkAnhDichVu to update.
     */
    where: TbCacLinkAnhDichVuWhereUniqueInput
  }


  /**
   * TbCacLinkAnhDichVu updateMany
   */
  export type TbCacLinkAnhDichVuUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbCacLinkAnhDichVus.
     */
    data: XOR<TbCacLinkAnhDichVuUpdateManyMutationInput, TbCacLinkAnhDichVuUncheckedUpdateManyInput>
    /**
     * Filter which TbCacLinkAnhDichVus to update
     */
    where?: TbCacLinkAnhDichVuWhereInput
  }


  /**
   * TbCacLinkAnhDichVu upsert
   */
  export type TbCacLinkAnhDichVuUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhDichVu
     */
    select?: TbCacLinkAnhDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhDichVuInclude<ExtArgs> | null
    /**
     * The filter to search for the TbCacLinkAnhDichVu to update in case it exists.
     */
    where: TbCacLinkAnhDichVuWhereUniqueInput
    /**
     * In case the TbCacLinkAnhDichVu found by the `where` argument doesn't exist, create a new TbCacLinkAnhDichVu with this data.
     */
    create: XOR<TbCacLinkAnhDichVuCreateInput, TbCacLinkAnhDichVuUncheckedCreateInput>
    /**
     * In case the TbCacLinkAnhDichVu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbCacLinkAnhDichVuUpdateInput, TbCacLinkAnhDichVuUncheckedUpdateInput>
  }


  /**
   * TbCacLinkAnhDichVu delete
   */
  export type TbCacLinkAnhDichVuDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhDichVu
     */
    select?: TbCacLinkAnhDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhDichVuInclude<ExtArgs> | null
    /**
     * Filter which TbCacLinkAnhDichVu to delete.
     */
    where: TbCacLinkAnhDichVuWhereUniqueInput
  }


  /**
   * TbCacLinkAnhDichVu deleteMany
   */
  export type TbCacLinkAnhDichVuDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbCacLinkAnhDichVus to delete
     */
    where?: TbCacLinkAnhDichVuWhereInput
  }


  /**
   * TbCacLinkAnhDichVu without action
   */
  export type TbCacLinkAnhDichVuDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhDichVu
     */
    select?: TbCacLinkAnhDichVuSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhDichVuInclude<ExtArgs> | null
  }



  /**
   * Model TbCacLinkAnhHangHoa
   */

  export type AggregateTbCacLinkAnhHangHoa = {
    _count: TbCacLinkAnhHangHoaCountAggregateOutputType | null
    _min: TbCacLinkAnhHangHoaMinAggregateOutputType | null
    _max: TbCacLinkAnhHangHoaMaxAggregateOutputType | null
  }

  export type TbCacLinkAnhHangHoaMinAggregateOutputType = {
    id: string | null
    MaHangHoa: string | null
    LinkAnh: string | null
  }

  export type TbCacLinkAnhHangHoaMaxAggregateOutputType = {
    id: string | null
    MaHangHoa: string | null
    LinkAnh: string | null
  }

  export type TbCacLinkAnhHangHoaCountAggregateOutputType = {
    id: number
    MaHangHoa: number
    LinkAnh: number
    _all: number
  }


  export type TbCacLinkAnhHangHoaMinAggregateInputType = {
    id?: true
    MaHangHoa?: true
    LinkAnh?: true
  }

  export type TbCacLinkAnhHangHoaMaxAggregateInputType = {
    id?: true
    MaHangHoa?: true
    LinkAnh?: true
  }

  export type TbCacLinkAnhHangHoaCountAggregateInputType = {
    id?: true
    MaHangHoa?: true
    LinkAnh?: true
    _all?: true
  }

  export type TbCacLinkAnhHangHoaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbCacLinkAnhHangHoa to aggregate.
     */
    where?: TbCacLinkAnhHangHoaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhHangHoas to fetch.
     */
    orderBy?: TbCacLinkAnhHangHoaOrderByWithRelationInput | TbCacLinkAnhHangHoaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbCacLinkAnhHangHoaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhHangHoas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhHangHoas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbCacLinkAnhHangHoas
    **/
    _count?: true | TbCacLinkAnhHangHoaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbCacLinkAnhHangHoaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbCacLinkAnhHangHoaMaxAggregateInputType
  }

  export type GetTbCacLinkAnhHangHoaAggregateType<T extends TbCacLinkAnhHangHoaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbCacLinkAnhHangHoa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbCacLinkAnhHangHoa[P]>
      : GetScalarType<T[P], AggregateTbCacLinkAnhHangHoa[P]>
  }




  export type TbCacLinkAnhHangHoaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbCacLinkAnhHangHoaWhereInput
    orderBy?: TbCacLinkAnhHangHoaOrderByWithAggregationInput | TbCacLinkAnhHangHoaOrderByWithAggregationInput[]
    by: TbCacLinkAnhHangHoaScalarFieldEnum[] | TbCacLinkAnhHangHoaScalarFieldEnum
    having?: TbCacLinkAnhHangHoaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbCacLinkAnhHangHoaCountAggregateInputType | true
    _min?: TbCacLinkAnhHangHoaMinAggregateInputType
    _max?: TbCacLinkAnhHangHoaMaxAggregateInputType
  }

  export type TbCacLinkAnhHangHoaGroupByOutputType = {
    id: string
    MaHangHoa: string
    LinkAnh: string
    _count: TbCacLinkAnhHangHoaCountAggregateOutputType | null
    _min: TbCacLinkAnhHangHoaMinAggregateOutputType | null
    _max: TbCacLinkAnhHangHoaMaxAggregateOutputType | null
  }

  type GetTbCacLinkAnhHangHoaGroupByPayload<T extends TbCacLinkAnhHangHoaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbCacLinkAnhHangHoaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbCacLinkAnhHangHoaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbCacLinkAnhHangHoaGroupByOutputType[P]>
            : GetScalarType<T[P], TbCacLinkAnhHangHoaGroupByOutputType[P]>
        }
      >
    >


  export type TbCacLinkAnhHangHoaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaHangHoa?: boolean
    LinkAnh?: boolean
    HangHoa?: boolean | TbHangHoaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbCacLinkAnhHangHoa"]>

  export type TbCacLinkAnhHangHoaSelectScalar = {
    id?: boolean
    MaHangHoa?: boolean
    LinkAnh?: boolean
  }

  export type TbCacLinkAnhHangHoaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    HangHoa?: boolean | TbHangHoaDefaultArgs<ExtArgs>
  }


  export type $TbCacLinkAnhHangHoaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbCacLinkAnhHangHoa"
    objects: {
      HangHoa: Prisma.$TbHangHoaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaHangHoa: string
      LinkAnh: string
    }, ExtArgs["result"]["tbCacLinkAnhHangHoa"]>
    composites: {}
  }


  type TbCacLinkAnhHangHoaGetPayload<S extends boolean | null | undefined | TbCacLinkAnhHangHoaDefaultArgs> = $Result.GetResult<Prisma.$TbCacLinkAnhHangHoaPayload, S>

  type TbCacLinkAnhHangHoaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbCacLinkAnhHangHoaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbCacLinkAnhHangHoaCountAggregateInputType | true
    }

  export interface TbCacLinkAnhHangHoaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbCacLinkAnhHangHoa'], meta: { name: 'TbCacLinkAnhHangHoa' } }
    /**
     * Find zero or one TbCacLinkAnhHangHoa that matches the filter.
     * @param {TbCacLinkAnhHangHoaFindUniqueArgs} args - Arguments to find a TbCacLinkAnhHangHoa
     * @example
     * // Get one TbCacLinkAnhHangHoa
     * const tbCacLinkAnhHangHoa = await prisma.tbCacLinkAnhHangHoa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbCacLinkAnhHangHoaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhHangHoaFindUniqueArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhHangHoaClient<$Result.GetResult<Prisma.$TbCacLinkAnhHangHoaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbCacLinkAnhHangHoa that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbCacLinkAnhHangHoaFindUniqueOrThrowArgs} args - Arguments to find a TbCacLinkAnhHangHoa
     * @example
     * // Get one TbCacLinkAnhHangHoa
     * const tbCacLinkAnhHangHoa = await prisma.tbCacLinkAnhHangHoa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbCacLinkAnhHangHoaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhHangHoaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhHangHoaClient<$Result.GetResult<Prisma.$TbCacLinkAnhHangHoaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbCacLinkAnhHangHoa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhHangHoaFindFirstArgs} args - Arguments to find a TbCacLinkAnhHangHoa
     * @example
     * // Get one TbCacLinkAnhHangHoa
     * const tbCacLinkAnhHangHoa = await prisma.tbCacLinkAnhHangHoa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbCacLinkAnhHangHoaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhHangHoaFindFirstArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhHangHoaClient<$Result.GetResult<Prisma.$TbCacLinkAnhHangHoaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbCacLinkAnhHangHoa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhHangHoaFindFirstOrThrowArgs} args - Arguments to find a TbCacLinkAnhHangHoa
     * @example
     * // Get one TbCacLinkAnhHangHoa
     * const tbCacLinkAnhHangHoa = await prisma.tbCacLinkAnhHangHoa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbCacLinkAnhHangHoaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhHangHoaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhHangHoaClient<$Result.GetResult<Prisma.$TbCacLinkAnhHangHoaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbCacLinkAnhHangHoas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhHangHoaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbCacLinkAnhHangHoas
     * const tbCacLinkAnhHangHoas = await prisma.tbCacLinkAnhHangHoa.findMany()
     * 
     * // Get first 10 TbCacLinkAnhHangHoas
     * const tbCacLinkAnhHangHoas = await prisma.tbCacLinkAnhHangHoa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbCacLinkAnhHangHoaWithIdOnly = await prisma.tbCacLinkAnhHangHoa.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbCacLinkAnhHangHoaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhHangHoaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbCacLinkAnhHangHoaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbCacLinkAnhHangHoa.
     * @param {TbCacLinkAnhHangHoaCreateArgs} args - Arguments to create a TbCacLinkAnhHangHoa.
     * @example
     * // Create one TbCacLinkAnhHangHoa
     * const TbCacLinkAnhHangHoa = await prisma.tbCacLinkAnhHangHoa.create({
     *   data: {
     *     // ... data to create a TbCacLinkAnhHangHoa
     *   }
     * })
     * 
    **/
    create<T extends TbCacLinkAnhHangHoaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhHangHoaCreateArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhHangHoaClient<$Result.GetResult<Prisma.$TbCacLinkAnhHangHoaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbCacLinkAnhHangHoas.
     *     @param {TbCacLinkAnhHangHoaCreateManyArgs} args - Arguments to create many TbCacLinkAnhHangHoas.
     *     @example
     *     // Create many TbCacLinkAnhHangHoas
     *     const tbCacLinkAnhHangHoa = await prisma.tbCacLinkAnhHangHoa.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbCacLinkAnhHangHoaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhHangHoaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbCacLinkAnhHangHoa.
     * @param {TbCacLinkAnhHangHoaDeleteArgs} args - Arguments to delete one TbCacLinkAnhHangHoa.
     * @example
     * // Delete one TbCacLinkAnhHangHoa
     * const TbCacLinkAnhHangHoa = await prisma.tbCacLinkAnhHangHoa.delete({
     *   where: {
     *     // ... filter to delete one TbCacLinkAnhHangHoa
     *   }
     * })
     * 
    **/
    delete<T extends TbCacLinkAnhHangHoaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhHangHoaDeleteArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhHangHoaClient<$Result.GetResult<Prisma.$TbCacLinkAnhHangHoaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbCacLinkAnhHangHoa.
     * @param {TbCacLinkAnhHangHoaUpdateArgs} args - Arguments to update one TbCacLinkAnhHangHoa.
     * @example
     * // Update one TbCacLinkAnhHangHoa
     * const tbCacLinkAnhHangHoa = await prisma.tbCacLinkAnhHangHoa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbCacLinkAnhHangHoaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhHangHoaUpdateArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhHangHoaClient<$Result.GetResult<Prisma.$TbCacLinkAnhHangHoaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbCacLinkAnhHangHoas.
     * @param {TbCacLinkAnhHangHoaDeleteManyArgs} args - Arguments to filter TbCacLinkAnhHangHoas to delete.
     * @example
     * // Delete a few TbCacLinkAnhHangHoas
     * const { count } = await prisma.tbCacLinkAnhHangHoa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbCacLinkAnhHangHoaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhHangHoaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbCacLinkAnhHangHoas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhHangHoaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbCacLinkAnhHangHoas
     * const tbCacLinkAnhHangHoa = await prisma.tbCacLinkAnhHangHoa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbCacLinkAnhHangHoaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhHangHoaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbCacLinkAnhHangHoa.
     * @param {TbCacLinkAnhHangHoaUpsertArgs} args - Arguments to update or create a TbCacLinkAnhHangHoa.
     * @example
     * // Update or create a TbCacLinkAnhHangHoa
     * const tbCacLinkAnhHangHoa = await prisma.tbCacLinkAnhHangHoa.upsert({
     *   create: {
     *     // ... data to create a TbCacLinkAnhHangHoa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbCacLinkAnhHangHoa we want to update
     *   }
     * })
    **/
    upsert<T extends TbCacLinkAnhHangHoaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhHangHoaUpsertArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhHangHoaClient<$Result.GetResult<Prisma.$TbCacLinkAnhHangHoaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbCacLinkAnhHangHoas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhHangHoaCountArgs} args - Arguments to filter TbCacLinkAnhHangHoas to count.
     * @example
     * // Count the number of TbCacLinkAnhHangHoas
     * const count = await prisma.tbCacLinkAnhHangHoa.count({
     *   where: {
     *     // ... the filter for the TbCacLinkAnhHangHoas we want to count
     *   }
     * })
    **/
    count<T extends TbCacLinkAnhHangHoaCountArgs>(
      args?: Subset<T, TbCacLinkAnhHangHoaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbCacLinkAnhHangHoaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbCacLinkAnhHangHoa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhHangHoaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbCacLinkAnhHangHoaAggregateArgs>(args: Subset<T, TbCacLinkAnhHangHoaAggregateArgs>): Prisma.PrismaPromise<GetTbCacLinkAnhHangHoaAggregateType<T>>

    /**
     * Group by TbCacLinkAnhHangHoa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhHangHoaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbCacLinkAnhHangHoaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbCacLinkAnhHangHoaGroupByArgs['orderBy'] }
        : { orderBy?: TbCacLinkAnhHangHoaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbCacLinkAnhHangHoaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbCacLinkAnhHangHoaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbCacLinkAnhHangHoa model
   */
  readonly fields: TbCacLinkAnhHangHoaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbCacLinkAnhHangHoa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbCacLinkAnhHangHoaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    HangHoa<T extends TbHangHoaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbHangHoaDefaultArgs<ExtArgs>>): Prisma__TbHangHoaClient<$Result.GetResult<Prisma.$TbHangHoaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbCacLinkAnhHangHoa model
   */ 
  interface TbCacLinkAnhHangHoaFieldRefs {
    readonly id: FieldRef<"TbCacLinkAnhHangHoa", 'String'>
    readonly MaHangHoa: FieldRef<"TbCacLinkAnhHangHoa", 'String'>
    readonly LinkAnh: FieldRef<"TbCacLinkAnhHangHoa", 'String'>
  }
    

  // Custom InputTypes

  /**
   * TbCacLinkAnhHangHoa findUnique
   */
  export type TbCacLinkAnhHangHoaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhHangHoa
     */
    select?: TbCacLinkAnhHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhHangHoa to fetch.
     */
    where: TbCacLinkAnhHangHoaWhereUniqueInput
  }


  /**
   * TbCacLinkAnhHangHoa findUniqueOrThrow
   */
  export type TbCacLinkAnhHangHoaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhHangHoa
     */
    select?: TbCacLinkAnhHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhHangHoa to fetch.
     */
    where: TbCacLinkAnhHangHoaWhereUniqueInput
  }


  /**
   * TbCacLinkAnhHangHoa findFirst
   */
  export type TbCacLinkAnhHangHoaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhHangHoa
     */
    select?: TbCacLinkAnhHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhHangHoa to fetch.
     */
    where?: TbCacLinkAnhHangHoaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhHangHoas to fetch.
     */
    orderBy?: TbCacLinkAnhHangHoaOrderByWithRelationInput | TbCacLinkAnhHangHoaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbCacLinkAnhHangHoas.
     */
    cursor?: TbCacLinkAnhHangHoaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhHangHoas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhHangHoas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbCacLinkAnhHangHoas.
     */
    distinct?: TbCacLinkAnhHangHoaScalarFieldEnum | TbCacLinkAnhHangHoaScalarFieldEnum[]
  }


  /**
   * TbCacLinkAnhHangHoa findFirstOrThrow
   */
  export type TbCacLinkAnhHangHoaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhHangHoa
     */
    select?: TbCacLinkAnhHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhHangHoa to fetch.
     */
    where?: TbCacLinkAnhHangHoaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhHangHoas to fetch.
     */
    orderBy?: TbCacLinkAnhHangHoaOrderByWithRelationInput | TbCacLinkAnhHangHoaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbCacLinkAnhHangHoas.
     */
    cursor?: TbCacLinkAnhHangHoaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhHangHoas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhHangHoas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbCacLinkAnhHangHoas.
     */
    distinct?: TbCacLinkAnhHangHoaScalarFieldEnum | TbCacLinkAnhHangHoaScalarFieldEnum[]
  }


  /**
   * TbCacLinkAnhHangHoa findMany
   */
  export type TbCacLinkAnhHangHoaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhHangHoa
     */
    select?: TbCacLinkAnhHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhHangHoaInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhHangHoas to fetch.
     */
    where?: TbCacLinkAnhHangHoaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhHangHoas to fetch.
     */
    orderBy?: TbCacLinkAnhHangHoaOrderByWithRelationInput | TbCacLinkAnhHangHoaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbCacLinkAnhHangHoas.
     */
    cursor?: TbCacLinkAnhHangHoaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhHangHoas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhHangHoas.
     */
    skip?: number
    distinct?: TbCacLinkAnhHangHoaScalarFieldEnum | TbCacLinkAnhHangHoaScalarFieldEnum[]
  }


  /**
   * TbCacLinkAnhHangHoa create
   */
  export type TbCacLinkAnhHangHoaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhHangHoa
     */
    select?: TbCacLinkAnhHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhHangHoaInclude<ExtArgs> | null
    /**
     * The data needed to create a TbCacLinkAnhHangHoa.
     */
    data: XOR<TbCacLinkAnhHangHoaCreateInput, TbCacLinkAnhHangHoaUncheckedCreateInput>
  }


  /**
   * TbCacLinkAnhHangHoa createMany
   */
  export type TbCacLinkAnhHangHoaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbCacLinkAnhHangHoas.
     */
    data: TbCacLinkAnhHangHoaCreateManyInput | TbCacLinkAnhHangHoaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbCacLinkAnhHangHoa update
   */
  export type TbCacLinkAnhHangHoaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhHangHoa
     */
    select?: TbCacLinkAnhHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhHangHoaInclude<ExtArgs> | null
    /**
     * The data needed to update a TbCacLinkAnhHangHoa.
     */
    data: XOR<TbCacLinkAnhHangHoaUpdateInput, TbCacLinkAnhHangHoaUncheckedUpdateInput>
    /**
     * Choose, which TbCacLinkAnhHangHoa to update.
     */
    where: TbCacLinkAnhHangHoaWhereUniqueInput
  }


  /**
   * TbCacLinkAnhHangHoa updateMany
   */
  export type TbCacLinkAnhHangHoaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbCacLinkAnhHangHoas.
     */
    data: XOR<TbCacLinkAnhHangHoaUpdateManyMutationInput, TbCacLinkAnhHangHoaUncheckedUpdateManyInput>
    /**
     * Filter which TbCacLinkAnhHangHoas to update
     */
    where?: TbCacLinkAnhHangHoaWhereInput
  }


  /**
   * TbCacLinkAnhHangHoa upsert
   */
  export type TbCacLinkAnhHangHoaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhHangHoa
     */
    select?: TbCacLinkAnhHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhHangHoaInclude<ExtArgs> | null
    /**
     * The filter to search for the TbCacLinkAnhHangHoa to update in case it exists.
     */
    where: TbCacLinkAnhHangHoaWhereUniqueInput
    /**
     * In case the TbCacLinkAnhHangHoa found by the `where` argument doesn't exist, create a new TbCacLinkAnhHangHoa with this data.
     */
    create: XOR<TbCacLinkAnhHangHoaCreateInput, TbCacLinkAnhHangHoaUncheckedCreateInput>
    /**
     * In case the TbCacLinkAnhHangHoa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbCacLinkAnhHangHoaUpdateInput, TbCacLinkAnhHangHoaUncheckedUpdateInput>
  }


  /**
   * TbCacLinkAnhHangHoa delete
   */
  export type TbCacLinkAnhHangHoaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhHangHoa
     */
    select?: TbCacLinkAnhHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhHangHoaInclude<ExtArgs> | null
    /**
     * Filter which TbCacLinkAnhHangHoa to delete.
     */
    where: TbCacLinkAnhHangHoaWhereUniqueInput
  }


  /**
   * TbCacLinkAnhHangHoa deleteMany
   */
  export type TbCacLinkAnhHangHoaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbCacLinkAnhHangHoas to delete
     */
    where?: TbCacLinkAnhHangHoaWhereInput
  }


  /**
   * TbCacLinkAnhHangHoa without action
   */
  export type TbCacLinkAnhHangHoaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhHangHoa
     */
    select?: TbCacLinkAnhHangHoaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhHangHoaInclude<ExtArgs> | null
  }



  /**
   * Model TbCacLinkAnhPhong
   */

  export type AggregateTbCacLinkAnhPhong = {
    _count: TbCacLinkAnhPhongCountAggregateOutputType | null
    _min: TbCacLinkAnhPhongMinAggregateOutputType | null
    _max: TbCacLinkAnhPhongMaxAggregateOutputType | null
  }

  export type TbCacLinkAnhPhongMinAggregateOutputType = {
    id: string | null
    MaPhong: string | null
    LinkAnh: string | null
  }

  export type TbCacLinkAnhPhongMaxAggregateOutputType = {
    id: string | null
    MaPhong: string | null
    LinkAnh: string | null
  }

  export type TbCacLinkAnhPhongCountAggregateOutputType = {
    id: number
    MaPhong: number
    LinkAnh: number
    _all: number
  }


  export type TbCacLinkAnhPhongMinAggregateInputType = {
    id?: true
    MaPhong?: true
    LinkAnh?: true
  }

  export type TbCacLinkAnhPhongMaxAggregateInputType = {
    id?: true
    MaPhong?: true
    LinkAnh?: true
  }

  export type TbCacLinkAnhPhongCountAggregateInputType = {
    id?: true
    MaPhong?: true
    LinkAnh?: true
    _all?: true
  }

  export type TbCacLinkAnhPhongAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbCacLinkAnhPhong to aggregate.
     */
    where?: TbCacLinkAnhPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhPhongs to fetch.
     */
    orderBy?: TbCacLinkAnhPhongOrderByWithRelationInput | TbCacLinkAnhPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbCacLinkAnhPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbCacLinkAnhPhongs
    **/
    _count?: true | TbCacLinkAnhPhongCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbCacLinkAnhPhongMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbCacLinkAnhPhongMaxAggregateInputType
  }

  export type GetTbCacLinkAnhPhongAggregateType<T extends TbCacLinkAnhPhongAggregateArgs> = {
        [P in keyof T & keyof AggregateTbCacLinkAnhPhong]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbCacLinkAnhPhong[P]>
      : GetScalarType<T[P], AggregateTbCacLinkAnhPhong[P]>
  }




  export type TbCacLinkAnhPhongGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbCacLinkAnhPhongWhereInput
    orderBy?: TbCacLinkAnhPhongOrderByWithAggregationInput | TbCacLinkAnhPhongOrderByWithAggregationInput[]
    by: TbCacLinkAnhPhongScalarFieldEnum[] | TbCacLinkAnhPhongScalarFieldEnum
    having?: TbCacLinkAnhPhongScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbCacLinkAnhPhongCountAggregateInputType | true
    _min?: TbCacLinkAnhPhongMinAggregateInputType
    _max?: TbCacLinkAnhPhongMaxAggregateInputType
  }

  export type TbCacLinkAnhPhongGroupByOutputType = {
    id: string
    MaPhong: string
    LinkAnh: string
    _count: TbCacLinkAnhPhongCountAggregateOutputType | null
    _min: TbCacLinkAnhPhongMinAggregateOutputType | null
    _max: TbCacLinkAnhPhongMaxAggregateOutputType | null
  }

  type GetTbCacLinkAnhPhongGroupByPayload<T extends TbCacLinkAnhPhongGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbCacLinkAnhPhongGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbCacLinkAnhPhongGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbCacLinkAnhPhongGroupByOutputType[P]>
            : GetScalarType<T[P], TbCacLinkAnhPhongGroupByOutputType[P]>
        }
      >
    >


  export type TbCacLinkAnhPhongSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaPhong?: boolean
    LinkAnh?: boolean
    Phong?: boolean | TbPhongDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbCacLinkAnhPhong"]>

  export type TbCacLinkAnhPhongSelectScalar = {
    id?: boolean
    MaPhong?: boolean
    LinkAnh?: boolean
  }

  export type TbCacLinkAnhPhongInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Phong?: boolean | TbPhongDefaultArgs<ExtArgs>
  }


  export type $TbCacLinkAnhPhongPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbCacLinkAnhPhong"
    objects: {
      Phong: Prisma.$TbPhongPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaPhong: string
      LinkAnh: string
    }, ExtArgs["result"]["tbCacLinkAnhPhong"]>
    composites: {}
  }


  type TbCacLinkAnhPhongGetPayload<S extends boolean | null | undefined | TbCacLinkAnhPhongDefaultArgs> = $Result.GetResult<Prisma.$TbCacLinkAnhPhongPayload, S>

  type TbCacLinkAnhPhongCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbCacLinkAnhPhongFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbCacLinkAnhPhongCountAggregateInputType | true
    }

  export interface TbCacLinkAnhPhongDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbCacLinkAnhPhong'], meta: { name: 'TbCacLinkAnhPhong' } }
    /**
     * Find zero or one TbCacLinkAnhPhong that matches the filter.
     * @param {TbCacLinkAnhPhongFindUniqueArgs} args - Arguments to find a TbCacLinkAnhPhong
     * @example
     * // Get one TbCacLinkAnhPhong
     * const tbCacLinkAnhPhong = await prisma.tbCacLinkAnhPhong.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbCacLinkAnhPhongFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhPhongFindUniqueArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhPhongPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbCacLinkAnhPhong that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbCacLinkAnhPhongFindUniqueOrThrowArgs} args - Arguments to find a TbCacLinkAnhPhong
     * @example
     * // Get one TbCacLinkAnhPhong
     * const tbCacLinkAnhPhong = await prisma.tbCacLinkAnhPhong.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbCacLinkAnhPhongFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhPhongFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhPhongPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbCacLinkAnhPhong that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhPhongFindFirstArgs} args - Arguments to find a TbCacLinkAnhPhong
     * @example
     * // Get one TbCacLinkAnhPhong
     * const tbCacLinkAnhPhong = await prisma.tbCacLinkAnhPhong.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbCacLinkAnhPhongFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhPhongFindFirstArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhPhongPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbCacLinkAnhPhong that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhPhongFindFirstOrThrowArgs} args - Arguments to find a TbCacLinkAnhPhong
     * @example
     * // Get one TbCacLinkAnhPhong
     * const tbCacLinkAnhPhong = await prisma.tbCacLinkAnhPhong.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbCacLinkAnhPhongFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhPhongFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhPhongPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbCacLinkAnhPhongs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhPhongFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbCacLinkAnhPhongs
     * const tbCacLinkAnhPhongs = await prisma.tbCacLinkAnhPhong.findMany()
     * 
     * // Get first 10 TbCacLinkAnhPhongs
     * const tbCacLinkAnhPhongs = await prisma.tbCacLinkAnhPhong.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbCacLinkAnhPhongWithIdOnly = await prisma.tbCacLinkAnhPhong.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbCacLinkAnhPhongFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhPhongFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbCacLinkAnhPhongPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbCacLinkAnhPhong.
     * @param {TbCacLinkAnhPhongCreateArgs} args - Arguments to create a TbCacLinkAnhPhong.
     * @example
     * // Create one TbCacLinkAnhPhong
     * const TbCacLinkAnhPhong = await prisma.tbCacLinkAnhPhong.create({
     *   data: {
     *     // ... data to create a TbCacLinkAnhPhong
     *   }
     * })
     * 
    **/
    create<T extends TbCacLinkAnhPhongCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhPhongCreateArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhPhongPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbCacLinkAnhPhongs.
     *     @param {TbCacLinkAnhPhongCreateManyArgs} args - Arguments to create many TbCacLinkAnhPhongs.
     *     @example
     *     // Create many TbCacLinkAnhPhongs
     *     const tbCacLinkAnhPhong = await prisma.tbCacLinkAnhPhong.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbCacLinkAnhPhongCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhPhongCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbCacLinkAnhPhong.
     * @param {TbCacLinkAnhPhongDeleteArgs} args - Arguments to delete one TbCacLinkAnhPhong.
     * @example
     * // Delete one TbCacLinkAnhPhong
     * const TbCacLinkAnhPhong = await prisma.tbCacLinkAnhPhong.delete({
     *   where: {
     *     // ... filter to delete one TbCacLinkAnhPhong
     *   }
     * })
     * 
    **/
    delete<T extends TbCacLinkAnhPhongDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhPhongDeleteArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhPhongPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbCacLinkAnhPhong.
     * @param {TbCacLinkAnhPhongUpdateArgs} args - Arguments to update one TbCacLinkAnhPhong.
     * @example
     * // Update one TbCacLinkAnhPhong
     * const tbCacLinkAnhPhong = await prisma.tbCacLinkAnhPhong.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbCacLinkAnhPhongUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhPhongUpdateArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhPhongPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbCacLinkAnhPhongs.
     * @param {TbCacLinkAnhPhongDeleteManyArgs} args - Arguments to filter TbCacLinkAnhPhongs to delete.
     * @example
     * // Delete a few TbCacLinkAnhPhongs
     * const { count } = await prisma.tbCacLinkAnhPhong.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbCacLinkAnhPhongDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbCacLinkAnhPhongDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbCacLinkAnhPhongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhPhongUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbCacLinkAnhPhongs
     * const tbCacLinkAnhPhong = await prisma.tbCacLinkAnhPhong.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbCacLinkAnhPhongUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhPhongUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbCacLinkAnhPhong.
     * @param {TbCacLinkAnhPhongUpsertArgs} args - Arguments to update or create a TbCacLinkAnhPhong.
     * @example
     * // Update or create a TbCacLinkAnhPhong
     * const tbCacLinkAnhPhong = await prisma.tbCacLinkAnhPhong.upsert({
     *   create: {
     *     // ... data to create a TbCacLinkAnhPhong
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbCacLinkAnhPhong we want to update
     *   }
     * })
    **/
    upsert<T extends TbCacLinkAnhPhongUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbCacLinkAnhPhongUpsertArgs<ExtArgs>>
    ): Prisma__TbCacLinkAnhPhongClient<$Result.GetResult<Prisma.$TbCacLinkAnhPhongPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbCacLinkAnhPhongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhPhongCountArgs} args - Arguments to filter TbCacLinkAnhPhongs to count.
     * @example
     * // Count the number of TbCacLinkAnhPhongs
     * const count = await prisma.tbCacLinkAnhPhong.count({
     *   where: {
     *     // ... the filter for the TbCacLinkAnhPhongs we want to count
     *   }
     * })
    **/
    count<T extends TbCacLinkAnhPhongCountArgs>(
      args?: Subset<T, TbCacLinkAnhPhongCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbCacLinkAnhPhongCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbCacLinkAnhPhong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhPhongAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbCacLinkAnhPhongAggregateArgs>(args: Subset<T, TbCacLinkAnhPhongAggregateArgs>): Prisma.PrismaPromise<GetTbCacLinkAnhPhongAggregateType<T>>

    /**
     * Group by TbCacLinkAnhPhong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbCacLinkAnhPhongGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbCacLinkAnhPhongGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbCacLinkAnhPhongGroupByArgs['orderBy'] }
        : { orderBy?: TbCacLinkAnhPhongGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbCacLinkAnhPhongGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbCacLinkAnhPhongGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbCacLinkAnhPhong model
   */
  readonly fields: TbCacLinkAnhPhongFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbCacLinkAnhPhong.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbCacLinkAnhPhongClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Phong<T extends TbPhongDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbPhongDefaultArgs<ExtArgs>>): Prisma__TbPhongClient<$Result.GetResult<Prisma.$TbPhongPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbCacLinkAnhPhong model
   */ 
  interface TbCacLinkAnhPhongFieldRefs {
    readonly id: FieldRef<"TbCacLinkAnhPhong", 'String'>
    readonly MaPhong: FieldRef<"TbCacLinkAnhPhong", 'String'>
    readonly LinkAnh: FieldRef<"TbCacLinkAnhPhong", 'String'>
  }
    

  // Custom InputTypes

  /**
   * TbCacLinkAnhPhong findUnique
   */
  export type TbCacLinkAnhPhongFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhPhong
     */
    select?: TbCacLinkAnhPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhPhong to fetch.
     */
    where: TbCacLinkAnhPhongWhereUniqueInput
  }


  /**
   * TbCacLinkAnhPhong findUniqueOrThrow
   */
  export type TbCacLinkAnhPhongFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhPhong
     */
    select?: TbCacLinkAnhPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhPhong to fetch.
     */
    where: TbCacLinkAnhPhongWhereUniqueInput
  }


  /**
   * TbCacLinkAnhPhong findFirst
   */
  export type TbCacLinkAnhPhongFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhPhong
     */
    select?: TbCacLinkAnhPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhPhong to fetch.
     */
    where?: TbCacLinkAnhPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhPhongs to fetch.
     */
    orderBy?: TbCacLinkAnhPhongOrderByWithRelationInput | TbCacLinkAnhPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbCacLinkAnhPhongs.
     */
    cursor?: TbCacLinkAnhPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbCacLinkAnhPhongs.
     */
    distinct?: TbCacLinkAnhPhongScalarFieldEnum | TbCacLinkAnhPhongScalarFieldEnum[]
  }


  /**
   * TbCacLinkAnhPhong findFirstOrThrow
   */
  export type TbCacLinkAnhPhongFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhPhong
     */
    select?: TbCacLinkAnhPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhPhong to fetch.
     */
    where?: TbCacLinkAnhPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhPhongs to fetch.
     */
    orderBy?: TbCacLinkAnhPhongOrderByWithRelationInput | TbCacLinkAnhPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbCacLinkAnhPhongs.
     */
    cursor?: TbCacLinkAnhPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbCacLinkAnhPhongs.
     */
    distinct?: TbCacLinkAnhPhongScalarFieldEnum | TbCacLinkAnhPhongScalarFieldEnum[]
  }


  /**
   * TbCacLinkAnhPhong findMany
   */
  export type TbCacLinkAnhPhongFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhPhong
     */
    select?: TbCacLinkAnhPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbCacLinkAnhPhongs to fetch.
     */
    where?: TbCacLinkAnhPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbCacLinkAnhPhongs to fetch.
     */
    orderBy?: TbCacLinkAnhPhongOrderByWithRelationInput | TbCacLinkAnhPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbCacLinkAnhPhongs.
     */
    cursor?: TbCacLinkAnhPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbCacLinkAnhPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbCacLinkAnhPhongs.
     */
    skip?: number
    distinct?: TbCacLinkAnhPhongScalarFieldEnum | TbCacLinkAnhPhongScalarFieldEnum[]
  }


  /**
   * TbCacLinkAnhPhong create
   */
  export type TbCacLinkAnhPhongCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhPhong
     */
    select?: TbCacLinkAnhPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhPhongInclude<ExtArgs> | null
    /**
     * The data needed to create a TbCacLinkAnhPhong.
     */
    data: XOR<TbCacLinkAnhPhongCreateInput, TbCacLinkAnhPhongUncheckedCreateInput>
  }


  /**
   * TbCacLinkAnhPhong createMany
   */
  export type TbCacLinkAnhPhongCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbCacLinkAnhPhongs.
     */
    data: TbCacLinkAnhPhongCreateManyInput | TbCacLinkAnhPhongCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbCacLinkAnhPhong update
   */
  export type TbCacLinkAnhPhongUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhPhong
     */
    select?: TbCacLinkAnhPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhPhongInclude<ExtArgs> | null
    /**
     * The data needed to update a TbCacLinkAnhPhong.
     */
    data: XOR<TbCacLinkAnhPhongUpdateInput, TbCacLinkAnhPhongUncheckedUpdateInput>
    /**
     * Choose, which TbCacLinkAnhPhong to update.
     */
    where: TbCacLinkAnhPhongWhereUniqueInput
  }


  /**
   * TbCacLinkAnhPhong updateMany
   */
  export type TbCacLinkAnhPhongUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbCacLinkAnhPhongs.
     */
    data: XOR<TbCacLinkAnhPhongUpdateManyMutationInput, TbCacLinkAnhPhongUncheckedUpdateManyInput>
    /**
     * Filter which TbCacLinkAnhPhongs to update
     */
    where?: TbCacLinkAnhPhongWhereInput
  }


  /**
   * TbCacLinkAnhPhong upsert
   */
  export type TbCacLinkAnhPhongUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhPhong
     */
    select?: TbCacLinkAnhPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhPhongInclude<ExtArgs> | null
    /**
     * The filter to search for the TbCacLinkAnhPhong to update in case it exists.
     */
    where: TbCacLinkAnhPhongWhereUniqueInput
    /**
     * In case the TbCacLinkAnhPhong found by the `where` argument doesn't exist, create a new TbCacLinkAnhPhong with this data.
     */
    create: XOR<TbCacLinkAnhPhongCreateInput, TbCacLinkAnhPhongUncheckedCreateInput>
    /**
     * In case the TbCacLinkAnhPhong was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbCacLinkAnhPhongUpdateInput, TbCacLinkAnhPhongUncheckedUpdateInput>
  }


  /**
   * TbCacLinkAnhPhong delete
   */
  export type TbCacLinkAnhPhongDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhPhong
     */
    select?: TbCacLinkAnhPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhPhongInclude<ExtArgs> | null
    /**
     * Filter which TbCacLinkAnhPhong to delete.
     */
    where: TbCacLinkAnhPhongWhereUniqueInput
  }


  /**
   * TbCacLinkAnhPhong deleteMany
   */
  export type TbCacLinkAnhPhongDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbCacLinkAnhPhongs to delete
     */
    where?: TbCacLinkAnhPhongWhereInput
  }


  /**
   * TbCacLinkAnhPhong without action
   */
  export type TbCacLinkAnhPhongDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhPhong
     */
    select?: TbCacLinkAnhPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhPhongInclude<ExtArgs> | null
  }



  /**
   * Model TbNhaCungCap
   */

  export type AggregateTbNhaCungCap = {
    _count: TbNhaCungCapCountAggregateOutputType | null
    _min: TbNhaCungCapMinAggregateOutputType | null
    _max: TbNhaCungCapMaxAggregateOutputType | null
  }

  export type TbNhaCungCapMinAggregateOutputType = {
    id: string | null
    TenNhaCungCap: string | null
    SDTNhaCungCap: string | null
    EmailNhaCungCap: string | null
  }

  export type TbNhaCungCapMaxAggregateOutputType = {
    id: string | null
    TenNhaCungCap: string | null
    SDTNhaCungCap: string | null
    EmailNhaCungCap: string | null
  }

  export type TbNhaCungCapCountAggregateOutputType = {
    id: number
    TenNhaCungCap: number
    SDTNhaCungCap: number
    EmailNhaCungCap: number
    _all: number
  }


  export type TbNhaCungCapMinAggregateInputType = {
    id?: true
    TenNhaCungCap?: true
    SDTNhaCungCap?: true
    EmailNhaCungCap?: true
  }

  export type TbNhaCungCapMaxAggregateInputType = {
    id?: true
    TenNhaCungCap?: true
    SDTNhaCungCap?: true
    EmailNhaCungCap?: true
  }

  export type TbNhaCungCapCountAggregateInputType = {
    id?: true
    TenNhaCungCap?: true
    SDTNhaCungCap?: true
    EmailNhaCungCap?: true
    _all?: true
  }

  export type TbNhaCungCapAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbNhaCungCap to aggregate.
     */
    where?: TbNhaCungCapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhaCungCaps to fetch.
     */
    orderBy?: TbNhaCungCapOrderByWithRelationInput | TbNhaCungCapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbNhaCungCapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhaCungCaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhaCungCaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbNhaCungCaps
    **/
    _count?: true | TbNhaCungCapCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbNhaCungCapMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbNhaCungCapMaxAggregateInputType
  }

  export type GetTbNhaCungCapAggregateType<T extends TbNhaCungCapAggregateArgs> = {
        [P in keyof T & keyof AggregateTbNhaCungCap]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbNhaCungCap[P]>
      : GetScalarType<T[P], AggregateTbNhaCungCap[P]>
  }




  export type TbNhaCungCapGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbNhaCungCapWhereInput
    orderBy?: TbNhaCungCapOrderByWithAggregationInput | TbNhaCungCapOrderByWithAggregationInput[]
    by: TbNhaCungCapScalarFieldEnum[] | TbNhaCungCapScalarFieldEnum
    having?: TbNhaCungCapScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbNhaCungCapCountAggregateInputType | true
    _min?: TbNhaCungCapMinAggregateInputType
    _max?: TbNhaCungCapMaxAggregateInputType
  }

  export type TbNhaCungCapGroupByOutputType = {
    id: string
    TenNhaCungCap: string
    SDTNhaCungCap: string
    EmailNhaCungCap: string
    _count: TbNhaCungCapCountAggregateOutputType | null
    _min: TbNhaCungCapMinAggregateOutputType | null
    _max: TbNhaCungCapMaxAggregateOutputType | null
  }

  type GetTbNhaCungCapGroupByPayload<T extends TbNhaCungCapGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbNhaCungCapGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbNhaCungCapGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbNhaCungCapGroupByOutputType[P]>
            : GetScalarType<T[P], TbNhaCungCapGroupByOutputType[P]>
        }
      >
    >


  export type TbNhaCungCapSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    TenNhaCungCap?: boolean
    SDTNhaCungCap?: boolean
    EmailNhaCungCap?: boolean
    PhieuNhap?: boolean | TbNhaCungCap$PhieuNhapArgs<ExtArgs>
    _count?: boolean | TbNhaCungCapCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbNhaCungCap"]>

  export type TbNhaCungCapSelectScalar = {
    id?: boolean
    TenNhaCungCap?: boolean
    SDTNhaCungCap?: boolean
    EmailNhaCungCap?: boolean
  }

  export type TbNhaCungCapInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    PhieuNhap?: boolean | TbNhaCungCap$PhieuNhapArgs<ExtArgs>
    _count?: boolean | TbNhaCungCapCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbNhaCungCapPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbNhaCungCap"
    objects: {
      PhieuNhap: Prisma.$TbPhieuNhapPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      TenNhaCungCap: string
      SDTNhaCungCap: string
      EmailNhaCungCap: string
    }, ExtArgs["result"]["tbNhaCungCap"]>
    composites: {}
  }


  type TbNhaCungCapGetPayload<S extends boolean | null | undefined | TbNhaCungCapDefaultArgs> = $Result.GetResult<Prisma.$TbNhaCungCapPayload, S>

  type TbNhaCungCapCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbNhaCungCapFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbNhaCungCapCountAggregateInputType | true
    }

  export interface TbNhaCungCapDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbNhaCungCap'], meta: { name: 'TbNhaCungCap' } }
    /**
     * Find zero or one TbNhaCungCap that matches the filter.
     * @param {TbNhaCungCapFindUniqueArgs} args - Arguments to find a TbNhaCungCap
     * @example
     * // Get one TbNhaCungCap
     * const tbNhaCungCap = await prisma.tbNhaCungCap.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbNhaCungCapFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhaCungCapFindUniqueArgs<ExtArgs>>
    ): Prisma__TbNhaCungCapClient<$Result.GetResult<Prisma.$TbNhaCungCapPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbNhaCungCap that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbNhaCungCapFindUniqueOrThrowArgs} args - Arguments to find a TbNhaCungCap
     * @example
     * // Get one TbNhaCungCap
     * const tbNhaCungCap = await prisma.tbNhaCungCap.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbNhaCungCapFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhaCungCapFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbNhaCungCapClient<$Result.GetResult<Prisma.$TbNhaCungCapPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbNhaCungCap that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhaCungCapFindFirstArgs} args - Arguments to find a TbNhaCungCap
     * @example
     * // Get one TbNhaCungCap
     * const tbNhaCungCap = await prisma.tbNhaCungCap.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbNhaCungCapFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhaCungCapFindFirstArgs<ExtArgs>>
    ): Prisma__TbNhaCungCapClient<$Result.GetResult<Prisma.$TbNhaCungCapPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbNhaCungCap that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhaCungCapFindFirstOrThrowArgs} args - Arguments to find a TbNhaCungCap
     * @example
     * // Get one TbNhaCungCap
     * const tbNhaCungCap = await prisma.tbNhaCungCap.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbNhaCungCapFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhaCungCapFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbNhaCungCapClient<$Result.GetResult<Prisma.$TbNhaCungCapPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbNhaCungCaps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhaCungCapFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbNhaCungCaps
     * const tbNhaCungCaps = await prisma.tbNhaCungCap.findMany()
     * 
     * // Get first 10 TbNhaCungCaps
     * const tbNhaCungCaps = await prisma.tbNhaCungCap.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbNhaCungCapWithIdOnly = await prisma.tbNhaCungCap.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbNhaCungCapFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhaCungCapFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbNhaCungCapPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbNhaCungCap.
     * @param {TbNhaCungCapCreateArgs} args - Arguments to create a TbNhaCungCap.
     * @example
     * // Create one TbNhaCungCap
     * const TbNhaCungCap = await prisma.tbNhaCungCap.create({
     *   data: {
     *     // ... data to create a TbNhaCungCap
     *   }
     * })
     * 
    **/
    create<T extends TbNhaCungCapCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhaCungCapCreateArgs<ExtArgs>>
    ): Prisma__TbNhaCungCapClient<$Result.GetResult<Prisma.$TbNhaCungCapPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbNhaCungCaps.
     *     @param {TbNhaCungCapCreateManyArgs} args - Arguments to create many TbNhaCungCaps.
     *     @example
     *     // Create many TbNhaCungCaps
     *     const tbNhaCungCap = await prisma.tbNhaCungCap.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbNhaCungCapCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhaCungCapCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbNhaCungCap.
     * @param {TbNhaCungCapDeleteArgs} args - Arguments to delete one TbNhaCungCap.
     * @example
     * // Delete one TbNhaCungCap
     * const TbNhaCungCap = await prisma.tbNhaCungCap.delete({
     *   where: {
     *     // ... filter to delete one TbNhaCungCap
     *   }
     * })
     * 
    **/
    delete<T extends TbNhaCungCapDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhaCungCapDeleteArgs<ExtArgs>>
    ): Prisma__TbNhaCungCapClient<$Result.GetResult<Prisma.$TbNhaCungCapPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbNhaCungCap.
     * @param {TbNhaCungCapUpdateArgs} args - Arguments to update one TbNhaCungCap.
     * @example
     * // Update one TbNhaCungCap
     * const tbNhaCungCap = await prisma.tbNhaCungCap.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbNhaCungCapUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhaCungCapUpdateArgs<ExtArgs>>
    ): Prisma__TbNhaCungCapClient<$Result.GetResult<Prisma.$TbNhaCungCapPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbNhaCungCaps.
     * @param {TbNhaCungCapDeleteManyArgs} args - Arguments to filter TbNhaCungCaps to delete.
     * @example
     * // Delete a few TbNhaCungCaps
     * const { count } = await prisma.tbNhaCungCap.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbNhaCungCapDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhaCungCapDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbNhaCungCaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhaCungCapUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbNhaCungCaps
     * const tbNhaCungCap = await prisma.tbNhaCungCap.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbNhaCungCapUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhaCungCapUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbNhaCungCap.
     * @param {TbNhaCungCapUpsertArgs} args - Arguments to update or create a TbNhaCungCap.
     * @example
     * // Update or create a TbNhaCungCap
     * const tbNhaCungCap = await prisma.tbNhaCungCap.upsert({
     *   create: {
     *     // ... data to create a TbNhaCungCap
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbNhaCungCap we want to update
     *   }
     * })
    **/
    upsert<T extends TbNhaCungCapUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhaCungCapUpsertArgs<ExtArgs>>
    ): Prisma__TbNhaCungCapClient<$Result.GetResult<Prisma.$TbNhaCungCapPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbNhaCungCaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhaCungCapCountArgs} args - Arguments to filter TbNhaCungCaps to count.
     * @example
     * // Count the number of TbNhaCungCaps
     * const count = await prisma.tbNhaCungCap.count({
     *   where: {
     *     // ... the filter for the TbNhaCungCaps we want to count
     *   }
     * })
    **/
    count<T extends TbNhaCungCapCountArgs>(
      args?: Subset<T, TbNhaCungCapCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbNhaCungCapCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbNhaCungCap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhaCungCapAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbNhaCungCapAggregateArgs>(args: Subset<T, TbNhaCungCapAggregateArgs>): Prisma.PrismaPromise<GetTbNhaCungCapAggregateType<T>>

    /**
     * Group by TbNhaCungCap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhaCungCapGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbNhaCungCapGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbNhaCungCapGroupByArgs['orderBy'] }
        : { orderBy?: TbNhaCungCapGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbNhaCungCapGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbNhaCungCapGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbNhaCungCap model
   */
  readonly fields: TbNhaCungCapFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbNhaCungCap.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbNhaCungCapClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    PhieuNhap<T extends TbNhaCungCap$PhieuNhapArgs<ExtArgs> = {}>(args?: Subset<T, TbNhaCungCap$PhieuNhapArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbPhieuNhapPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbNhaCungCap model
   */ 
  interface TbNhaCungCapFieldRefs {
    readonly id: FieldRef<"TbNhaCungCap", 'String'>
    readonly TenNhaCungCap: FieldRef<"TbNhaCungCap", 'String'>
    readonly SDTNhaCungCap: FieldRef<"TbNhaCungCap", 'String'>
    readonly EmailNhaCungCap: FieldRef<"TbNhaCungCap", 'String'>
  }
    

  // Custom InputTypes

  /**
   * TbNhaCungCap findUnique
   */
  export type TbNhaCungCapFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhaCungCap
     */
    select?: TbNhaCungCapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhaCungCapInclude<ExtArgs> | null
    /**
     * Filter, which TbNhaCungCap to fetch.
     */
    where: TbNhaCungCapWhereUniqueInput
  }


  /**
   * TbNhaCungCap findUniqueOrThrow
   */
  export type TbNhaCungCapFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhaCungCap
     */
    select?: TbNhaCungCapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhaCungCapInclude<ExtArgs> | null
    /**
     * Filter, which TbNhaCungCap to fetch.
     */
    where: TbNhaCungCapWhereUniqueInput
  }


  /**
   * TbNhaCungCap findFirst
   */
  export type TbNhaCungCapFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhaCungCap
     */
    select?: TbNhaCungCapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhaCungCapInclude<ExtArgs> | null
    /**
     * Filter, which TbNhaCungCap to fetch.
     */
    where?: TbNhaCungCapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhaCungCaps to fetch.
     */
    orderBy?: TbNhaCungCapOrderByWithRelationInput | TbNhaCungCapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbNhaCungCaps.
     */
    cursor?: TbNhaCungCapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhaCungCaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhaCungCaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbNhaCungCaps.
     */
    distinct?: TbNhaCungCapScalarFieldEnum | TbNhaCungCapScalarFieldEnum[]
  }


  /**
   * TbNhaCungCap findFirstOrThrow
   */
  export type TbNhaCungCapFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhaCungCap
     */
    select?: TbNhaCungCapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhaCungCapInclude<ExtArgs> | null
    /**
     * Filter, which TbNhaCungCap to fetch.
     */
    where?: TbNhaCungCapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhaCungCaps to fetch.
     */
    orderBy?: TbNhaCungCapOrderByWithRelationInput | TbNhaCungCapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbNhaCungCaps.
     */
    cursor?: TbNhaCungCapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhaCungCaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhaCungCaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbNhaCungCaps.
     */
    distinct?: TbNhaCungCapScalarFieldEnum | TbNhaCungCapScalarFieldEnum[]
  }


  /**
   * TbNhaCungCap findMany
   */
  export type TbNhaCungCapFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhaCungCap
     */
    select?: TbNhaCungCapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhaCungCapInclude<ExtArgs> | null
    /**
     * Filter, which TbNhaCungCaps to fetch.
     */
    where?: TbNhaCungCapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhaCungCaps to fetch.
     */
    orderBy?: TbNhaCungCapOrderByWithRelationInput | TbNhaCungCapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbNhaCungCaps.
     */
    cursor?: TbNhaCungCapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhaCungCaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhaCungCaps.
     */
    skip?: number
    distinct?: TbNhaCungCapScalarFieldEnum | TbNhaCungCapScalarFieldEnum[]
  }


  /**
   * TbNhaCungCap create
   */
  export type TbNhaCungCapCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhaCungCap
     */
    select?: TbNhaCungCapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhaCungCapInclude<ExtArgs> | null
    /**
     * The data needed to create a TbNhaCungCap.
     */
    data: XOR<TbNhaCungCapCreateInput, TbNhaCungCapUncheckedCreateInput>
  }


  /**
   * TbNhaCungCap createMany
   */
  export type TbNhaCungCapCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbNhaCungCaps.
     */
    data: TbNhaCungCapCreateManyInput | TbNhaCungCapCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbNhaCungCap update
   */
  export type TbNhaCungCapUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhaCungCap
     */
    select?: TbNhaCungCapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhaCungCapInclude<ExtArgs> | null
    /**
     * The data needed to update a TbNhaCungCap.
     */
    data: XOR<TbNhaCungCapUpdateInput, TbNhaCungCapUncheckedUpdateInput>
    /**
     * Choose, which TbNhaCungCap to update.
     */
    where: TbNhaCungCapWhereUniqueInput
  }


  /**
   * TbNhaCungCap updateMany
   */
  export type TbNhaCungCapUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbNhaCungCaps.
     */
    data: XOR<TbNhaCungCapUpdateManyMutationInput, TbNhaCungCapUncheckedUpdateManyInput>
    /**
     * Filter which TbNhaCungCaps to update
     */
    where?: TbNhaCungCapWhereInput
  }


  /**
   * TbNhaCungCap upsert
   */
  export type TbNhaCungCapUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhaCungCap
     */
    select?: TbNhaCungCapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhaCungCapInclude<ExtArgs> | null
    /**
     * The filter to search for the TbNhaCungCap to update in case it exists.
     */
    where: TbNhaCungCapWhereUniqueInput
    /**
     * In case the TbNhaCungCap found by the `where` argument doesn't exist, create a new TbNhaCungCap with this data.
     */
    create: XOR<TbNhaCungCapCreateInput, TbNhaCungCapUncheckedCreateInput>
    /**
     * In case the TbNhaCungCap was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbNhaCungCapUpdateInput, TbNhaCungCapUncheckedUpdateInput>
  }


  /**
   * TbNhaCungCap delete
   */
  export type TbNhaCungCapDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhaCungCap
     */
    select?: TbNhaCungCapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhaCungCapInclude<ExtArgs> | null
    /**
     * Filter which TbNhaCungCap to delete.
     */
    where: TbNhaCungCapWhereUniqueInput
  }


  /**
   * TbNhaCungCap deleteMany
   */
  export type TbNhaCungCapDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbNhaCungCaps to delete
     */
    where?: TbNhaCungCapWhereInput
  }


  /**
   * TbNhaCungCap.PhieuNhap
   */
  export type TbNhaCungCap$PhieuNhapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhieuNhap
     */
    select?: TbPhieuNhapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhieuNhapInclude<ExtArgs> | null
    where?: TbPhieuNhapWhereInput
    orderBy?: TbPhieuNhapOrderByWithRelationInput | TbPhieuNhapOrderByWithRelationInput[]
    cursor?: TbPhieuNhapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbPhieuNhapScalarFieldEnum | TbPhieuNhapScalarFieldEnum[]
  }


  /**
   * TbNhaCungCap without action
   */
  export type TbNhaCungCapDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhaCungCap
     */
    select?: TbNhaCungCapSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhaCungCapInclude<ExtArgs> | null
  }



  /**
   * Model TbPhong
   */

  export type AggregateTbPhong = {
    _count: TbPhongCountAggregateOutputType | null
    _min: TbPhongMinAggregateOutputType | null
    _max: TbPhongMaxAggregateOutputType | null
  }

  export type TbPhongMinAggregateOutputType = {
    id: string | null
    MaLoaiPhong: string | null
    MaNhomKhuVucPhong: string | null
    TenPhong: string | null
    GhiChu: string | null
    Status: $Enums.tbphong_Status | null
    StatusDatCho: $Enums.tbdatcho_Status | null
    StatusThongBao: $Enums.thongbao_Status | null
    createAt: Date | null
    updateAt: Date | null
  }

  export type TbPhongMaxAggregateOutputType = {
    id: string | null
    MaLoaiPhong: string | null
    MaNhomKhuVucPhong: string | null
    TenPhong: string | null
    GhiChu: string | null
    Status: $Enums.tbphong_Status | null
    StatusDatCho: $Enums.tbdatcho_Status | null
    StatusThongBao: $Enums.thongbao_Status | null
    createAt: Date | null
    updateAt: Date | null
  }

  export type TbPhongCountAggregateOutputType = {
    id: number
    MaLoaiPhong: number
    MaNhomKhuVucPhong: number
    TenPhong: number
    GhiChu: number
    Status: number
    StatusDatCho: number
    StatusThongBao: number
    createAt: number
    updateAt: number
    _all: number
  }


  export type TbPhongMinAggregateInputType = {
    id?: true
    MaLoaiPhong?: true
    MaNhomKhuVucPhong?: true
    TenPhong?: true
    GhiChu?: true
    Status?: true
    StatusDatCho?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
  }

  export type TbPhongMaxAggregateInputType = {
    id?: true
    MaLoaiPhong?: true
    MaNhomKhuVucPhong?: true
    TenPhong?: true
    GhiChu?: true
    Status?: true
    StatusDatCho?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
  }

  export type TbPhongCountAggregateInputType = {
    id?: true
    MaLoaiPhong?: true
    MaNhomKhuVucPhong?: true
    TenPhong?: true
    GhiChu?: true
    Status?: true
    StatusDatCho?: true
    StatusThongBao?: true
    createAt?: true
    updateAt?: true
    _all?: true
  }

  export type TbPhongAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbPhong to aggregate.
     */
    where?: TbPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbPhongs to fetch.
     */
    orderBy?: TbPhongOrderByWithRelationInput | TbPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbPhongs
    **/
    _count?: true | TbPhongCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbPhongMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbPhongMaxAggregateInputType
  }

  export type GetTbPhongAggregateType<T extends TbPhongAggregateArgs> = {
        [P in keyof T & keyof AggregateTbPhong]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbPhong[P]>
      : GetScalarType<T[P], AggregateTbPhong[P]>
  }




  export type TbPhongGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbPhongWhereInput
    orderBy?: TbPhongOrderByWithAggregationInput | TbPhongOrderByWithAggregationInput[]
    by: TbPhongScalarFieldEnum[] | TbPhongScalarFieldEnum
    having?: TbPhongScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbPhongCountAggregateInputType | true
    _min?: TbPhongMinAggregateInputType
    _max?: TbPhongMaxAggregateInputType
  }

  export type TbPhongGroupByOutputType = {
    id: string
    MaLoaiPhong: string
    MaNhomKhuVucPhong: string
    TenPhong: string
    GhiChu: string | null
    Status: $Enums.tbphong_Status
    StatusDatCho: $Enums.tbdatcho_Status
    StatusThongBao: $Enums.thongbao_Status
    createAt: Date
    updateAt: Date
    _count: TbPhongCountAggregateOutputType | null
    _min: TbPhongMinAggregateOutputType | null
    _max: TbPhongMaxAggregateOutputType | null
  }

  type GetTbPhongGroupByPayload<T extends TbPhongGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbPhongGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbPhongGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbPhongGroupByOutputType[P]>
            : GetScalarType<T[P], TbPhongGroupByOutputType[P]>
        }
      >
    >


  export type TbPhongSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaLoaiPhong?: boolean
    MaNhomKhuVucPhong?: boolean
    TenPhong?: boolean
    GhiChu?: boolean
    Status?: boolean
    StatusDatCho?: boolean
    StatusThongBao?: boolean
    createAt?: boolean
    updateAt?: boolean
    NhomKhuVucPhong?: boolean | TbNhomKhuVucPhongDefaultArgs<ExtArgs>
    LoaiPhong?: boolean | TbLoaiPhongDefaultArgs<ExtArgs>
    DatCho?: boolean | TbPhong$DatChoArgs<ExtArgs>
    CacLinkAnhPhong?: boolean | TbPhong$CacLinkAnhPhongArgs<ExtArgs>
    _count?: boolean | TbPhongCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbPhong"]>

  export type TbPhongSelectScalar = {
    id?: boolean
    MaLoaiPhong?: boolean
    MaNhomKhuVucPhong?: boolean
    TenPhong?: boolean
    GhiChu?: boolean
    Status?: boolean
    StatusDatCho?: boolean
    StatusThongBao?: boolean
    createAt?: boolean
    updateAt?: boolean
  }

  export type TbPhongInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    NhomKhuVucPhong?: boolean | TbNhomKhuVucPhongDefaultArgs<ExtArgs>
    LoaiPhong?: boolean | TbLoaiPhongDefaultArgs<ExtArgs>
    DatCho?: boolean | TbPhong$DatChoArgs<ExtArgs>
    CacLinkAnhPhong?: boolean | TbPhong$CacLinkAnhPhongArgs<ExtArgs>
    _count?: boolean | TbPhongCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbPhongPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbPhong"
    objects: {
      NhomKhuVucPhong: Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>
      LoaiPhong: Prisma.$TbLoaiPhongPayload<ExtArgs>
      DatCho: Prisma.$TbDatChoPayload<ExtArgs>[]
      CacLinkAnhPhong: Prisma.$TbCacLinkAnhPhongPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaLoaiPhong: string
      MaNhomKhuVucPhong: string
      TenPhong: string
      GhiChu: string | null
      Status: $Enums.tbphong_Status
      StatusDatCho: $Enums.tbdatcho_Status
      StatusThongBao: $Enums.thongbao_Status
      createAt: Date
      updateAt: Date
    }, ExtArgs["result"]["tbPhong"]>
    composites: {}
  }


  type TbPhongGetPayload<S extends boolean | null | undefined | TbPhongDefaultArgs> = $Result.GetResult<Prisma.$TbPhongPayload, S>

  type TbPhongCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbPhongFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbPhongCountAggregateInputType | true
    }

  export interface TbPhongDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbPhong'], meta: { name: 'TbPhong' } }
    /**
     * Find zero or one TbPhong that matches the filter.
     * @param {TbPhongFindUniqueArgs} args - Arguments to find a TbPhong
     * @example
     * // Get one TbPhong
     * const tbPhong = await prisma.tbPhong.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbPhongFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbPhongFindUniqueArgs<ExtArgs>>
    ): Prisma__TbPhongClient<$Result.GetResult<Prisma.$TbPhongPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbPhong that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbPhongFindUniqueOrThrowArgs} args - Arguments to find a TbPhong
     * @example
     * // Get one TbPhong
     * const tbPhong = await prisma.tbPhong.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbPhongFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbPhongFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbPhongClient<$Result.GetResult<Prisma.$TbPhongPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbPhong that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhongFindFirstArgs} args - Arguments to find a TbPhong
     * @example
     * // Get one TbPhong
     * const tbPhong = await prisma.tbPhong.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbPhongFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbPhongFindFirstArgs<ExtArgs>>
    ): Prisma__TbPhongClient<$Result.GetResult<Prisma.$TbPhongPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbPhong that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhongFindFirstOrThrowArgs} args - Arguments to find a TbPhong
     * @example
     * // Get one TbPhong
     * const tbPhong = await prisma.tbPhong.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbPhongFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbPhongFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbPhongClient<$Result.GetResult<Prisma.$TbPhongPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbPhongs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhongFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbPhongs
     * const tbPhongs = await prisma.tbPhong.findMany()
     * 
     * // Get first 10 TbPhongs
     * const tbPhongs = await prisma.tbPhong.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbPhongWithIdOnly = await prisma.tbPhong.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbPhongFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbPhongFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbPhongPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbPhong.
     * @param {TbPhongCreateArgs} args - Arguments to create a TbPhong.
     * @example
     * // Create one TbPhong
     * const TbPhong = await prisma.tbPhong.create({
     *   data: {
     *     // ... data to create a TbPhong
     *   }
     * })
     * 
    **/
    create<T extends TbPhongCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbPhongCreateArgs<ExtArgs>>
    ): Prisma__TbPhongClient<$Result.GetResult<Prisma.$TbPhongPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbPhongs.
     *     @param {TbPhongCreateManyArgs} args - Arguments to create many TbPhongs.
     *     @example
     *     // Create many TbPhongs
     *     const tbPhong = await prisma.tbPhong.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbPhongCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbPhongCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbPhong.
     * @param {TbPhongDeleteArgs} args - Arguments to delete one TbPhong.
     * @example
     * // Delete one TbPhong
     * const TbPhong = await prisma.tbPhong.delete({
     *   where: {
     *     // ... filter to delete one TbPhong
     *   }
     * })
     * 
    **/
    delete<T extends TbPhongDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbPhongDeleteArgs<ExtArgs>>
    ): Prisma__TbPhongClient<$Result.GetResult<Prisma.$TbPhongPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbPhong.
     * @param {TbPhongUpdateArgs} args - Arguments to update one TbPhong.
     * @example
     * // Update one TbPhong
     * const tbPhong = await prisma.tbPhong.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbPhongUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbPhongUpdateArgs<ExtArgs>>
    ): Prisma__TbPhongClient<$Result.GetResult<Prisma.$TbPhongPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbPhongs.
     * @param {TbPhongDeleteManyArgs} args - Arguments to filter TbPhongs to delete.
     * @example
     * // Delete a few TbPhongs
     * const { count } = await prisma.tbPhong.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbPhongDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbPhongDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbPhongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhongUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbPhongs
     * const tbPhong = await prisma.tbPhong.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbPhongUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbPhongUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbPhong.
     * @param {TbPhongUpsertArgs} args - Arguments to update or create a TbPhong.
     * @example
     * // Update or create a TbPhong
     * const tbPhong = await prisma.tbPhong.upsert({
     *   create: {
     *     // ... data to create a TbPhong
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbPhong we want to update
     *   }
     * })
    **/
    upsert<T extends TbPhongUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbPhongUpsertArgs<ExtArgs>>
    ): Prisma__TbPhongClient<$Result.GetResult<Prisma.$TbPhongPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbPhongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhongCountArgs} args - Arguments to filter TbPhongs to count.
     * @example
     * // Count the number of TbPhongs
     * const count = await prisma.tbPhong.count({
     *   where: {
     *     // ... the filter for the TbPhongs we want to count
     *   }
     * })
    **/
    count<T extends TbPhongCountArgs>(
      args?: Subset<T, TbPhongCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbPhongCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbPhong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhongAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbPhongAggregateArgs>(args: Subset<T, TbPhongAggregateArgs>): Prisma.PrismaPromise<GetTbPhongAggregateType<T>>

    /**
     * Group by TbPhong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbPhongGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbPhongGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbPhongGroupByArgs['orderBy'] }
        : { orderBy?: TbPhongGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbPhongGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbPhongGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbPhong model
   */
  readonly fields: TbPhongFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbPhong.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbPhongClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    NhomKhuVucPhong<T extends TbNhomKhuVucPhongDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbNhomKhuVucPhongDefaultArgs<ExtArgs>>): Prisma__TbNhomKhuVucPhongClient<$Result.GetResult<Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    LoaiPhong<T extends TbLoaiPhongDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbLoaiPhongDefaultArgs<ExtArgs>>): Prisma__TbLoaiPhongClient<$Result.GetResult<Prisma.$TbLoaiPhongPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    DatCho<T extends TbPhong$DatChoArgs<ExtArgs> = {}>(args?: Subset<T, TbPhong$DatChoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbDatChoPayload<ExtArgs>, T, 'findMany'> | Null>;

    CacLinkAnhPhong<T extends TbPhong$CacLinkAnhPhongArgs<ExtArgs> = {}>(args?: Subset<T, TbPhong$CacLinkAnhPhongArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbCacLinkAnhPhongPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbPhong model
   */ 
  interface TbPhongFieldRefs {
    readonly id: FieldRef<"TbPhong", 'String'>
    readonly MaLoaiPhong: FieldRef<"TbPhong", 'String'>
    readonly MaNhomKhuVucPhong: FieldRef<"TbPhong", 'String'>
    readonly TenPhong: FieldRef<"TbPhong", 'String'>
    readonly GhiChu: FieldRef<"TbPhong", 'String'>
    readonly Status: FieldRef<"TbPhong", 'tbphong_Status'>
    readonly StatusDatCho: FieldRef<"TbPhong", 'tbdatcho_Status'>
    readonly StatusThongBao: FieldRef<"TbPhong", 'thongbao_Status'>
    readonly createAt: FieldRef<"TbPhong", 'DateTime'>
    readonly updateAt: FieldRef<"TbPhong", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * TbPhong findUnique
   */
  export type TbPhongFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhong
     */
    select?: TbPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbPhong to fetch.
     */
    where: TbPhongWhereUniqueInput
  }


  /**
   * TbPhong findUniqueOrThrow
   */
  export type TbPhongFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhong
     */
    select?: TbPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbPhong to fetch.
     */
    where: TbPhongWhereUniqueInput
  }


  /**
   * TbPhong findFirst
   */
  export type TbPhongFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhong
     */
    select?: TbPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbPhong to fetch.
     */
    where?: TbPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbPhongs to fetch.
     */
    orderBy?: TbPhongOrderByWithRelationInput | TbPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbPhongs.
     */
    cursor?: TbPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbPhongs.
     */
    distinct?: TbPhongScalarFieldEnum | TbPhongScalarFieldEnum[]
  }


  /**
   * TbPhong findFirstOrThrow
   */
  export type TbPhongFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhong
     */
    select?: TbPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbPhong to fetch.
     */
    where?: TbPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbPhongs to fetch.
     */
    orderBy?: TbPhongOrderByWithRelationInput | TbPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbPhongs.
     */
    cursor?: TbPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbPhongs.
     */
    distinct?: TbPhongScalarFieldEnum | TbPhongScalarFieldEnum[]
  }


  /**
   * TbPhong findMany
   */
  export type TbPhongFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhong
     */
    select?: TbPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbPhongs to fetch.
     */
    where?: TbPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbPhongs to fetch.
     */
    orderBy?: TbPhongOrderByWithRelationInput | TbPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbPhongs.
     */
    cursor?: TbPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbPhongs.
     */
    skip?: number
    distinct?: TbPhongScalarFieldEnum | TbPhongScalarFieldEnum[]
  }


  /**
   * TbPhong create
   */
  export type TbPhongCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhong
     */
    select?: TbPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhongInclude<ExtArgs> | null
    /**
     * The data needed to create a TbPhong.
     */
    data: XOR<TbPhongCreateInput, TbPhongUncheckedCreateInput>
  }


  /**
   * TbPhong createMany
   */
  export type TbPhongCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbPhongs.
     */
    data: TbPhongCreateManyInput | TbPhongCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbPhong update
   */
  export type TbPhongUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhong
     */
    select?: TbPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhongInclude<ExtArgs> | null
    /**
     * The data needed to update a TbPhong.
     */
    data: XOR<TbPhongUpdateInput, TbPhongUncheckedUpdateInput>
    /**
     * Choose, which TbPhong to update.
     */
    where: TbPhongWhereUniqueInput
  }


  /**
   * TbPhong updateMany
   */
  export type TbPhongUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbPhongs.
     */
    data: XOR<TbPhongUpdateManyMutationInput, TbPhongUncheckedUpdateManyInput>
    /**
     * Filter which TbPhongs to update
     */
    where?: TbPhongWhereInput
  }


  /**
   * TbPhong upsert
   */
  export type TbPhongUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhong
     */
    select?: TbPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhongInclude<ExtArgs> | null
    /**
     * The filter to search for the TbPhong to update in case it exists.
     */
    where: TbPhongWhereUniqueInput
    /**
     * In case the TbPhong found by the `where` argument doesn't exist, create a new TbPhong with this data.
     */
    create: XOR<TbPhongCreateInput, TbPhongUncheckedCreateInput>
    /**
     * In case the TbPhong was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbPhongUpdateInput, TbPhongUncheckedUpdateInput>
  }


  /**
   * TbPhong delete
   */
  export type TbPhongDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhong
     */
    select?: TbPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhongInclude<ExtArgs> | null
    /**
     * Filter which TbPhong to delete.
     */
    where: TbPhongWhereUniqueInput
  }


  /**
   * TbPhong deleteMany
   */
  export type TbPhongDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbPhongs to delete
     */
    where?: TbPhongWhereInput
  }


  /**
   * TbPhong.DatCho
   */
  export type TbPhong$DatChoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbDatCho
     */
    select?: TbDatChoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbDatChoInclude<ExtArgs> | null
    where?: TbDatChoWhereInput
    orderBy?: TbDatChoOrderByWithRelationInput | TbDatChoOrderByWithRelationInput[]
    cursor?: TbDatChoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbDatChoScalarFieldEnum | TbDatChoScalarFieldEnum[]
  }


  /**
   * TbPhong.CacLinkAnhPhong
   */
  export type TbPhong$CacLinkAnhPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbCacLinkAnhPhong
     */
    select?: TbCacLinkAnhPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbCacLinkAnhPhongInclude<ExtArgs> | null
    where?: TbCacLinkAnhPhongWhereInput
    orderBy?: TbCacLinkAnhPhongOrderByWithRelationInput | TbCacLinkAnhPhongOrderByWithRelationInput[]
    cursor?: TbCacLinkAnhPhongWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbCacLinkAnhPhongScalarFieldEnum | TbCacLinkAnhPhongScalarFieldEnum[]
  }


  /**
   * TbPhong without action
   */
  export type TbPhongDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhong
     */
    select?: TbPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhongInclude<ExtArgs> | null
  }



  /**
   * Model TbNhomKhuVucPhong
   */

  export type AggregateTbNhomKhuVucPhong = {
    _count: TbNhomKhuVucPhongCountAggregateOutputType | null
    _min: TbNhomKhuVucPhongMinAggregateOutputType | null
    _max: TbNhomKhuVucPhongMaxAggregateOutputType | null
  }

  export type TbNhomKhuVucPhongMinAggregateOutputType = {
    id: string | null
    MaKhachSan: string | null
    TenNhomKhuVuc: string | null
    GhiChu: string | null
  }

  export type TbNhomKhuVucPhongMaxAggregateOutputType = {
    id: string | null
    MaKhachSan: string | null
    TenNhomKhuVuc: string | null
    GhiChu: string | null
  }

  export type TbNhomKhuVucPhongCountAggregateOutputType = {
    id: number
    MaKhachSan: number
    TenNhomKhuVuc: number
    GhiChu: number
    _all: number
  }


  export type TbNhomKhuVucPhongMinAggregateInputType = {
    id?: true
    MaKhachSan?: true
    TenNhomKhuVuc?: true
    GhiChu?: true
  }

  export type TbNhomKhuVucPhongMaxAggregateInputType = {
    id?: true
    MaKhachSan?: true
    TenNhomKhuVuc?: true
    GhiChu?: true
  }

  export type TbNhomKhuVucPhongCountAggregateInputType = {
    id?: true
    MaKhachSan?: true
    TenNhomKhuVuc?: true
    GhiChu?: true
    _all?: true
  }

  export type TbNhomKhuVucPhongAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbNhomKhuVucPhong to aggregate.
     */
    where?: TbNhomKhuVucPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhomKhuVucPhongs to fetch.
     */
    orderBy?: TbNhomKhuVucPhongOrderByWithRelationInput | TbNhomKhuVucPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TbNhomKhuVucPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhomKhuVucPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhomKhuVucPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TbNhomKhuVucPhongs
    **/
    _count?: true | TbNhomKhuVucPhongCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbNhomKhuVucPhongMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbNhomKhuVucPhongMaxAggregateInputType
  }

  export type GetTbNhomKhuVucPhongAggregateType<T extends TbNhomKhuVucPhongAggregateArgs> = {
        [P in keyof T & keyof AggregateTbNhomKhuVucPhong]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbNhomKhuVucPhong[P]>
      : GetScalarType<T[P], AggregateTbNhomKhuVucPhong[P]>
  }




  export type TbNhomKhuVucPhongGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TbNhomKhuVucPhongWhereInput
    orderBy?: TbNhomKhuVucPhongOrderByWithAggregationInput | TbNhomKhuVucPhongOrderByWithAggregationInput[]
    by: TbNhomKhuVucPhongScalarFieldEnum[] | TbNhomKhuVucPhongScalarFieldEnum
    having?: TbNhomKhuVucPhongScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbNhomKhuVucPhongCountAggregateInputType | true
    _min?: TbNhomKhuVucPhongMinAggregateInputType
    _max?: TbNhomKhuVucPhongMaxAggregateInputType
  }

  export type TbNhomKhuVucPhongGroupByOutputType = {
    id: string
    MaKhachSan: string
    TenNhomKhuVuc: string
    GhiChu: string | null
    _count: TbNhomKhuVucPhongCountAggregateOutputType | null
    _min: TbNhomKhuVucPhongMinAggregateOutputType | null
    _max: TbNhomKhuVucPhongMaxAggregateOutputType | null
  }

  type GetTbNhomKhuVucPhongGroupByPayload<T extends TbNhomKhuVucPhongGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbNhomKhuVucPhongGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbNhomKhuVucPhongGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbNhomKhuVucPhongGroupByOutputType[P]>
            : GetScalarType<T[P], TbNhomKhuVucPhongGroupByOutputType[P]>
        }
      >
    >


  export type TbNhomKhuVucPhongSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaKhachSan?: boolean
    TenNhomKhuVuc?: boolean
    GhiChu?: boolean
    Phong?: boolean | TbNhomKhuVucPhong$PhongArgs<ExtArgs>
    KhachSan?: boolean | TbKhachSanDefaultArgs<ExtArgs>
    _count?: boolean | TbNhomKhuVucPhongCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbNhomKhuVucPhong"]>

  export type TbNhomKhuVucPhongSelectScalar = {
    id?: boolean
    MaKhachSan?: boolean
    TenNhomKhuVuc?: boolean
    GhiChu?: boolean
  }

  export type TbNhomKhuVucPhongInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Phong?: boolean | TbNhomKhuVucPhong$PhongArgs<ExtArgs>
    KhachSan?: boolean | TbKhachSanDefaultArgs<ExtArgs>
    _count?: boolean | TbNhomKhuVucPhongCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TbNhomKhuVucPhongPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TbNhomKhuVucPhong"
    objects: {
      Phong: Prisma.$TbPhongPayload<ExtArgs>[]
      KhachSan: Prisma.$TbKhachSanPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaKhachSan: string
      TenNhomKhuVuc: string
      GhiChu: string | null
    }, ExtArgs["result"]["tbNhomKhuVucPhong"]>
    composites: {}
  }


  type TbNhomKhuVucPhongGetPayload<S extends boolean | null | undefined | TbNhomKhuVucPhongDefaultArgs> = $Result.GetResult<Prisma.$TbNhomKhuVucPhongPayload, S>

  type TbNhomKhuVucPhongCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TbNhomKhuVucPhongFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TbNhomKhuVucPhongCountAggregateInputType | true
    }

  export interface TbNhomKhuVucPhongDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TbNhomKhuVucPhong'], meta: { name: 'TbNhomKhuVucPhong' } }
    /**
     * Find zero or one TbNhomKhuVucPhong that matches the filter.
     * @param {TbNhomKhuVucPhongFindUniqueArgs} args - Arguments to find a TbNhomKhuVucPhong
     * @example
     * // Get one TbNhomKhuVucPhong
     * const tbNhomKhuVucPhong = await prisma.tbNhomKhuVucPhong.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TbNhomKhuVucPhongFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomKhuVucPhongFindUniqueArgs<ExtArgs>>
    ): Prisma__TbNhomKhuVucPhongClient<$Result.GetResult<Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbNhomKhuVucPhong that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TbNhomKhuVucPhongFindUniqueOrThrowArgs} args - Arguments to find a TbNhomKhuVucPhong
     * @example
     * // Get one TbNhomKhuVucPhong
     * const tbNhomKhuVucPhong = await prisma.tbNhomKhuVucPhong.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TbNhomKhuVucPhongFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomKhuVucPhongFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TbNhomKhuVucPhongClient<$Result.GetResult<Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbNhomKhuVucPhong that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomKhuVucPhongFindFirstArgs} args - Arguments to find a TbNhomKhuVucPhong
     * @example
     * // Get one TbNhomKhuVucPhong
     * const tbNhomKhuVucPhong = await prisma.tbNhomKhuVucPhong.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TbNhomKhuVucPhongFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomKhuVucPhongFindFirstArgs<ExtArgs>>
    ): Prisma__TbNhomKhuVucPhongClient<$Result.GetResult<Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbNhomKhuVucPhong that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomKhuVucPhongFindFirstOrThrowArgs} args - Arguments to find a TbNhomKhuVucPhong
     * @example
     * // Get one TbNhomKhuVucPhong
     * const tbNhomKhuVucPhong = await prisma.tbNhomKhuVucPhong.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TbNhomKhuVucPhongFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomKhuVucPhongFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TbNhomKhuVucPhongClient<$Result.GetResult<Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbNhomKhuVucPhongs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomKhuVucPhongFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbNhomKhuVucPhongs
     * const tbNhomKhuVucPhongs = await prisma.tbNhomKhuVucPhong.findMany()
     * 
     * // Get first 10 TbNhomKhuVucPhongs
     * const tbNhomKhuVucPhongs = await prisma.tbNhomKhuVucPhong.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbNhomKhuVucPhongWithIdOnly = await prisma.tbNhomKhuVucPhong.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TbNhomKhuVucPhongFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomKhuVucPhongFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbNhomKhuVucPhong.
     * @param {TbNhomKhuVucPhongCreateArgs} args - Arguments to create a TbNhomKhuVucPhong.
     * @example
     * // Create one TbNhomKhuVucPhong
     * const TbNhomKhuVucPhong = await prisma.tbNhomKhuVucPhong.create({
     *   data: {
     *     // ... data to create a TbNhomKhuVucPhong
     *   }
     * })
     * 
    **/
    create<T extends TbNhomKhuVucPhongCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomKhuVucPhongCreateArgs<ExtArgs>>
    ): Prisma__TbNhomKhuVucPhongClient<$Result.GetResult<Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbNhomKhuVucPhongs.
     *     @param {TbNhomKhuVucPhongCreateManyArgs} args - Arguments to create many TbNhomKhuVucPhongs.
     *     @example
     *     // Create many TbNhomKhuVucPhongs
     *     const tbNhomKhuVucPhong = await prisma.tbNhomKhuVucPhong.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TbNhomKhuVucPhongCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomKhuVucPhongCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbNhomKhuVucPhong.
     * @param {TbNhomKhuVucPhongDeleteArgs} args - Arguments to delete one TbNhomKhuVucPhong.
     * @example
     * // Delete one TbNhomKhuVucPhong
     * const TbNhomKhuVucPhong = await prisma.tbNhomKhuVucPhong.delete({
     *   where: {
     *     // ... filter to delete one TbNhomKhuVucPhong
     *   }
     * })
     * 
    **/
    delete<T extends TbNhomKhuVucPhongDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomKhuVucPhongDeleteArgs<ExtArgs>>
    ): Prisma__TbNhomKhuVucPhongClient<$Result.GetResult<Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbNhomKhuVucPhong.
     * @param {TbNhomKhuVucPhongUpdateArgs} args - Arguments to update one TbNhomKhuVucPhong.
     * @example
     * // Update one TbNhomKhuVucPhong
     * const tbNhomKhuVucPhong = await prisma.tbNhomKhuVucPhong.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TbNhomKhuVucPhongUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomKhuVucPhongUpdateArgs<ExtArgs>>
    ): Prisma__TbNhomKhuVucPhongClient<$Result.GetResult<Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbNhomKhuVucPhongs.
     * @param {TbNhomKhuVucPhongDeleteManyArgs} args - Arguments to filter TbNhomKhuVucPhongs to delete.
     * @example
     * // Delete a few TbNhomKhuVucPhongs
     * const { count } = await prisma.tbNhomKhuVucPhong.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TbNhomKhuVucPhongDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TbNhomKhuVucPhongDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbNhomKhuVucPhongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomKhuVucPhongUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbNhomKhuVucPhongs
     * const tbNhomKhuVucPhong = await prisma.tbNhomKhuVucPhong.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TbNhomKhuVucPhongUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomKhuVucPhongUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbNhomKhuVucPhong.
     * @param {TbNhomKhuVucPhongUpsertArgs} args - Arguments to update or create a TbNhomKhuVucPhong.
     * @example
     * // Update or create a TbNhomKhuVucPhong
     * const tbNhomKhuVucPhong = await prisma.tbNhomKhuVucPhong.upsert({
     *   create: {
     *     // ... data to create a TbNhomKhuVucPhong
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbNhomKhuVucPhong we want to update
     *   }
     * })
    **/
    upsert<T extends TbNhomKhuVucPhongUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TbNhomKhuVucPhongUpsertArgs<ExtArgs>>
    ): Prisma__TbNhomKhuVucPhongClient<$Result.GetResult<Prisma.$TbNhomKhuVucPhongPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbNhomKhuVucPhongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomKhuVucPhongCountArgs} args - Arguments to filter TbNhomKhuVucPhongs to count.
     * @example
     * // Count the number of TbNhomKhuVucPhongs
     * const count = await prisma.tbNhomKhuVucPhong.count({
     *   where: {
     *     // ... the filter for the TbNhomKhuVucPhongs we want to count
     *   }
     * })
    **/
    count<T extends TbNhomKhuVucPhongCountArgs>(
      args?: Subset<T, TbNhomKhuVucPhongCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbNhomKhuVucPhongCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbNhomKhuVucPhong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomKhuVucPhongAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbNhomKhuVucPhongAggregateArgs>(args: Subset<T, TbNhomKhuVucPhongAggregateArgs>): Prisma.PrismaPromise<GetTbNhomKhuVucPhongAggregateType<T>>

    /**
     * Group by TbNhomKhuVucPhong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNhomKhuVucPhongGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TbNhomKhuVucPhongGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TbNhomKhuVucPhongGroupByArgs['orderBy'] }
        : { orderBy?: TbNhomKhuVucPhongGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TbNhomKhuVucPhongGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbNhomKhuVucPhongGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TbNhomKhuVucPhong model
   */
  readonly fields: TbNhomKhuVucPhongFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TbNhomKhuVucPhong.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TbNhomKhuVucPhongClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Phong<T extends TbNhomKhuVucPhong$PhongArgs<ExtArgs> = {}>(args?: Subset<T, TbNhomKhuVucPhong$PhongArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbPhongPayload<ExtArgs>, T, 'findMany'> | Null>;

    KhachSan<T extends TbKhachSanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TbKhachSanDefaultArgs<ExtArgs>>): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TbNhomKhuVucPhong model
   */ 
  interface TbNhomKhuVucPhongFieldRefs {
    readonly id: FieldRef<"TbNhomKhuVucPhong", 'String'>
    readonly MaKhachSan: FieldRef<"TbNhomKhuVucPhong", 'String'>
    readonly TenNhomKhuVuc: FieldRef<"TbNhomKhuVucPhong", 'String'>
    readonly GhiChu: FieldRef<"TbNhomKhuVucPhong", 'String'>
  }
    

  // Custom InputTypes

  /**
   * TbNhomKhuVucPhong findUnique
   */
  export type TbNhomKhuVucPhongFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomKhuVucPhong
     */
    select?: TbNhomKhuVucPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomKhuVucPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomKhuVucPhong to fetch.
     */
    where: TbNhomKhuVucPhongWhereUniqueInput
  }


  /**
   * TbNhomKhuVucPhong findUniqueOrThrow
   */
  export type TbNhomKhuVucPhongFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomKhuVucPhong
     */
    select?: TbNhomKhuVucPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomKhuVucPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomKhuVucPhong to fetch.
     */
    where: TbNhomKhuVucPhongWhereUniqueInput
  }


  /**
   * TbNhomKhuVucPhong findFirst
   */
  export type TbNhomKhuVucPhongFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomKhuVucPhong
     */
    select?: TbNhomKhuVucPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomKhuVucPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomKhuVucPhong to fetch.
     */
    where?: TbNhomKhuVucPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhomKhuVucPhongs to fetch.
     */
    orderBy?: TbNhomKhuVucPhongOrderByWithRelationInput | TbNhomKhuVucPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbNhomKhuVucPhongs.
     */
    cursor?: TbNhomKhuVucPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhomKhuVucPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhomKhuVucPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbNhomKhuVucPhongs.
     */
    distinct?: TbNhomKhuVucPhongScalarFieldEnum | TbNhomKhuVucPhongScalarFieldEnum[]
  }


  /**
   * TbNhomKhuVucPhong findFirstOrThrow
   */
  export type TbNhomKhuVucPhongFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomKhuVucPhong
     */
    select?: TbNhomKhuVucPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomKhuVucPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomKhuVucPhong to fetch.
     */
    where?: TbNhomKhuVucPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhomKhuVucPhongs to fetch.
     */
    orderBy?: TbNhomKhuVucPhongOrderByWithRelationInput | TbNhomKhuVucPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TbNhomKhuVucPhongs.
     */
    cursor?: TbNhomKhuVucPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhomKhuVucPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhomKhuVucPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TbNhomKhuVucPhongs.
     */
    distinct?: TbNhomKhuVucPhongScalarFieldEnum | TbNhomKhuVucPhongScalarFieldEnum[]
  }


  /**
   * TbNhomKhuVucPhong findMany
   */
  export type TbNhomKhuVucPhongFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomKhuVucPhong
     */
    select?: TbNhomKhuVucPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomKhuVucPhongInclude<ExtArgs> | null
    /**
     * Filter, which TbNhomKhuVucPhongs to fetch.
     */
    where?: TbNhomKhuVucPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TbNhomKhuVucPhongs to fetch.
     */
    orderBy?: TbNhomKhuVucPhongOrderByWithRelationInput | TbNhomKhuVucPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TbNhomKhuVucPhongs.
     */
    cursor?: TbNhomKhuVucPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TbNhomKhuVucPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TbNhomKhuVucPhongs.
     */
    skip?: number
    distinct?: TbNhomKhuVucPhongScalarFieldEnum | TbNhomKhuVucPhongScalarFieldEnum[]
  }


  /**
   * TbNhomKhuVucPhong create
   */
  export type TbNhomKhuVucPhongCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomKhuVucPhong
     */
    select?: TbNhomKhuVucPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomKhuVucPhongInclude<ExtArgs> | null
    /**
     * The data needed to create a TbNhomKhuVucPhong.
     */
    data: XOR<TbNhomKhuVucPhongCreateInput, TbNhomKhuVucPhongUncheckedCreateInput>
  }


  /**
   * TbNhomKhuVucPhong createMany
   */
  export type TbNhomKhuVucPhongCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TbNhomKhuVucPhongs.
     */
    data: TbNhomKhuVucPhongCreateManyInput | TbNhomKhuVucPhongCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * TbNhomKhuVucPhong update
   */
  export type TbNhomKhuVucPhongUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomKhuVucPhong
     */
    select?: TbNhomKhuVucPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomKhuVucPhongInclude<ExtArgs> | null
    /**
     * The data needed to update a TbNhomKhuVucPhong.
     */
    data: XOR<TbNhomKhuVucPhongUpdateInput, TbNhomKhuVucPhongUncheckedUpdateInput>
    /**
     * Choose, which TbNhomKhuVucPhong to update.
     */
    where: TbNhomKhuVucPhongWhereUniqueInput
  }


  /**
   * TbNhomKhuVucPhong updateMany
   */
  export type TbNhomKhuVucPhongUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TbNhomKhuVucPhongs.
     */
    data: XOR<TbNhomKhuVucPhongUpdateManyMutationInput, TbNhomKhuVucPhongUncheckedUpdateManyInput>
    /**
     * Filter which TbNhomKhuVucPhongs to update
     */
    where?: TbNhomKhuVucPhongWhereInput
  }


  /**
   * TbNhomKhuVucPhong upsert
   */
  export type TbNhomKhuVucPhongUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomKhuVucPhong
     */
    select?: TbNhomKhuVucPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomKhuVucPhongInclude<ExtArgs> | null
    /**
     * The filter to search for the TbNhomKhuVucPhong to update in case it exists.
     */
    where: TbNhomKhuVucPhongWhereUniqueInput
    /**
     * In case the TbNhomKhuVucPhong found by the `where` argument doesn't exist, create a new TbNhomKhuVucPhong with this data.
     */
    create: XOR<TbNhomKhuVucPhongCreateInput, TbNhomKhuVucPhongUncheckedCreateInput>
    /**
     * In case the TbNhomKhuVucPhong was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TbNhomKhuVucPhongUpdateInput, TbNhomKhuVucPhongUncheckedUpdateInput>
  }


  /**
   * TbNhomKhuVucPhong delete
   */
  export type TbNhomKhuVucPhongDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomKhuVucPhong
     */
    select?: TbNhomKhuVucPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomKhuVucPhongInclude<ExtArgs> | null
    /**
     * Filter which TbNhomKhuVucPhong to delete.
     */
    where: TbNhomKhuVucPhongWhereUniqueInput
  }


  /**
   * TbNhomKhuVucPhong deleteMany
   */
  export type TbNhomKhuVucPhongDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TbNhomKhuVucPhongs to delete
     */
    where?: TbNhomKhuVucPhongWhereInput
  }


  /**
   * TbNhomKhuVucPhong.Phong
   */
  export type TbNhomKhuVucPhong$PhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbPhong
     */
    select?: TbPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbPhongInclude<ExtArgs> | null
    where?: TbPhongWhereInput
    orderBy?: TbPhongOrderByWithRelationInput | TbPhongOrderByWithRelationInput[]
    cursor?: TbPhongWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbPhongScalarFieldEnum | TbPhongScalarFieldEnum[]
  }


  /**
   * TbNhomKhuVucPhong without action
   */
  export type TbNhomKhuVucPhongDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNhomKhuVucPhong
     */
    select?: TbNhomKhuVucPhongSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbNhomKhuVucPhongInclude<ExtArgs> | null
  }



  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    phone_number: number | null
  }

  export type UserSumAggregateOutputType = {
    phone_number: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    name: string | null
    phone_number: number | null
    address: string | null
    password: string | null
    email: string | null
    createdAt: Date | null
    updatedAt: Date | null
    role: $Enums.tbtaikhoan_VaiTro | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    name: string | null
    phone_number: number | null
    address: string | null
    password: string | null
    email: string | null
    createdAt: Date | null
    updatedAt: Date | null
    role: $Enums.tbtaikhoan_VaiTro | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    phone_number: number
    address: number
    password: number
    email: number
    createdAt: number
    updatedAt: number
    role: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    phone_number?: true
  }

  export type UserSumAggregateInputType = {
    phone_number?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    phone_number?: true
    address?: true
    password?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    role?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    phone_number?: true
    address?: true
    password?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    role?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    phone_number?: true
    address?: true
    password?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    role?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    name: string
    phone_number: number | null
    address: string | null
    password: string
    email: string
    createdAt: Date
    updatedAt: Date
    role: $Enums.tbtaikhoan_VaiTro
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    phone_number?: boolean
    address?: boolean
    password?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean
    avatar?: boolean | User$avatarArgs<ExtArgs>
    ChiNhanh?: boolean | User$ChiNhanhArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    phone_number?: boolean
    address?: boolean
    password?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    avatar?: boolean | User$avatarArgs<ExtArgs>
    ChiNhanh?: boolean | User$ChiNhanhArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      avatar: Prisma.$AvatarsPayload<ExtArgs> | null
      ChiNhanh: Prisma.$TbChiNhanhPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      phone_number: number | null
      address: string | null
      password: string
      email: string
      createdAt: Date
      updatedAt: Date
      role: $Enums.tbtaikhoan_VaiTro
    }, ExtArgs["result"]["user"]>
    composites: {}
  }


  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UserFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
    **/
    create<T extends UserCreateArgs<ExtArgs>>(
      args: SelectSubset<T, UserCreateArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Users.
     *     @param {UserCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const user = await prisma.user.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UserCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
    **/
    delete<T extends UserDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, UserDeleteArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, UserUpdateArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
    **/
    upsert<T extends UserUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, UserUpsertArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    avatar<T extends User$avatarArgs<ExtArgs> = {}>(args?: Subset<T, User$avatarArgs<ExtArgs>>): Prisma__AvatarsClient<$Result.GetResult<Prisma.$AvatarsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ChiNhanh<T extends User$ChiNhanhArgs<ExtArgs> = {}>(args?: Subset<T, User$ChiNhanhArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbChiNhanhPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly phone_number: FieldRef<"User", 'Float'>
    readonly address: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly role: FieldRef<"User", 'tbtaikhoan_VaiTro'>
  }
    

  // Custom InputTypes

  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }


  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }


  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }


  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }


  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }


  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }


  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }


  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }


  /**
   * User.avatar
   */
  export type User$avatarArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatars
     */
    select?: AvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AvatarsInclude<ExtArgs> | null
    where?: AvatarsWhereInput
  }


  /**
   * User.ChiNhanh
   */
  export type User$ChiNhanhArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbChiNhanh
     */
    select?: TbChiNhanhSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbChiNhanhInclude<ExtArgs> | null
    where?: TbChiNhanhWhereInput
    orderBy?: TbChiNhanhOrderByWithRelationInput | TbChiNhanhOrderByWithRelationInput[]
    cursor?: TbChiNhanhWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbChiNhanhScalarFieldEnum | TbChiNhanhScalarFieldEnum[]
  }


  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
  }



  /**
   * Model SubUser
   */

  export type AggregateSubUser = {
    _count: SubUserCountAggregateOutputType | null
    _avg: SubUserAvgAggregateOutputType | null
    _sum: SubUserSumAggregateOutputType | null
    _min: SubUserMinAggregateOutputType | null
    _max: SubUserMaxAggregateOutputType | null
  }

  export type SubUserAvgAggregateOutputType = {
    phone_number: number | null
  }

  export type SubUserSumAggregateOutputType = {
    phone_number: number | null
  }

  export type SubUserMinAggregateOutputType = {
    id: string | null
    MaKhachSan: string | null
    name: string | null
    phone_number: number | null
    address: string | null
    password: string | null
    email: string | null
    createdAt: Date | null
    updatedAt: Date | null
    role: $Enums.tbtaikhoancon_VaiTro | null
  }

  export type SubUserMaxAggregateOutputType = {
    id: string | null
    MaKhachSan: string | null
    name: string | null
    phone_number: number | null
    address: string | null
    password: string | null
    email: string | null
    createdAt: Date | null
    updatedAt: Date | null
    role: $Enums.tbtaikhoancon_VaiTro | null
  }

  export type SubUserCountAggregateOutputType = {
    id: number
    MaKhachSan: number
    name: number
    phone_number: number
    address: number
    password: number
    email: number
    createdAt: number
    updatedAt: number
    role: number
    _all: number
  }


  export type SubUserAvgAggregateInputType = {
    phone_number?: true
  }

  export type SubUserSumAggregateInputType = {
    phone_number?: true
  }

  export type SubUserMinAggregateInputType = {
    id?: true
    MaKhachSan?: true
    name?: true
    phone_number?: true
    address?: true
    password?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    role?: true
  }

  export type SubUserMaxAggregateInputType = {
    id?: true
    MaKhachSan?: true
    name?: true
    phone_number?: true
    address?: true
    password?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    role?: true
  }

  export type SubUserCountAggregateInputType = {
    id?: true
    MaKhachSan?: true
    name?: true
    phone_number?: true
    address?: true
    password?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    role?: true
    _all?: true
  }

  export type SubUserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubUser to aggregate.
     */
    where?: SubUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubUsers to fetch.
     */
    orderBy?: SubUserOrderByWithRelationInput | SubUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SubUsers
    **/
    _count?: true | SubUserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubUserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubUserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubUserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubUserMaxAggregateInputType
  }

  export type GetSubUserAggregateType<T extends SubUserAggregateArgs> = {
        [P in keyof T & keyof AggregateSubUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubUser[P]>
      : GetScalarType<T[P], AggregateSubUser[P]>
  }




  export type SubUserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubUserWhereInput
    orderBy?: SubUserOrderByWithAggregationInput | SubUserOrderByWithAggregationInput[]
    by: SubUserScalarFieldEnum[] | SubUserScalarFieldEnum
    having?: SubUserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubUserCountAggregateInputType | true
    _avg?: SubUserAvgAggregateInputType
    _sum?: SubUserSumAggregateInputType
    _min?: SubUserMinAggregateInputType
    _max?: SubUserMaxAggregateInputType
  }

  export type SubUserGroupByOutputType = {
    id: string
    MaKhachSan: string | null
    name: string
    phone_number: number | null
    address: string | null
    password: string
    email: string
    createdAt: Date
    updatedAt: Date
    role: $Enums.tbtaikhoancon_VaiTro
    _count: SubUserCountAggregateOutputType | null
    _avg: SubUserAvgAggregateOutputType | null
    _sum: SubUserSumAggregateOutputType | null
    _min: SubUserMinAggregateOutputType | null
    _max: SubUserMaxAggregateOutputType | null
  }

  type GetSubUserGroupByPayload<T extends SubUserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubUserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubUserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubUserGroupByOutputType[P]>
            : GetScalarType<T[P], SubUserGroupByOutputType[P]>
        }
      >
    >


  export type SubUserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    MaKhachSan?: boolean
    name?: boolean
    phone_number?: boolean
    address?: boolean
    password?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean
    subAvatar?: boolean | SubUser$subAvatarArgs<ExtArgs>
    HoaDon?: boolean | SubUser$HoaDonArgs<ExtArgs>
    KhachSan?: boolean | SubUser$KhachSanArgs<ExtArgs>
    _count?: boolean | SubUserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subUser"]>

  export type SubUserSelectScalar = {
    id?: boolean
    MaKhachSan?: boolean
    name?: boolean
    phone_number?: boolean
    address?: boolean
    password?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean
  }

  export type SubUserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subAvatar?: boolean | SubUser$subAvatarArgs<ExtArgs>
    HoaDon?: boolean | SubUser$HoaDonArgs<ExtArgs>
    KhachSan?: boolean | SubUser$KhachSanArgs<ExtArgs>
    _count?: boolean | SubUserCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $SubUserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SubUser"
    objects: {
      subAvatar: Prisma.$SubAvatarsPayload<ExtArgs> | null
      HoaDon: Prisma.$TbHoaDonPayload<ExtArgs>[]
      KhachSan: Prisma.$TbKhachSanPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      MaKhachSan: string | null
      name: string
      phone_number: number | null
      address: string | null
      password: string
      email: string
      createdAt: Date
      updatedAt: Date
      role: $Enums.tbtaikhoancon_VaiTro
    }, ExtArgs["result"]["subUser"]>
    composites: {}
  }


  type SubUserGetPayload<S extends boolean | null | undefined | SubUserDefaultArgs> = $Result.GetResult<Prisma.$SubUserPayload, S>

  type SubUserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SubUserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SubUserCountAggregateInputType | true
    }

  export interface SubUserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SubUser'], meta: { name: 'SubUser' } }
    /**
     * Find zero or one SubUser that matches the filter.
     * @param {SubUserFindUniqueArgs} args - Arguments to find a SubUser
     * @example
     * // Get one SubUser
     * const subUser = await prisma.subUser.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends SubUserFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, SubUserFindUniqueArgs<ExtArgs>>
    ): Prisma__SubUserClient<$Result.GetResult<Prisma.$SubUserPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one SubUser that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {SubUserFindUniqueOrThrowArgs} args - Arguments to find a SubUser
     * @example
     * // Get one SubUser
     * const subUser = await prisma.subUser.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends SubUserFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, SubUserFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__SubUserClient<$Result.GetResult<Prisma.$SubUserPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first SubUser that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubUserFindFirstArgs} args - Arguments to find a SubUser
     * @example
     * // Get one SubUser
     * const subUser = await prisma.subUser.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends SubUserFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, SubUserFindFirstArgs<ExtArgs>>
    ): Prisma__SubUserClient<$Result.GetResult<Prisma.$SubUserPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first SubUser that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubUserFindFirstOrThrowArgs} args - Arguments to find a SubUser
     * @example
     * // Get one SubUser
     * const subUser = await prisma.subUser.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends SubUserFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, SubUserFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__SubUserClient<$Result.GetResult<Prisma.$SubUserPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more SubUsers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubUserFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SubUsers
     * const subUsers = await prisma.subUser.findMany()
     * 
     * // Get first 10 SubUsers
     * const subUsers = await prisma.subUser.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subUserWithIdOnly = await prisma.subUser.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends SubUserFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SubUserFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubUserPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a SubUser.
     * @param {SubUserCreateArgs} args - Arguments to create a SubUser.
     * @example
     * // Create one SubUser
     * const SubUser = await prisma.subUser.create({
     *   data: {
     *     // ... data to create a SubUser
     *   }
     * })
     * 
    **/
    create<T extends SubUserCreateArgs<ExtArgs>>(
      args: SelectSubset<T, SubUserCreateArgs<ExtArgs>>
    ): Prisma__SubUserClient<$Result.GetResult<Prisma.$SubUserPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many SubUsers.
     *     @param {SubUserCreateManyArgs} args - Arguments to create many SubUsers.
     *     @example
     *     // Create many SubUsers
     *     const subUser = await prisma.subUser.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends SubUserCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SubUserCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SubUser.
     * @param {SubUserDeleteArgs} args - Arguments to delete one SubUser.
     * @example
     * // Delete one SubUser
     * const SubUser = await prisma.subUser.delete({
     *   where: {
     *     // ... filter to delete one SubUser
     *   }
     * })
     * 
    **/
    delete<T extends SubUserDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, SubUserDeleteArgs<ExtArgs>>
    ): Prisma__SubUserClient<$Result.GetResult<Prisma.$SubUserPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one SubUser.
     * @param {SubUserUpdateArgs} args - Arguments to update one SubUser.
     * @example
     * // Update one SubUser
     * const subUser = await prisma.subUser.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends SubUserUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, SubUserUpdateArgs<ExtArgs>>
    ): Prisma__SubUserClient<$Result.GetResult<Prisma.$SubUserPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more SubUsers.
     * @param {SubUserDeleteManyArgs} args - Arguments to filter SubUsers to delete.
     * @example
     * // Delete a few SubUsers
     * const { count } = await prisma.subUser.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends SubUserDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SubUserDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SubUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubUserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SubUsers
     * const subUser = await prisma.subUser.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends SubUserUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, SubUserUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SubUser.
     * @param {SubUserUpsertArgs} args - Arguments to update or create a SubUser.
     * @example
     * // Update or create a SubUser
     * const subUser = await prisma.subUser.upsert({
     *   create: {
     *     // ... data to create a SubUser
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SubUser we want to update
     *   }
     * })
    **/
    upsert<T extends SubUserUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, SubUserUpsertArgs<ExtArgs>>
    ): Prisma__SubUserClient<$Result.GetResult<Prisma.$SubUserPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of SubUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubUserCountArgs} args - Arguments to filter SubUsers to count.
     * @example
     * // Count the number of SubUsers
     * const count = await prisma.subUser.count({
     *   where: {
     *     // ... the filter for the SubUsers we want to count
     *   }
     * })
    **/
    count<T extends SubUserCountArgs>(
      args?: Subset<T, SubUserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubUserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SubUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubUserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubUserAggregateArgs>(args: Subset<T, SubUserAggregateArgs>): Prisma.PrismaPromise<GetSubUserAggregateType<T>>

    /**
     * Group by SubUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubUserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubUserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubUserGroupByArgs['orderBy'] }
        : { orderBy?: SubUserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubUserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SubUser model
   */
  readonly fields: SubUserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SubUser.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubUserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    subAvatar<T extends SubUser$subAvatarArgs<ExtArgs> = {}>(args?: Subset<T, SubUser$subAvatarArgs<ExtArgs>>): Prisma__SubAvatarsClient<$Result.GetResult<Prisma.$SubAvatarsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    HoaDon<T extends SubUser$HoaDonArgs<ExtArgs> = {}>(args?: Subset<T, SubUser$HoaDonArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TbHoaDonPayload<ExtArgs>, T, 'findMany'> | Null>;

    KhachSan<T extends SubUser$KhachSanArgs<ExtArgs> = {}>(args?: Subset<T, SubUser$KhachSanArgs<ExtArgs>>): Prisma__TbKhachSanClient<$Result.GetResult<Prisma.$TbKhachSanPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the SubUser model
   */ 
  interface SubUserFieldRefs {
    readonly id: FieldRef<"SubUser", 'String'>
    readonly MaKhachSan: FieldRef<"SubUser", 'String'>
    readonly name: FieldRef<"SubUser", 'String'>
    readonly phone_number: FieldRef<"SubUser", 'Float'>
    readonly address: FieldRef<"SubUser", 'String'>
    readonly password: FieldRef<"SubUser", 'String'>
    readonly email: FieldRef<"SubUser", 'String'>
    readonly createdAt: FieldRef<"SubUser", 'DateTime'>
    readonly updatedAt: FieldRef<"SubUser", 'DateTime'>
    readonly role: FieldRef<"SubUser", 'tbtaikhoancon_VaiTro'>
  }
    

  // Custom InputTypes

  /**
   * SubUser findUnique
   */
  export type SubUserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubUser
     */
    select?: SubUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubUserInclude<ExtArgs> | null
    /**
     * Filter, which SubUser to fetch.
     */
    where: SubUserWhereUniqueInput
  }


  /**
   * SubUser findUniqueOrThrow
   */
  export type SubUserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubUser
     */
    select?: SubUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubUserInclude<ExtArgs> | null
    /**
     * Filter, which SubUser to fetch.
     */
    where: SubUserWhereUniqueInput
  }


  /**
   * SubUser findFirst
   */
  export type SubUserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubUser
     */
    select?: SubUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubUserInclude<ExtArgs> | null
    /**
     * Filter, which SubUser to fetch.
     */
    where?: SubUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubUsers to fetch.
     */
    orderBy?: SubUserOrderByWithRelationInput | SubUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubUsers.
     */
    cursor?: SubUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubUsers.
     */
    distinct?: SubUserScalarFieldEnum | SubUserScalarFieldEnum[]
  }


  /**
   * SubUser findFirstOrThrow
   */
  export type SubUserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubUser
     */
    select?: SubUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubUserInclude<ExtArgs> | null
    /**
     * Filter, which SubUser to fetch.
     */
    where?: SubUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubUsers to fetch.
     */
    orderBy?: SubUserOrderByWithRelationInput | SubUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubUsers.
     */
    cursor?: SubUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubUsers.
     */
    distinct?: SubUserScalarFieldEnum | SubUserScalarFieldEnum[]
  }


  /**
   * SubUser findMany
   */
  export type SubUserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubUser
     */
    select?: SubUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubUserInclude<ExtArgs> | null
    /**
     * Filter, which SubUsers to fetch.
     */
    where?: SubUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubUsers to fetch.
     */
    orderBy?: SubUserOrderByWithRelationInput | SubUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SubUsers.
     */
    cursor?: SubUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubUsers.
     */
    skip?: number
    distinct?: SubUserScalarFieldEnum | SubUserScalarFieldEnum[]
  }


  /**
   * SubUser create
   */
  export type SubUserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubUser
     */
    select?: SubUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubUserInclude<ExtArgs> | null
    /**
     * The data needed to create a SubUser.
     */
    data: XOR<SubUserCreateInput, SubUserUncheckedCreateInput>
  }


  /**
   * SubUser createMany
   */
  export type SubUserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SubUsers.
     */
    data: SubUserCreateManyInput | SubUserCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * SubUser update
   */
  export type SubUserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubUser
     */
    select?: SubUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubUserInclude<ExtArgs> | null
    /**
     * The data needed to update a SubUser.
     */
    data: XOR<SubUserUpdateInput, SubUserUncheckedUpdateInput>
    /**
     * Choose, which SubUser to update.
     */
    where: SubUserWhereUniqueInput
  }


  /**
   * SubUser updateMany
   */
  export type SubUserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SubUsers.
     */
    data: XOR<SubUserUpdateManyMutationInput, SubUserUncheckedUpdateManyInput>
    /**
     * Filter which SubUsers to update
     */
    where?: SubUserWhereInput
  }


  /**
   * SubUser upsert
   */
  export type SubUserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubUser
     */
    select?: SubUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubUserInclude<ExtArgs> | null
    /**
     * The filter to search for the SubUser to update in case it exists.
     */
    where: SubUserWhereUniqueInput
    /**
     * In case the SubUser found by the `where` argument doesn't exist, create a new SubUser with this data.
     */
    create: XOR<SubUserCreateInput, SubUserUncheckedCreateInput>
    /**
     * In case the SubUser was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubUserUpdateInput, SubUserUncheckedUpdateInput>
  }


  /**
   * SubUser delete
   */
  export type SubUserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubUser
     */
    select?: SubUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubUserInclude<ExtArgs> | null
    /**
     * Filter which SubUser to delete.
     */
    where: SubUserWhereUniqueInput
  }


  /**
   * SubUser deleteMany
   */
  export type SubUserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubUsers to delete
     */
    where?: SubUserWhereInput
  }


  /**
   * SubUser.subAvatar
   */
  export type SubUser$subAvatarArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubAvatars
     */
    select?: SubAvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubAvatarsInclude<ExtArgs> | null
    where?: SubAvatarsWhereInput
  }


  /**
   * SubUser.HoaDon
   */
  export type SubUser$HoaDonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbHoaDon
     */
    select?: TbHoaDonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbHoaDonInclude<ExtArgs> | null
    where?: TbHoaDonWhereInput
    orderBy?: TbHoaDonOrderByWithRelationInput | TbHoaDonOrderByWithRelationInput[]
    cursor?: TbHoaDonWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbHoaDonScalarFieldEnum | TbHoaDonScalarFieldEnum[]
  }


  /**
   * SubUser.KhachSan
   */
  export type SubUser$KhachSanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbKhachSan
     */
    select?: TbKhachSanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TbKhachSanInclude<ExtArgs> | null
    where?: TbKhachSanWhereInput
  }


  /**
   * SubUser without action
   */
  export type SubUserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubUser
     */
    select?: SubUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubUserInclude<ExtArgs> | null
  }



  /**
   * Model Avatars
   */

  export type AggregateAvatars = {
    _count: AvatarsCountAggregateOutputType | null
    _min: AvatarsMinAggregateOutputType | null
    _max: AvatarsMaxAggregateOutputType | null
  }

  export type AvatarsMinAggregateOutputType = {
    id: string | null
    public_id: string | null
    url: string | null
    userId: string | null
  }

  export type AvatarsMaxAggregateOutputType = {
    id: string | null
    public_id: string | null
    url: string | null
    userId: string | null
  }

  export type AvatarsCountAggregateOutputType = {
    id: number
    public_id: number
    url: number
    userId: number
    _all: number
  }


  export type AvatarsMinAggregateInputType = {
    id?: true
    public_id?: true
    url?: true
    userId?: true
  }

  export type AvatarsMaxAggregateInputType = {
    id?: true
    public_id?: true
    url?: true
    userId?: true
  }

  export type AvatarsCountAggregateInputType = {
    id?: true
    public_id?: true
    url?: true
    userId?: true
    _all?: true
  }

  export type AvatarsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Avatars to aggregate.
     */
    where?: AvatarsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avatars to fetch.
     */
    orderBy?: AvatarsOrderByWithRelationInput | AvatarsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AvatarsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avatars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avatars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Avatars
    **/
    _count?: true | AvatarsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AvatarsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AvatarsMaxAggregateInputType
  }

  export type GetAvatarsAggregateType<T extends AvatarsAggregateArgs> = {
        [P in keyof T & keyof AggregateAvatars]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAvatars[P]>
      : GetScalarType<T[P], AggregateAvatars[P]>
  }




  export type AvatarsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvatarsWhereInput
    orderBy?: AvatarsOrderByWithAggregationInput | AvatarsOrderByWithAggregationInput[]
    by: AvatarsScalarFieldEnum[] | AvatarsScalarFieldEnum
    having?: AvatarsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AvatarsCountAggregateInputType | true
    _min?: AvatarsMinAggregateInputType
    _max?: AvatarsMaxAggregateInputType
  }

  export type AvatarsGroupByOutputType = {
    id: string
    public_id: string
    url: string
    userId: string
    _count: AvatarsCountAggregateOutputType | null
    _min: AvatarsMinAggregateOutputType | null
    _max: AvatarsMaxAggregateOutputType | null
  }

  type GetAvatarsGroupByPayload<T extends AvatarsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AvatarsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AvatarsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AvatarsGroupByOutputType[P]>
            : GetScalarType<T[P], AvatarsGroupByOutputType[P]>
        }
      >
    >


  export type AvatarsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    public_id?: boolean
    url?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["avatars"]>

  export type AvatarsSelectScalar = {
    id?: boolean
    public_id?: boolean
    url?: boolean
    userId?: boolean
  }

  export type AvatarsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }


  export type $AvatarsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Avatars"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      public_id: string
      url: string
      userId: string
    }, ExtArgs["result"]["avatars"]>
    composites: {}
  }


  type AvatarsGetPayload<S extends boolean | null | undefined | AvatarsDefaultArgs> = $Result.GetResult<Prisma.$AvatarsPayload, S>

  type AvatarsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AvatarsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AvatarsCountAggregateInputType | true
    }

  export interface AvatarsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Avatars'], meta: { name: 'Avatars' } }
    /**
     * Find zero or one Avatars that matches the filter.
     * @param {AvatarsFindUniqueArgs} args - Arguments to find a Avatars
     * @example
     * // Get one Avatars
     * const avatars = await prisma.avatars.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AvatarsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, AvatarsFindUniqueArgs<ExtArgs>>
    ): Prisma__AvatarsClient<$Result.GetResult<Prisma.$AvatarsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Avatars that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {AvatarsFindUniqueOrThrowArgs} args - Arguments to find a Avatars
     * @example
     * // Get one Avatars
     * const avatars = await prisma.avatars.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AvatarsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AvatarsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__AvatarsClient<$Result.GetResult<Prisma.$AvatarsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Avatars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarsFindFirstArgs} args - Arguments to find a Avatars
     * @example
     * // Get one Avatars
     * const avatars = await prisma.avatars.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AvatarsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, AvatarsFindFirstArgs<ExtArgs>>
    ): Prisma__AvatarsClient<$Result.GetResult<Prisma.$AvatarsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Avatars that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarsFindFirstOrThrowArgs} args - Arguments to find a Avatars
     * @example
     * // Get one Avatars
     * const avatars = await prisma.avatars.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AvatarsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AvatarsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__AvatarsClient<$Result.GetResult<Prisma.$AvatarsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Avatars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Avatars
     * const avatars = await prisma.avatars.findMany()
     * 
     * // Get first 10 Avatars
     * const avatars = await prisma.avatars.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const avatarsWithIdOnly = await prisma.avatars.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends AvatarsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AvatarsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvatarsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Avatars.
     * @param {AvatarsCreateArgs} args - Arguments to create a Avatars.
     * @example
     * // Create one Avatars
     * const Avatars = await prisma.avatars.create({
     *   data: {
     *     // ... data to create a Avatars
     *   }
     * })
     * 
    **/
    create<T extends AvatarsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, AvatarsCreateArgs<ExtArgs>>
    ): Prisma__AvatarsClient<$Result.GetResult<Prisma.$AvatarsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Avatars.
     *     @param {AvatarsCreateManyArgs} args - Arguments to create many Avatars.
     *     @example
     *     // Create many Avatars
     *     const avatars = await prisma.avatars.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends AvatarsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AvatarsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Avatars.
     * @param {AvatarsDeleteArgs} args - Arguments to delete one Avatars.
     * @example
     * // Delete one Avatars
     * const Avatars = await prisma.avatars.delete({
     *   where: {
     *     // ... filter to delete one Avatars
     *   }
     * })
     * 
    **/
    delete<T extends AvatarsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, AvatarsDeleteArgs<ExtArgs>>
    ): Prisma__AvatarsClient<$Result.GetResult<Prisma.$AvatarsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Avatars.
     * @param {AvatarsUpdateArgs} args - Arguments to update one Avatars.
     * @example
     * // Update one Avatars
     * const avatars = await prisma.avatars.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AvatarsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, AvatarsUpdateArgs<ExtArgs>>
    ): Prisma__AvatarsClient<$Result.GetResult<Prisma.$AvatarsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Avatars.
     * @param {AvatarsDeleteManyArgs} args - Arguments to filter Avatars to delete.
     * @example
     * // Delete a few Avatars
     * const { count } = await prisma.avatars.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AvatarsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AvatarsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Avatars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Avatars
     * const avatars = await prisma.avatars.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AvatarsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, AvatarsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Avatars.
     * @param {AvatarsUpsertArgs} args - Arguments to update or create a Avatars.
     * @example
     * // Update or create a Avatars
     * const avatars = await prisma.avatars.upsert({
     *   create: {
     *     // ... data to create a Avatars
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Avatars we want to update
     *   }
     * })
    **/
    upsert<T extends AvatarsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, AvatarsUpsertArgs<ExtArgs>>
    ): Prisma__AvatarsClient<$Result.GetResult<Prisma.$AvatarsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Avatars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarsCountArgs} args - Arguments to filter Avatars to count.
     * @example
     * // Count the number of Avatars
     * const count = await prisma.avatars.count({
     *   where: {
     *     // ... the filter for the Avatars we want to count
     *   }
     * })
    **/
    count<T extends AvatarsCountArgs>(
      args?: Subset<T, AvatarsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AvatarsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Avatars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AvatarsAggregateArgs>(args: Subset<T, AvatarsAggregateArgs>): Prisma.PrismaPromise<GetAvatarsAggregateType<T>>

    /**
     * Group by Avatars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AvatarsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AvatarsGroupByArgs['orderBy'] }
        : { orderBy?: AvatarsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AvatarsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAvatarsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Avatars model
   */
  readonly fields: AvatarsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Avatars.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AvatarsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Avatars model
   */ 
  interface AvatarsFieldRefs {
    readonly id: FieldRef<"Avatars", 'String'>
    readonly public_id: FieldRef<"Avatars", 'String'>
    readonly url: FieldRef<"Avatars", 'String'>
    readonly userId: FieldRef<"Avatars", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Avatars findUnique
   */
  export type AvatarsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatars
     */
    select?: AvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AvatarsInclude<ExtArgs> | null
    /**
     * Filter, which Avatars to fetch.
     */
    where: AvatarsWhereUniqueInput
  }


  /**
   * Avatars findUniqueOrThrow
   */
  export type AvatarsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatars
     */
    select?: AvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AvatarsInclude<ExtArgs> | null
    /**
     * Filter, which Avatars to fetch.
     */
    where: AvatarsWhereUniqueInput
  }


  /**
   * Avatars findFirst
   */
  export type AvatarsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatars
     */
    select?: AvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AvatarsInclude<ExtArgs> | null
    /**
     * Filter, which Avatars to fetch.
     */
    where?: AvatarsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avatars to fetch.
     */
    orderBy?: AvatarsOrderByWithRelationInput | AvatarsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Avatars.
     */
    cursor?: AvatarsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avatars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avatars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Avatars.
     */
    distinct?: AvatarsScalarFieldEnum | AvatarsScalarFieldEnum[]
  }


  /**
   * Avatars findFirstOrThrow
   */
  export type AvatarsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatars
     */
    select?: AvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AvatarsInclude<ExtArgs> | null
    /**
     * Filter, which Avatars to fetch.
     */
    where?: AvatarsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avatars to fetch.
     */
    orderBy?: AvatarsOrderByWithRelationInput | AvatarsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Avatars.
     */
    cursor?: AvatarsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avatars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avatars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Avatars.
     */
    distinct?: AvatarsScalarFieldEnum | AvatarsScalarFieldEnum[]
  }


  /**
   * Avatars findMany
   */
  export type AvatarsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatars
     */
    select?: AvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AvatarsInclude<ExtArgs> | null
    /**
     * Filter, which Avatars to fetch.
     */
    where?: AvatarsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avatars to fetch.
     */
    orderBy?: AvatarsOrderByWithRelationInput | AvatarsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Avatars.
     */
    cursor?: AvatarsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avatars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avatars.
     */
    skip?: number
    distinct?: AvatarsScalarFieldEnum | AvatarsScalarFieldEnum[]
  }


  /**
   * Avatars create
   */
  export type AvatarsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatars
     */
    select?: AvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AvatarsInclude<ExtArgs> | null
    /**
     * The data needed to create a Avatars.
     */
    data: XOR<AvatarsCreateInput, AvatarsUncheckedCreateInput>
  }


  /**
   * Avatars createMany
   */
  export type AvatarsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Avatars.
     */
    data: AvatarsCreateManyInput | AvatarsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Avatars update
   */
  export type AvatarsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatars
     */
    select?: AvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AvatarsInclude<ExtArgs> | null
    /**
     * The data needed to update a Avatars.
     */
    data: XOR<AvatarsUpdateInput, AvatarsUncheckedUpdateInput>
    /**
     * Choose, which Avatars to update.
     */
    where: AvatarsWhereUniqueInput
  }


  /**
   * Avatars updateMany
   */
  export type AvatarsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Avatars.
     */
    data: XOR<AvatarsUpdateManyMutationInput, AvatarsUncheckedUpdateManyInput>
    /**
     * Filter which Avatars to update
     */
    where?: AvatarsWhereInput
  }


  /**
   * Avatars upsert
   */
  export type AvatarsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatars
     */
    select?: AvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AvatarsInclude<ExtArgs> | null
    /**
     * The filter to search for the Avatars to update in case it exists.
     */
    where: AvatarsWhereUniqueInput
    /**
     * In case the Avatars found by the `where` argument doesn't exist, create a new Avatars with this data.
     */
    create: XOR<AvatarsCreateInput, AvatarsUncheckedCreateInput>
    /**
     * In case the Avatars was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AvatarsUpdateInput, AvatarsUncheckedUpdateInput>
  }


  /**
   * Avatars delete
   */
  export type AvatarsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatars
     */
    select?: AvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AvatarsInclude<ExtArgs> | null
    /**
     * Filter which Avatars to delete.
     */
    where: AvatarsWhereUniqueInput
  }


  /**
   * Avatars deleteMany
   */
  export type AvatarsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Avatars to delete
     */
    where?: AvatarsWhereInput
  }


  /**
   * Avatars without action
   */
  export type AvatarsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatars
     */
    select?: AvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AvatarsInclude<ExtArgs> | null
  }



  /**
   * Model SubAvatars
   */

  export type AggregateSubAvatars = {
    _count: SubAvatarsCountAggregateOutputType | null
    _min: SubAvatarsMinAggregateOutputType | null
    _max: SubAvatarsMaxAggregateOutputType | null
  }

  export type SubAvatarsMinAggregateOutputType = {
    id: string | null
    public_id: string | null
    url: string | null
    subUserId: string | null
  }

  export type SubAvatarsMaxAggregateOutputType = {
    id: string | null
    public_id: string | null
    url: string | null
    subUserId: string | null
  }

  export type SubAvatarsCountAggregateOutputType = {
    id: number
    public_id: number
    url: number
    subUserId: number
    _all: number
  }


  export type SubAvatarsMinAggregateInputType = {
    id?: true
    public_id?: true
    url?: true
    subUserId?: true
  }

  export type SubAvatarsMaxAggregateInputType = {
    id?: true
    public_id?: true
    url?: true
    subUserId?: true
  }

  export type SubAvatarsCountAggregateInputType = {
    id?: true
    public_id?: true
    url?: true
    subUserId?: true
    _all?: true
  }

  export type SubAvatarsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubAvatars to aggregate.
     */
    where?: SubAvatarsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubAvatars to fetch.
     */
    orderBy?: SubAvatarsOrderByWithRelationInput | SubAvatarsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubAvatarsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubAvatars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubAvatars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SubAvatars
    **/
    _count?: true | SubAvatarsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubAvatarsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubAvatarsMaxAggregateInputType
  }

  export type GetSubAvatarsAggregateType<T extends SubAvatarsAggregateArgs> = {
        [P in keyof T & keyof AggregateSubAvatars]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubAvatars[P]>
      : GetScalarType<T[P], AggregateSubAvatars[P]>
  }




  export type SubAvatarsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubAvatarsWhereInput
    orderBy?: SubAvatarsOrderByWithAggregationInput | SubAvatarsOrderByWithAggregationInput[]
    by: SubAvatarsScalarFieldEnum[] | SubAvatarsScalarFieldEnum
    having?: SubAvatarsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubAvatarsCountAggregateInputType | true
    _min?: SubAvatarsMinAggregateInputType
    _max?: SubAvatarsMaxAggregateInputType
  }

  export type SubAvatarsGroupByOutputType = {
    id: string
    public_id: string
    url: string
    subUserId: string
    _count: SubAvatarsCountAggregateOutputType | null
    _min: SubAvatarsMinAggregateOutputType | null
    _max: SubAvatarsMaxAggregateOutputType | null
  }

  type GetSubAvatarsGroupByPayload<T extends SubAvatarsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubAvatarsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubAvatarsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubAvatarsGroupByOutputType[P]>
            : GetScalarType<T[P], SubAvatarsGroupByOutputType[P]>
        }
      >
    >


  export type SubAvatarsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    public_id?: boolean
    url?: boolean
    subUserId?: boolean
    sub_user?: boolean | SubUserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subAvatars"]>

  export type SubAvatarsSelectScalar = {
    id?: boolean
    public_id?: boolean
    url?: boolean
    subUserId?: boolean
  }

  export type SubAvatarsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sub_user?: boolean | SubUserDefaultArgs<ExtArgs>
  }


  export type $SubAvatarsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SubAvatars"
    objects: {
      sub_user: Prisma.$SubUserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      public_id: string
      url: string
      subUserId: string
    }, ExtArgs["result"]["subAvatars"]>
    composites: {}
  }


  type SubAvatarsGetPayload<S extends boolean | null | undefined | SubAvatarsDefaultArgs> = $Result.GetResult<Prisma.$SubAvatarsPayload, S>

  type SubAvatarsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SubAvatarsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SubAvatarsCountAggregateInputType | true
    }

  export interface SubAvatarsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SubAvatars'], meta: { name: 'SubAvatars' } }
    /**
     * Find zero or one SubAvatars that matches the filter.
     * @param {SubAvatarsFindUniqueArgs} args - Arguments to find a SubAvatars
     * @example
     * // Get one SubAvatars
     * const subAvatars = await prisma.subAvatars.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends SubAvatarsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, SubAvatarsFindUniqueArgs<ExtArgs>>
    ): Prisma__SubAvatarsClient<$Result.GetResult<Prisma.$SubAvatarsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one SubAvatars that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {SubAvatarsFindUniqueOrThrowArgs} args - Arguments to find a SubAvatars
     * @example
     * // Get one SubAvatars
     * const subAvatars = await prisma.subAvatars.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends SubAvatarsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, SubAvatarsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__SubAvatarsClient<$Result.GetResult<Prisma.$SubAvatarsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first SubAvatars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubAvatarsFindFirstArgs} args - Arguments to find a SubAvatars
     * @example
     * // Get one SubAvatars
     * const subAvatars = await prisma.subAvatars.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends SubAvatarsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, SubAvatarsFindFirstArgs<ExtArgs>>
    ): Prisma__SubAvatarsClient<$Result.GetResult<Prisma.$SubAvatarsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first SubAvatars that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubAvatarsFindFirstOrThrowArgs} args - Arguments to find a SubAvatars
     * @example
     * // Get one SubAvatars
     * const subAvatars = await prisma.subAvatars.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends SubAvatarsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, SubAvatarsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__SubAvatarsClient<$Result.GetResult<Prisma.$SubAvatarsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more SubAvatars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubAvatarsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SubAvatars
     * const subAvatars = await prisma.subAvatars.findMany()
     * 
     * // Get first 10 SubAvatars
     * const subAvatars = await prisma.subAvatars.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subAvatarsWithIdOnly = await prisma.subAvatars.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends SubAvatarsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SubAvatarsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubAvatarsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a SubAvatars.
     * @param {SubAvatarsCreateArgs} args - Arguments to create a SubAvatars.
     * @example
     * // Create one SubAvatars
     * const SubAvatars = await prisma.subAvatars.create({
     *   data: {
     *     // ... data to create a SubAvatars
     *   }
     * })
     * 
    **/
    create<T extends SubAvatarsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, SubAvatarsCreateArgs<ExtArgs>>
    ): Prisma__SubAvatarsClient<$Result.GetResult<Prisma.$SubAvatarsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many SubAvatars.
     *     @param {SubAvatarsCreateManyArgs} args - Arguments to create many SubAvatars.
     *     @example
     *     // Create many SubAvatars
     *     const subAvatars = await prisma.subAvatars.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends SubAvatarsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SubAvatarsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SubAvatars.
     * @param {SubAvatarsDeleteArgs} args - Arguments to delete one SubAvatars.
     * @example
     * // Delete one SubAvatars
     * const SubAvatars = await prisma.subAvatars.delete({
     *   where: {
     *     // ... filter to delete one SubAvatars
     *   }
     * })
     * 
    **/
    delete<T extends SubAvatarsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, SubAvatarsDeleteArgs<ExtArgs>>
    ): Prisma__SubAvatarsClient<$Result.GetResult<Prisma.$SubAvatarsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one SubAvatars.
     * @param {SubAvatarsUpdateArgs} args - Arguments to update one SubAvatars.
     * @example
     * // Update one SubAvatars
     * const subAvatars = await prisma.subAvatars.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends SubAvatarsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, SubAvatarsUpdateArgs<ExtArgs>>
    ): Prisma__SubAvatarsClient<$Result.GetResult<Prisma.$SubAvatarsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more SubAvatars.
     * @param {SubAvatarsDeleteManyArgs} args - Arguments to filter SubAvatars to delete.
     * @example
     * // Delete a few SubAvatars
     * const { count } = await prisma.subAvatars.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends SubAvatarsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SubAvatarsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SubAvatars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubAvatarsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SubAvatars
     * const subAvatars = await prisma.subAvatars.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends SubAvatarsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, SubAvatarsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SubAvatars.
     * @param {SubAvatarsUpsertArgs} args - Arguments to update or create a SubAvatars.
     * @example
     * // Update or create a SubAvatars
     * const subAvatars = await prisma.subAvatars.upsert({
     *   create: {
     *     // ... data to create a SubAvatars
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SubAvatars we want to update
     *   }
     * })
    **/
    upsert<T extends SubAvatarsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, SubAvatarsUpsertArgs<ExtArgs>>
    ): Prisma__SubAvatarsClient<$Result.GetResult<Prisma.$SubAvatarsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of SubAvatars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubAvatarsCountArgs} args - Arguments to filter SubAvatars to count.
     * @example
     * // Count the number of SubAvatars
     * const count = await prisma.subAvatars.count({
     *   where: {
     *     // ... the filter for the SubAvatars we want to count
     *   }
     * })
    **/
    count<T extends SubAvatarsCountArgs>(
      args?: Subset<T, SubAvatarsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubAvatarsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SubAvatars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubAvatarsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubAvatarsAggregateArgs>(args: Subset<T, SubAvatarsAggregateArgs>): Prisma.PrismaPromise<GetSubAvatarsAggregateType<T>>

    /**
     * Group by SubAvatars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubAvatarsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubAvatarsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubAvatarsGroupByArgs['orderBy'] }
        : { orderBy?: SubAvatarsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubAvatarsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubAvatarsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SubAvatars model
   */
  readonly fields: SubAvatarsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SubAvatars.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubAvatarsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    sub_user<T extends SubUserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SubUserDefaultArgs<ExtArgs>>): Prisma__SubUserClient<$Result.GetResult<Prisma.$SubUserPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the SubAvatars model
   */ 
  interface SubAvatarsFieldRefs {
    readonly id: FieldRef<"SubAvatars", 'String'>
    readonly public_id: FieldRef<"SubAvatars", 'String'>
    readonly url: FieldRef<"SubAvatars", 'String'>
    readonly subUserId: FieldRef<"SubAvatars", 'String'>
  }
    

  // Custom InputTypes

  /**
   * SubAvatars findUnique
   */
  export type SubAvatarsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubAvatars
     */
    select?: SubAvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubAvatarsInclude<ExtArgs> | null
    /**
     * Filter, which SubAvatars to fetch.
     */
    where: SubAvatarsWhereUniqueInput
  }


  /**
   * SubAvatars findUniqueOrThrow
   */
  export type SubAvatarsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubAvatars
     */
    select?: SubAvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubAvatarsInclude<ExtArgs> | null
    /**
     * Filter, which SubAvatars to fetch.
     */
    where: SubAvatarsWhereUniqueInput
  }


  /**
   * SubAvatars findFirst
   */
  export type SubAvatarsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubAvatars
     */
    select?: SubAvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubAvatarsInclude<ExtArgs> | null
    /**
     * Filter, which SubAvatars to fetch.
     */
    where?: SubAvatarsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubAvatars to fetch.
     */
    orderBy?: SubAvatarsOrderByWithRelationInput | SubAvatarsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubAvatars.
     */
    cursor?: SubAvatarsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubAvatars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubAvatars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubAvatars.
     */
    distinct?: SubAvatarsScalarFieldEnum | SubAvatarsScalarFieldEnum[]
  }


  /**
   * SubAvatars findFirstOrThrow
   */
  export type SubAvatarsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubAvatars
     */
    select?: SubAvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubAvatarsInclude<ExtArgs> | null
    /**
     * Filter, which SubAvatars to fetch.
     */
    where?: SubAvatarsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubAvatars to fetch.
     */
    orderBy?: SubAvatarsOrderByWithRelationInput | SubAvatarsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubAvatars.
     */
    cursor?: SubAvatarsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubAvatars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubAvatars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubAvatars.
     */
    distinct?: SubAvatarsScalarFieldEnum | SubAvatarsScalarFieldEnum[]
  }


  /**
   * SubAvatars findMany
   */
  export type SubAvatarsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubAvatars
     */
    select?: SubAvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubAvatarsInclude<ExtArgs> | null
    /**
     * Filter, which SubAvatars to fetch.
     */
    where?: SubAvatarsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubAvatars to fetch.
     */
    orderBy?: SubAvatarsOrderByWithRelationInput | SubAvatarsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SubAvatars.
     */
    cursor?: SubAvatarsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubAvatars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubAvatars.
     */
    skip?: number
    distinct?: SubAvatarsScalarFieldEnum | SubAvatarsScalarFieldEnum[]
  }


  /**
   * SubAvatars create
   */
  export type SubAvatarsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubAvatars
     */
    select?: SubAvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubAvatarsInclude<ExtArgs> | null
    /**
     * The data needed to create a SubAvatars.
     */
    data: XOR<SubAvatarsCreateInput, SubAvatarsUncheckedCreateInput>
  }


  /**
   * SubAvatars createMany
   */
  export type SubAvatarsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SubAvatars.
     */
    data: SubAvatarsCreateManyInput | SubAvatarsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * SubAvatars update
   */
  export type SubAvatarsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubAvatars
     */
    select?: SubAvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubAvatarsInclude<ExtArgs> | null
    /**
     * The data needed to update a SubAvatars.
     */
    data: XOR<SubAvatarsUpdateInput, SubAvatarsUncheckedUpdateInput>
    /**
     * Choose, which SubAvatars to update.
     */
    where: SubAvatarsWhereUniqueInput
  }


  /**
   * SubAvatars updateMany
   */
  export type SubAvatarsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SubAvatars.
     */
    data: XOR<SubAvatarsUpdateManyMutationInput, SubAvatarsUncheckedUpdateManyInput>
    /**
     * Filter which SubAvatars to update
     */
    where?: SubAvatarsWhereInput
  }


  /**
   * SubAvatars upsert
   */
  export type SubAvatarsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubAvatars
     */
    select?: SubAvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubAvatarsInclude<ExtArgs> | null
    /**
     * The filter to search for the SubAvatars to update in case it exists.
     */
    where: SubAvatarsWhereUniqueInput
    /**
     * In case the SubAvatars found by the `where` argument doesn't exist, create a new SubAvatars with this data.
     */
    create: XOR<SubAvatarsCreateInput, SubAvatarsUncheckedCreateInput>
    /**
     * In case the SubAvatars was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubAvatarsUpdateInput, SubAvatarsUncheckedUpdateInput>
  }


  /**
   * SubAvatars delete
   */
  export type SubAvatarsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubAvatars
     */
    select?: SubAvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubAvatarsInclude<ExtArgs> | null
    /**
     * Filter which SubAvatars to delete.
     */
    where: SubAvatarsWhereUniqueInput
  }


  /**
   * SubAvatars deleteMany
   */
  export type SubAvatarsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubAvatars to delete
     */
    where?: SubAvatarsWhereInput
  }


  /**
   * SubAvatars without action
   */
  export type SubAvatarsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubAvatars
     */
    select?: SubAvatarsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubAvatarsInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const TbChiNhanhScalarFieldEnum: {
    id: 'id',
    MaAdmin: 'MaAdmin',
    TenChiNhanh: 'TenChiNhanh',
    SDTChiNhanh: 'SDTChiNhanh',
    DiaChiChiNhanh: 'DiaChiChiNhanh'
  };

  export type TbChiNhanhScalarFieldEnum = (typeof TbChiNhanhScalarFieldEnum)[keyof typeof TbChiNhanhScalarFieldEnum]


  export const TbChiTietDichVuDatChoScalarFieldEnum: {
    id: 'id',
    MaDatCho: 'MaDatCho',
    MaDichVu: 'MaDichVu',
    MaHoaDon: 'MaHoaDon',
    MoTa: 'MoTa',
    createAt: 'createAt'
  };

  export type TbChiTietDichVuDatChoScalarFieldEnum = (typeof TbChiTietDichVuDatChoScalarFieldEnum)[keyof typeof TbChiTietDichVuDatChoScalarFieldEnum]


  export const TbDatChoScalarFieldEnum: {
    id: 'id',
    MaKH: 'MaKH',
    MaPhong: 'MaPhong',
    NgayDatCho: 'NgayDatCho',
    NgayNhanPhong: 'NgayNhanPhong',
    NgayTraPhong: 'NgayTraPhong',
    SLNguoiLonDiKem: 'SLNguoiLonDiKem',
    SLTreEmDiKem: 'SLTreEmDiKem',
    LoaiKhach: 'LoaiKhach',
    StatusThongBao: 'StatusThongBao',
    createAt: 'createAt',
    updateAt: 'updateAt'
  };

  export type TbDatChoScalarFieldEnum = (typeof TbDatChoScalarFieldEnum)[keyof typeof TbDatChoScalarFieldEnum]


  export const TbDichVuScalarFieldEnum: {
    id: 'id',
    MaNhomDichVu: 'MaNhomDichVu',
    TenDichVu: 'TenDichVu',
    DonViTinh: 'DonViTinh',
    GiaVon: 'GiaVon',
    GiaBan: 'GiaBan',
    ThoiLuong: 'ThoiLuong',
    StatusThongBao: 'StatusThongBao',
    createAt: 'createAt',
    updateAt: 'updateAt'
  };

  export type TbDichVuScalarFieldEnum = (typeof TbDichVuScalarFieldEnum)[keyof typeof TbDichVuScalarFieldEnum]


  export const TbNhomDichVuScalarFieldEnum: {
    id: 'id',
    MaKhachSan: 'MaKhachSan',
    TenNhomDichVu: 'TenNhomDichVu'
  };

  export type TbNhomDichVuScalarFieldEnum = (typeof TbNhomDichVuScalarFieldEnum)[keyof typeof TbNhomDichVuScalarFieldEnum]


  export const TbHangHoaScalarFieldEnum: {
    id: 'id',
    MaNhomHangHoa: 'MaNhomHangHoa',
    TenHangHoa: 'TenHangHoa',
    DonViTinh: 'DonViTinh',
    GiaGocHangHoa: 'GiaGocHangHoa',
    GiaBanHangHoa: 'GiaBanHangHoa',
    SLTonKho: 'SLTonKho',
    DinhMucTonItNhat: 'DinhMucTonItNhat',
    DinhMucTonNhieuNhat: 'DinhMucTonNhieuNhat',
    TrongLuong: 'TrongLuong',
    MoTa: 'MoTa',
    GhiChu: 'GhiChu',
    ViTri: 'ViTri',
    StatusThongBao: 'StatusThongBao'
  };

  export type TbHangHoaScalarFieldEnum = (typeof TbHangHoaScalarFieldEnum)[keyof typeof TbHangHoaScalarFieldEnum]


  export const TbPhieuNhapScalarFieldEnum: {
    id: 'id',
    MaKhachSan: 'MaKhachSan',
    MaNhaCungCap: 'MaNhaCungCap',
    CacKhoanChiPhiPhatSinhHangHoa: 'CacKhoanChiPhiPhatSinhHangHoa',
    TongTienCanTra: 'TongTienCanTra',
    TienDaTra: 'TienDaTra',
    Status: 'Status',
    StatusThongBao: 'StatusThongBao',
    createAt: 'createAt',
    updateAt: 'updateAt'
  };

  export type TbPhieuNhapScalarFieldEnum = (typeof TbPhieuNhapScalarFieldEnum)[keyof typeof TbPhieuNhapScalarFieldEnum]


  export const TbChiTietNoiDungNhapScalarFieldEnum: {
    id: 'id',
    MaHangHoa: 'MaHangHoa',
    MaPhieuNhap: 'MaPhieuNhap',
    ThanhTien: 'ThanhTien',
    SLNhap: 'SLNhap',
    GiamGia: 'GiamGia',
    createAt: 'createAt',
    updateAt: 'updateAt'
  };

  export type TbChiTietNoiDungNhapScalarFieldEnum = (typeof TbChiTietNoiDungNhapScalarFieldEnum)[keyof typeof TbChiTietNoiDungNhapScalarFieldEnum]


  export const TbNhomHangHoaScalarFieldEnum: {
    id: 'id',
    MaKhachSan: 'MaKhachSan',
    TenNhomHangHoa: 'TenNhomHangHoa'
  };

  export type TbNhomHangHoaScalarFieldEnum = (typeof TbNhomHangHoaScalarFieldEnum)[keyof typeof TbNhomHangHoaScalarFieldEnum]


  export const TbHoaDonScalarFieldEnum: {
    id: 'id',
    MaTaiKhoanSub: 'MaTaiKhoanSub',
    MaKhachSan: 'MaKhachSan',
    TongHoaDon: 'TongHoaDon',
    KhachThanhToan: 'KhachThanhToan',
    NgayThanhToan: 'NgayThanhToan',
    GhiChu: 'GhiChu',
    Status: 'Status',
    StatusThongBao: 'StatusThongBao',
    createAt: 'createAt',
    updateAt: 'updateAt',
    PhuongThucThanhToan: 'PhuongThucThanhToan'
  };

  export type TbHoaDonScalarFieldEnum = (typeof TbHoaDonScalarFieldEnum)[keyof typeof TbHoaDonScalarFieldEnum]


  export const TbKhachHangScalarFieldEnum: {
    id: 'id',
    TenKH: 'TenKH',
    SDTKH: 'SDTKH',
    EmailKH: 'EmailKH',
    createAt: 'createAt',
    updateAt: 'updateAt'
  };

  export type TbKhachHangScalarFieldEnum = (typeof TbKhachHangScalarFieldEnum)[keyof typeof TbKhachHangScalarFieldEnum]


  export const TbKhachSanScalarFieldEnum: {
    id: 'id',
    MaChiNhanh: 'MaChiNhanh',
    TenKhachSan: 'TenKhachSan',
    DiaChiKhachSan: 'DiaChiKhachSan',
    SDTKhachSan: 'SDTKhachSan',
    EmailKhachSan: 'EmailKhachSan'
  };

  export type TbKhachSanScalarFieldEnum = (typeof TbKhachSanScalarFieldEnum)[keyof typeof TbKhachSanScalarFieldEnum]


  export const TbLoaiPhongScalarFieldEnum: {
    id: 'id',
    MaKhachSan: 'MaKhachSan',
    TenLoaiPhong: 'TenLoaiPhong',
    GiaTheoGio: 'GiaTheoGio',
    GiaTheoNgay: 'GiaTheoNgay'
  };

  export type TbLoaiPhongScalarFieldEnum = (typeof TbLoaiPhongScalarFieldEnum)[keyof typeof TbLoaiPhongScalarFieldEnum]


  export const TbCacLinkAnhLoaiPhongScalarFieldEnum: {
    id: 'id',
    MaLoaiPhong: 'MaLoaiPhong',
    LinkAnh: 'LinkAnh'
  };

  export type TbCacLinkAnhLoaiPhongScalarFieldEnum = (typeof TbCacLinkAnhLoaiPhongScalarFieldEnum)[keyof typeof TbCacLinkAnhLoaiPhongScalarFieldEnum]


  export const TbCacLinkAnhDichVuScalarFieldEnum: {
    id: 'id',
    MaDichVu: 'MaDichVu',
    LinkAnh: 'LinkAnh'
  };

  export type TbCacLinkAnhDichVuScalarFieldEnum = (typeof TbCacLinkAnhDichVuScalarFieldEnum)[keyof typeof TbCacLinkAnhDichVuScalarFieldEnum]


  export const TbCacLinkAnhHangHoaScalarFieldEnum: {
    id: 'id',
    MaHangHoa: 'MaHangHoa',
    LinkAnh: 'LinkAnh'
  };

  export type TbCacLinkAnhHangHoaScalarFieldEnum = (typeof TbCacLinkAnhHangHoaScalarFieldEnum)[keyof typeof TbCacLinkAnhHangHoaScalarFieldEnum]


  export const TbCacLinkAnhPhongScalarFieldEnum: {
    id: 'id',
    MaPhong: 'MaPhong',
    LinkAnh: 'LinkAnh'
  };

  export type TbCacLinkAnhPhongScalarFieldEnum = (typeof TbCacLinkAnhPhongScalarFieldEnum)[keyof typeof TbCacLinkAnhPhongScalarFieldEnum]


  export const TbNhaCungCapScalarFieldEnum: {
    id: 'id',
    TenNhaCungCap: 'TenNhaCungCap',
    SDTNhaCungCap: 'SDTNhaCungCap',
    EmailNhaCungCap: 'EmailNhaCungCap'
  };

  export type TbNhaCungCapScalarFieldEnum = (typeof TbNhaCungCapScalarFieldEnum)[keyof typeof TbNhaCungCapScalarFieldEnum]


  export const TbPhongScalarFieldEnum: {
    id: 'id',
    MaLoaiPhong: 'MaLoaiPhong',
    MaNhomKhuVucPhong: 'MaNhomKhuVucPhong',
    TenPhong: 'TenPhong',
    GhiChu: 'GhiChu',
    Status: 'Status',
    StatusDatCho: 'StatusDatCho',
    StatusThongBao: 'StatusThongBao',
    createAt: 'createAt',
    updateAt: 'updateAt'
  };

  export type TbPhongScalarFieldEnum = (typeof TbPhongScalarFieldEnum)[keyof typeof TbPhongScalarFieldEnum]


  export const TbNhomKhuVucPhongScalarFieldEnum: {
    id: 'id',
    MaKhachSan: 'MaKhachSan',
    TenNhomKhuVuc: 'TenNhomKhuVuc',
    GhiChu: 'GhiChu'
  };

  export type TbNhomKhuVucPhongScalarFieldEnum = (typeof TbNhomKhuVucPhongScalarFieldEnum)[keyof typeof TbNhomKhuVucPhongScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    phone_number: 'phone_number',
    address: 'address',
    password: 'password',
    email: 'email',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    role: 'role'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const SubUserScalarFieldEnum: {
    id: 'id',
    MaKhachSan: 'MaKhachSan',
    name: 'name',
    phone_number: 'phone_number',
    address: 'address',
    password: 'password',
    email: 'email',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    role: 'role'
  };

  export type SubUserScalarFieldEnum = (typeof SubUserScalarFieldEnum)[keyof typeof SubUserScalarFieldEnum]


  export const AvatarsScalarFieldEnum: {
    id: 'id',
    public_id: 'public_id',
    url: 'url',
    userId: 'userId'
  };

  export type AvatarsScalarFieldEnum = (typeof AvatarsScalarFieldEnum)[keyof typeof AvatarsScalarFieldEnum]


  export const SubAvatarsScalarFieldEnum: {
    id: 'id',
    public_id: 'public_id',
    url: 'url',
    subUserId: 'subUserId'
  };

  export type SubAvatarsScalarFieldEnum = (typeof SubAvatarsScalarFieldEnum)[keyof typeof SubAvatarsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'loaikhach_Status'
   */
  export type Enumloaikhach_StatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'loaikhach_Status'>
    


  /**
   * Reference to a field of type 'thongbao_Status'
   */
  export type Enumthongbao_StatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'thongbao_Status'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'tbphieunhap_Status'
   */
  export type Enumtbphieunhap_StatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tbphieunhap_Status'>
    


  /**
   * Reference to a field of type 'tbhoadon_Status'
   */
  export type Enumtbhoadon_StatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tbhoadon_Status'>
    


  /**
   * Reference to a field of type 'tbhoadon_PhuongThucThanhToan'
   */
  export type Enumtbhoadon_PhuongThucThanhToanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tbhoadon_PhuongThucThanhToan'>
    


  /**
   * Reference to a field of type 'tbphong_Status'
   */
  export type Enumtbphong_StatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tbphong_Status'>
    


  /**
   * Reference to a field of type 'tbdatcho_Status'
   */
  export type Enumtbdatcho_StatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tbdatcho_Status'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'tbtaikhoan_VaiTro'
   */
  export type Enumtbtaikhoan_VaiTroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tbtaikhoan_VaiTro'>
    


  /**
   * Reference to a field of type 'tbtaikhoancon_VaiTro'
   */
  export type Enumtbtaikhoancon_VaiTroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tbtaikhoancon_VaiTro'>
    
  /**
   * Deep Input Types
   */


  export type TbChiNhanhWhereInput = {
    AND?: TbChiNhanhWhereInput | TbChiNhanhWhereInput[]
    OR?: TbChiNhanhWhereInput[]
    NOT?: TbChiNhanhWhereInput | TbChiNhanhWhereInput[]
    id?: StringFilter<"TbChiNhanh"> | string
    MaAdmin?: StringFilter<"TbChiNhanh"> | string
    TenChiNhanh?: StringFilter<"TbChiNhanh"> | string
    SDTChiNhanh?: StringNullableFilter<"TbChiNhanh"> | string | null
    DiaChiChiNhanh?: StringNullableFilter<"TbChiNhanh"> | string | null
    KhachSan?: TbKhachSanListRelationFilter
    TaiKhoanAdmin?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type TbChiNhanhOrderByWithRelationInput = {
    id?: SortOrder
    MaAdmin?: SortOrder
    TenChiNhanh?: SortOrder
    SDTChiNhanh?: SortOrderInput | SortOrder
    DiaChiChiNhanh?: SortOrderInput | SortOrder
    KhachSan?: TbKhachSanOrderByRelationAggregateInput
    TaiKhoanAdmin?: UserOrderByWithRelationInput
  }

  export type TbChiNhanhWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbChiNhanhWhereInput | TbChiNhanhWhereInput[]
    OR?: TbChiNhanhWhereInput[]
    NOT?: TbChiNhanhWhereInput | TbChiNhanhWhereInput[]
    MaAdmin?: StringFilter<"TbChiNhanh"> | string
    TenChiNhanh?: StringFilter<"TbChiNhanh"> | string
    SDTChiNhanh?: StringNullableFilter<"TbChiNhanh"> | string | null
    DiaChiChiNhanh?: StringNullableFilter<"TbChiNhanh"> | string | null
    KhachSan?: TbKhachSanListRelationFilter
    TaiKhoanAdmin?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type TbChiNhanhOrderByWithAggregationInput = {
    id?: SortOrder
    MaAdmin?: SortOrder
    TenChiNhanh?: SortOrder
    SDTChiNhanh?: SortOrderInput | SortOrder
    DiaChiChiNhanh?: SortOrderInput | SortOrder
    _count?: TbChiNhanhCountOrderByAggregateInput
    _max?: TbChiNhanhMaxOrderByAggregateInput
    _min?: TbChiNhanhMinOrderByAggregateInput
  }

  export type TbChiNhanhScalarWhereWithAggregatesInput = {
    AND?: TbChiNhanhScalarWhereWithAggregatesInput | TbChiNhanhScalarWhereWithAggregatesInput[]
    OR?: TbChiNhanhScalarWhereWithAggregatesInput[]
    NOT?: TbChiNhanhScalarWhereWithAggregatesInput | TbChiNhanhScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbChiNhanh"> | string
    MaAdmin?: StringWithAggregatesFilter<"TbChiNhanh"> | string
    TenChiNhanh?: StringWithAggregatesFilter<"TbChiNhanh"> | string
    SDTChiNhanh?: StringNullableWithAggregatesFilter<"TbChiNhanh"> | string | null
    DiaChiChiNhanh?: StringNullableWithAggregatesFilter<"TbChiNhanh"> | string | null
  }

  export type TbChiTietDichVuDatChoWhereInput = {
    AND?: TbChiTietDichVuDatChoWhereInput | TbChiTietDichVuDatChoWhereInput[]
    OR?: TbChiTietDichVuDatChoWhereInput[]
    NOT?: TbChiTietDichVuDatChoWhereInput | TbChiTietDichVuDatChoWhereInput[]
    id?: StringFilter<"TbChiTietDichVuDatCho"> | string
    MaDatCho?: StringFilter<"TbChiTietDichVuDatCho"> | string
    MaDichVu?: StringNullableFilter<"TbChiTietDichVuDatCho"> | string | null
    MaHoaDon?: StringNullableFilter<"TbChiTietDichVuDatCho"> | string | null
    MoTa?: StringNullableFilter<"TbChiTietDichVuDatCho"> | string | null
    createAt?: DateTimeFilter<"TbChiTietDichVuDatCho"> | Date | string
    DatCho?: XOR<TbDatChoRelationFilter, TbDatChoWhereInput>
    DichVu?: XOR<TbDichVuNullableRelationFilter, TbDichVuWhereInput> | null
    HoaDon?: XOR<TbHoaDonNullableRelationFilter, TbHoaDonWhereInput> | null
  }

  export type TbChiTietDichVuDatChoOrderByWithRelationInput = {
    id?: SortOrder
    MaDatCho?: SortOrder
    MaDichVu?: SortOrderInput | SortOrder
    MaHoaDon?: SortOrderInput | SortOrder
    MoTa?: SortOrderInput | SortOrder
    createAt?: SortOrder
    DatCho?: TbDatChoOrderByWithRelationInput
    DichVu?: TbDichVuOrderByWithRelationInput
    HoaDon?: TbHoaDonOrderByWithRelationInput
  }

  export type TbChiTietDichVuDatChoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbChiTietDichVuDatChoWhereInput | TbChiTietDichVuDatChoWhereInput[]
    OR?: TbChiTietDichVuDatChoWhereInput[]
    NOT?: TbChiTietDichVuDatChoWhereInput | TbChiTietDichVuDatChoWhereInput[]
    MaDatCho?: StringFilter<"TbChiTietDichVuDatCho"> | string
    MaDichVu?: StringNullableFilter<"TbChiTietDichVuDatCho"> | string | null
    MaHoaDon?: StringNullableFilter<"TbChiTietDichVuDatCho"> | string | null
    MoTa?: StringNullableFilter<"TbChiTietDichVuDatCho"> | string | null
    createAt?: DateTimeFilter<"TbChiTietDichVuDatCho"> | Date | string
    DatCho?: XOR<TbDatChoRelationFilter, TbDatChoWhereInput>
    DichVu?: XOR<TbDichVuNullableRelationFilter, TbDichVuWhereInput> | null
    HoaDon?: XOR<TbHoaDonNullableRelationFilter, TbHoaDonWhereInput> | null
  }, "id">

  export type TbChiTietDichVuDatChoOrderByWithAggregationInput = {
    id?: SortOrder
    MaDatCho?: SortOrder
    MaDichVu?: SortOrderInput | SortOrder
    MaHoaDon?: SortOrderInput | SortOrder
    MoTa?: SortOrderInput | SortOrder
    createAt?: SortOrder
    _count?: TbChiTietDichVuDatChoCountOrderByAggregateInput
    _max?: TbChiTietDichVuDatChoMaxOrderByAggregateInput
    _min?: TbChiTietDichVuDatChoMinOrderByAggregateInput
  }

  export type TbChiTietDichVuDatChoScalarWhereWithAggregatesInput = {
    AND?: TbChiTietDichVuDatChoScalarWhereWithAggregatesInput | TbChiTietDichVuDatChoScalarWhereWithAggregatesInput[]
    OR?: TbChiTietDichVuDatChoScalarWhereWithAggregatesInput[]
    NOT?: TbChiTietDichVuDatChoScalarWhereWithAggregatesInput | TbChiTietDichVuDatChoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbChiTietDichVuDatCho"> | string
    MaDatCho?: StringWithAggregatesFilter<"TbChiTietDichVuDatCho"> | string
    MaDichVu?: StringNullableWithAggregatesFilter<"TbChiTietDichVuDatCho"> | string | null
    MaHoaDon?: StringNullableWithAggregatesFilter<"TbChiTietDichVuDatCho"> | string | null
    MoTa?: StringNullableWithAggregatesFilter<"TbChiTietDichVuDatCho"> | string | null
    createAt?: DateTimeWithAggregatesFilter<"TbChiTietDichVuDatCho"> | Date | string
  }

  export type TbDatChoWhereInput = {
    AND?: TbDatChoWhereInput | TbDatChoWhereInput[]
    OR?: TbDatChoWhereInput[]
    NOT?: TbDatChoWhereInput | TbDatChoWhereInput[]
    id?: StringFilter<"TbDatCho"> | string
    MaKH?: StringFilter<"TbDatCho"> | string
    MaPhong?: StringFilter<"TbDatCho"> | string
    NgayDatCho?: DateTimeFilter<"TbDatCho"> | Date | string
    NgayNhanPhong?: DateTimeFilter<"TbDatCho"> | Date | string
    NgayTraPhong?: DateTimeFilter<"TbDatCho"> | Date | string
    SLNguoiLonDiKem?: IntFilter<"TbDatCho"> | number
    SLTreEmDiKem?: IntFilter<"TbDatCho"> | number
    LoaiKhach?: Enumloaikhach_StatusFilter<"TbDatCho"> | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFilter<"TbDatCho"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbDatCho"> | Date | string
    updateAt?: DateTimeFilter<"TbDatCho"> | Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoListRelationFilter
    KhachHang?: XOR<TbKhachHangRelationFilter, TbKhachHangWhereInput>
    Phong?: XOR<TbPhongRelationFilter, TbPhongWhereInput>
  }

  export type TbDatChoOrderByWithRelationInput = {
    id?: SortOrder
    MaKH?: SortOrder
    MaPhong?: SortOrder
    NgayDatCho?: SortOrder
    NgayNhanPhong?: SortOrder
    NgayTraPhong?: SortOrder
    SLNguoiLonDiKem?: SortOrder
    SLTreEmDiKem?: SortOrder
    LoaiKhach?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoOrderByRelationAggregateInput
    KhachHang?: TbKhachHangOrderByWithRelationInput
    Phong?: TbPhongOrderByWithRelationInput
  }

  export type TbDatChoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbDatChoWhereInput | TbDatChoWhereInput[]
    OR?: TbDatChoWhereInput[]
    NOT?: TbDatChoWhereInput | TbDatChoWhereInput[]
    MaKH?: StringFilter<"TbDatCho"> | string
    MaPhong?: StringFilter<"TbDatCho"> | string
    NgayDatCho?: DateTimeFilter<"TbDatCho"> | Date | string
    NgayNhanPhong?: DateTimeFilter<"TbDatCho"> | Date | string
    NgayTraPhong?: DateTimeFilter<"TbDatCho"> | Date | string
    SLNguoiLonDiKem?: IntFilter<"TbDatCho"> | number
    SLTreEmDiKem?: IntFilter<"TbDatCho"> | number
    LoaiKhach?: Enumloaikhach_StatusFilter<"TbDatCho"> | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFilter<"TbDatCho"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbDatCho"> | Date | string
    updateAt?: DateTimeFilter<"TbDatCho"> | Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoListRelationFilter
    KhachHang?: XOR<TbKhachHangRelationFilter, TbKhachHangWhereInput>
    Phong?: XOR<TbPhongRelationFilter, TbPhongWhereInput>
  }, "id">

  export type TbDatChoOrderByWithAggregationInput = {
    id?: SortOrder
    MaKH?: SortOrder
    MaPhong?: SortOrder
    NgayDatCho?: SortOrder
    NgayNhanPhong?: SortOrder
    NgayTraPhong?: SortOrder
    SLNguoiLonDiKem?: SortOrder
    SLTreEmDiKem?: SortOrder
    LoaiKhach?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    _count?: TbDatChoCountOrderByAggregateInput
    _avg?: TbDatChoAvgOrderByAggregateInput
    _max?: TbDatChoMaxOrderByAggregateInput
    _min?: TbDatChoMinOrderByAggregateInput
    _sum?: TbDatChoSumOrderByAggregateInput
  }

  export type TbDatChoScalarWhereWithAggregatesInput = {
    AND?: TbDatChoScalarWhereWithAggregatesInput | TbDatChoScalarWhereWithAggregatesInput[]
    OR?: TbDatChoScalarWhereWithAggregatesInput[]
    NOT?: TbDatChoScalarWhereWithAggregatesInput | TbDatChoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbDatCho"> | string
    MaKH?: StringWithAggregatesFilter<"TbDatCho"> | string
    MaPhong?: StringWithAggregatesFilter<"TbDatCho"> | string
    NgayDatCho?: DateTimeWithAggregatesFilter<"TbDatCho"> | Date | string
    NgayNhanPhong?: DateTimeWithAggregatesFilter<"TbDatCho"> | Date | string
    NgayTraPhong?: DateTimeWithAggregatesFilter<"TbDatCho"> | Date | string
    SLNguoiLonDiKem?: IntWithAggregatesFilter<"TbDatCho"> | number
    SLTreEmDiKem?: IntWithAggregatesFilter<"TbDatCho"> | number
    LoaiKhach?: Enumloaikhach_StatusWithAggregatesFilter<"TbDatCho"> | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusWithAggregatesFilter<"TbDatCho"> | $Enums.thongbao_Status
    createAt?: DateTimeWithAggregatesFilter<"TbDatCho"> | Date | string
    updateAt?: DateTimeWithAggregatesFilter<"TbDatCho"> | Date | string
  }

  export type TbDichVuWhereInput = {
    AND?: TbDichVuWhereInput | TbDichVuWhereInput[]
    OR?: TbDichVuWhereInput[]
    NOT?: TbDichVuWhereInput | TbDichVuWhereInput[]
    id?: StringFilter<"TbDichVu"> | string
    MaNhomDichVu?: StringFilter<"TbDichVu"> | string
    TenDichVu?: StringFilter<"TbDichVu"> | string
    DonViTinh?: StringNullableFilter<"TbDichVu"> | string | null
    GiaVon?: DecimalFilter<"TbDichVu"> | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFilter<"TbDichVu"> | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFilter<"TbDichVu"> | number
    StatusThongBao?: Enumthongbao_StatusFilter<"TbDichVu"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbDichVu"> | Date | string
    updateAt?: DateTimeFilter<"TbDichVu"> | Date | string
    NhomDichVu?: XOR<TbNhomDichVuRelationFilter, TbNhomDichVuWhereInput>
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoListRelationFilter
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuListRelationFilter
  }

  export type TbDichVuOrderByWithRelationInput = {
    id?: SortOrder
    MaNhomDichVu?: SortOrder
    TenDichVu?: SortOrder
    DonViTinh?: SortOrderInput | SortOrder
    GiaVon?: SortOrder
    GiaBan?: SortOrder
    ThoiLuong?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    NhomDichVu?: TbNhomDichVuOrderByWithRelationInput
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoOrderByRelationAggregateInput
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuOrderByRelationAggregateInput
  }

  export type TbDichVuWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbDichVuWhereInput | TbDichVuWhereInput[]
    OR?: TbDichVuWhereInput[]
    NOT?: TbDichVuWhereInput | TbDichVuWhereInput[]
    MaNhomDichVu?: StringFilter<"TbDichVu"> | string
    TenDichVu?: StringFilter<"TbDichVu"> | string
    DonViTinh?: StringNullableFilter<"TbDichVu"> | string | null
    GiaVon?: DecimalFilter<"TbDichVu"> | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFilter<"TbDichVu"> | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFilter<"TbDichVu"> | number
    StatusThongBao?: Enumthongbao_StatusFilter<"TbDichVu"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbDichVu"> | Date | string
    updateAt?: DateTimeFilter<"TbDichVu"> | Date | string
    NhomDichVu?: XOR<TbNhomDichVuRelationFilter, TbNhomDichVuWhereInput>
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoListRelationFilter
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuListRelationFilter
  }, "id">

  export type TbDichVuOrderByWithAggregationInput = {
    id?: SortOrder
    MaNhomDichVu?: SortOrder
    TenDichVu?: SortOrder
    DonViTinh?: SortOrderInput | SortOrder
    GiaVon?: SortOrder
    GiaBan?: SortOrder
    ThoiLuong?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    _count?: TbDichVuCountOrderByAggregateInput
    _avg?: TbDichVuAvgOrderByAggregateInput
    _max?: TbDichVuMaxOrderByAggregateInput
    _min?: TbDichVuMinOrderByAggregateInput
    _sum?: TbDichVuSumOrderByAggregateInput
  }

  export type TbDichVuScalarWhereWithAggregatesInput = {
    AND?: TbDichVuScalarWhereWithAggregatesInput | TbDichVuScalarWhereWithAggregatesInput[]
    OR?: TbDichVuScalarWhereWithAggregatesInput[]
    NOT?: TbDichVuScalarWhereWithAggregatesInput | TbDichVuScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbDichVu"> | string
    MaNhomDichVu?: StringWithAggregatesFilter<"TbDichVu"> | string
    TenDichVu?: StringWithAggregatesFilter<"TbDichVu"> | string
    DonViTinh?: StringNullableWithAggregatesFilter<"TbDichVu"> | string | null
    GiaVon?: DecimalWithAggregatesFilter<"TbDichVu"> | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalWithAggregatesFilter<"TbDichVu"> | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntWithAggregatesFilter<"TbDichVu"> | number
    StatusThongBao?: Enumthongbao_StatusWithAggregatesFilter<"TbDichVu"> | $Enums.thongbao_Status
    createAt?: DateTimeWithAggregatesFilter<"TbDichVu"> | Date | string
    updateAt?: DateTimeWithAggregatesFilter<"TbDichVu"> | Date | string
  }

  export type TbNhomDichVuWhereInput = {
    AND?: TbNhomDichVuWhereInput | TbNhomDichVuWhereInput[]
    OR?: TbNhomDichVuWhereInput[]
    NOT?: TbNhomDichVuWhereInput | TbNhomDichVuWhereInput[]
    id?: StringFilter<"TbNhomDichVu"> | string
    MaKhachSan?: StringFilter<"TbNhomDichVu"> | string
    TenNhomDichVu?: StringFilter<"TbNhomDichVu"> | string
    DichVu?: TbDichVuListRelationFilter
    KhachSan?: XOR<TbKhachSanRelationFilter, TbKhachSanWhereInput>
  }

  export type TbNhomDichVuOrderByWithRelationInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomDichVu?: SortOrder
    DichVu?: TbDichVuOrderByRelationAggregateInput
    KhachSan?: TbKhachSanOrderByWithRelationInput
  }

  export type TbNhomDichVuWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbNhomDichVuWhereInput | TbNhomDichVuWhereInput[]
    OR?: TbNhomDichVuWhereInput[]
    NOT?: TbNhomDichVuWhereInput | TbNhomDichVuWhereInput[]
    MaKhachSan?: StringFilter<"TbNhomDichVu"> | string
    TenNhomDichVu?: StringFilter<"TbNhomDichVu"> | string
    DichVu?: TbDichVuListRelationFilter
    KhachSan?: XOR<TbKhachSanRelationFilter, TbKhachSanWhereInput>
  }, "id">

  export type TbNhomDichVuOrderByWithAggregationInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomDichVu?: SortOrder
    _count?: TbNhomDichVuCountOrderByAggregateInput
    _max?: TbNhomDichVuMaxOrderByAggregateInput
    _min?: TbNhomDichVuMinOrderByAggregateInput
  }

  export type TbNhomDichVuScalarWhereWithAggregatesInput = {
    AND?: TbNhomDichVuScalarWhereWithAggregatesInput | TbNhomDichVuScalarWhereWithAggregatesInput[]
    OR?: TbNhomDichVuScalarWhereWithAggregatesInput[]
    NOT?: TbNhomDichVuScalarWhereWithAggregatesInput | TbNhomDichVuScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbNhomDichVu"> | string
    MaKhachSan?: StringWithAggregatesFilter<"TbNhomDichVu"> | string
    TenNhomDichVu?: StringWithAggregatesFilter<"TbNhomDichVu"> | string
  }

  export type TbHangHoaWhereInput = {
    AND?: TbHangHoaWhereInput | TbHangHoaWhereInput[]
    OR?: TbHangHoaWhereInput[]
    NOT?: TbHangHoaWhereInput | TbHangHoaWhereInput[]
    id?: StringFilter<"TbHangHoa"> | string
    MaNhomHangHoa?: StringFilter<"TbHangHoa"> | string
    TenHangHoa?: StringFilter<"TbHangHoa"> | string
    DonViTinh?: StringNullableFilter<"TbHangHoa"> | string | null
    GiaGocHangHoa?: DecimalFilter<"TbHangHoa"> | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFilter<"TbHangHoa"> | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFilter<"TbHangHoa"> | number
    DinhMucTonItNhat?: IntNullableFilter<"TbHangHoa"> | number | null
    DinhMucTonNhieuNhat?: IntNullableFilter<"TbHangHoa"> | number | null
    TrongLuong?: StringNullableFilter<"TbHangHoa"> | string | null
    MoTa?: StringNullableFilter<"TbHangHoa"> | string | null
    GhiChu?: StringNullableFilter<"TbHangHoa"> | string | null
    ViTri?: StringNullableFilter<"TbHangHoa"> | string | null
    StatusThongBao?: Enumthongbao_StatusFilter<"TbHangHoa"> | $Enums.thongbao_Status
    NhomHangHoa?: XOR<TbNhomHangHoaRelationFilter, TbNhomHangHoaWhereInput>
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaListRelationFilter
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapListRelationFilter
  }

  export type TbHangHoaOrderByWithRelationInput = {
    id?: SortOrder
    MaNhomHangHoa?: SortOrder
    TenHangHoa?: SortOrder
    DonViTinh?: SortOrderInput | SortOrder
    GiaGocHangHoa?: SortOrder
    GiaBanHangHoa?: SortOrder
    SLTonKho?: SortOrder
    DinhMucTonItNhat?: SortOrderInput | SortOrder
    DinhMucTonNhieuNhat?: SortOrderInput | SortOrder
    TrongLuong?: SortOrderInput | SortOrder
    MoTa?: SortOrderInput | SortOrder
    GhiChu?: SortOrderInput | SortOrder
    ViTri?: SortOrderInput | SortOrder
    StatusThongBao?: SortOrder
    NhomHangHoa?: TbNhomHangHoaOrderByWithRelationInput
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaOrderByRelationAggregateInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapOrderByRelationAggregateInput
  }

  export type TbHangHoaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbHangHoaWhereInput | TbHangHoaWhereInput[]
    OR?: TbHangHoaWhereInput[]
    NOT?: TbHangHoaWhereInput | TbHangHoaWhereInput[]
    MaNhomHangHoa?: StringFilter<"TbHangHoa"> | string
    TenHangHoa?: StringFilter<"TbHangHoa"> | string
    DonViTinh?: StringNullableFilter<"TbHangHoa"> | string | null
    GiaGocHangHoa?: DecimalFilter<"TbHangHoa"> | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFilter<"TbHangHoa"> | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFilter<"TbHangHoa"> | number
    DinhMucTonItNhat?: IntNullableFilter<"TbHangHoa"> | number | null
    DinhMucTonNhieuNhat?: IntNullableFilter<"TbHangHoa"> | number | null
    TrongLuong?: StringNullableFilter<"TbHangHoa"> | string | null
    MoTa?: StringNullableFilter<"TbHangHoa"> | string | null
    GhiChu?: StringNullableFilter<"TbHangHoa"> | string | null
    ViTri?: StringNullableFilter<"TbHangHoa"> | string | null
    StatusThongBao?: Enumthongbao_StatusFilter<"TbHangHoa"> | $Enums.thongbao_Status
    NhomHangHoa?: XOR<TbNhomHangHoaRelationFilter, TbNhomHangHoaWhereInput>
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaListRelationFilter
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapListRelationFilter
  }, "id">

  export type TbHangHoaOrderByWithAggregationInput = {
    id?: SortOrder
    MaNhomHangHoa?: SortOrder
    TenHangHoa?: SortOrder
    DonViTinh?: SortOrderInput | SortOrder
    GiaGocHangHoa?: SortOrder
    GiaBanHangHoa?: SortOrder
    SLTonKho?: SortOrder
    DinhMucTonItNhat?: SortOrderInput | SortOrder
    DinhMucTonNhieuNhat?: SortOrderInput | SortOrder
    TrongLuong?: SortOrderInput | SortOrder
    MoTa?: SortOrderInput | SortOrder
    GhiChu?: SortOrderInput | SortOrder
    ViTri?: SortOrderInput | SortOrder
    StatusThongBao?: SortOrder
    _count?: TbHangHoaCountOrderByAggregateInput
    _avg?: TbHangHoaAvgOrderByAggregateInput
    _max?: TbHangHoaMaxOrderByAggregateInput
    _min?: TbHangHoaMinOrderByAggregateInput
    _sum?: TbHangHoaSumOrderByAggregateInput
  }

  export type TbHangHoaScalarWhereWithAggregatesInput = {
    AND?: TbHangHoaScalarWhereWithAggregatesInput | TbHangHoaScalarWhereWithAggregatesInput[]
    OR?: TbHangHoaScalarWhereWithAggregatesInput[]
    NOT?: TbHangHoaScalarWhereWithAggregatesInput | TbHangHoaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbHangHoa"> | string
    MaNhomHangHoa?: StringWithAggregatesFilter<"TbHangHoa"> | string
    TenHangHoa?: StringWithAggregatesFilter<"TbHangHoa"> | string
    DonViTinh?: StringNullableWithAggregatesFilter<"TbHangHoa"> | string | null
    GiaGocHangHoa?: DecimalWithAggregatesFilter<"TbHangHoa"> | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalWithAggregatesFilter<"TbHangHoa"> | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntWithAggregatesFilter<"TbHangHoa"> | number
    DinhMucTonItNhat?: IntNullableWithAggregatesFilter<"TbHangHoa"> | number | null
    DinhMucTonNhieuNhat?: IntNullableWithAggregatesFilter<"TbHangHoa"> | number | null
    TrongLuong?: StringNullableWithAggregatesFilter<"TbHangHoa"> | string | null
    MoTa?: StringNullableWithAggregatesFilter<"TbHangHoa"> | string | null
    GhiChu?: StringNullableWithAggregatesFilter<"TbHangHoa"> | string | null
    ViTri?: StringNullableWithAggregatesFilter<"TbHangHoa"> | string | null
    StatusThongBao?: Enumthongbao_StatusWithAggregatesFilter<"TbHangHoa"> | $Enums.thongbao_Status
  }

  export type TbPhieuNhapWhereInput = {
    AND?: TbPhieuNhapWhereInput | TbPhieuNhapWhereInput[]
    OR?: TbPhieuNhapWhereInput[]
    NOT?: TbPhieuNhapWhereInput | TbPhieuNhapWhereInput[]
    id?: StringFilter<"TbPhieuNhap"> | string
    MaKhachSan?: StringFilter<"TbPhieuNhap"> | string
    MaNhaCungCap?: StringNullableFilter<"TbPhieuNhap"> | string | null
    CacKhoanChiPhiPhatSinhHangHoa?: DecimalNullableFilter<"TbPhieuNhap"> | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFilter<"TbPhieuNhap"> | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFilter<"TbPhieuNhap"> | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFilter<"TbPhieuNhap"> | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFilter<"TbPhieuNhap"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbPhieuNhap"> | Date | string
    updateAt?: DateTimeFilter<"TbPhieuNhap"> | Date | string
    NhaCungCap?: XOR<TbNhaCungCapNullableRelationFilter, TbNhaCungCapWhereInput> | null
    KhachSan?: XOR<TbKhachSanRelationFilter, TbKhachSanWhereInput>
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapListRelationFilter
  }

  export type TbPhieuNhapOrderByWithRelationInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    MaNhaCungCap?: SortOrderInput | SortOrder
    CacKhoanChiPhiPhatSinhHangHoa?: SortOrderInput | SortOrder
    TongTienCanTra?: SortOrder
    TienDaTra?: SortOrder
    Status?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    NhaCungCap?: TbNhaCungCapOrderByWithRelationInput
    KhachSan?: TbKhachSanOrderByWithRelationInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapOrderByRelationAggregateInput
  }

  export type TbPhieuNhapWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbPhieuNhapWhereInput | TbPhieuNhapWhereInput[]
    OR?: TbPhieuNhapWhereInput[]
    NOT?: TbPhieuNhapWhereInput | TbPhieuNhapWhereInput[]
    MaKhachSan?: StringFilter<"TbPhieuNhap"> | string
    MaNhaCungCap?: StringNullableFilter<"TbPhieuNhap"> | string | null
    CacKhoanChiPhiPhatSinhHangHoa?: DecimalNullableFilter<"TbPhieuNhap"> | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFilter<"TbPhieuNhap"> | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFilter<"TbPhieuNhap"> | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFilter<"TbPhieuNhap"> | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFilter<"TbPhieuNhap"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbPhieuNhap"> | Date | string
    updateAt?: DateTimeFilter<"TbPhieuNhap"> | Date | string
    NhaCungCap?: XOR<TbNhaCungCapNullableRelationFilter, TbNhaCungCapWhereInput> | null
    KhachSan?: XOR<TbKhachSanRelationFilter, TbKhachSanWhereInput>
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapListRelationFilter
  }, "id">

  export type TbPhieuNhapOrderByWithAggregationInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    MaNhaCungCap?: SortOrderInput | SortOrder
    CacKhoanChiPhiPhatSinhHangHoa?: SortOrderInput | SortOrder
    TongTienCanTra?: SortOrder
    TienDaTra?: SortOrder
    Status?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    _count?: TbPhieuNhapCountOrderByAggregateInput
    _avg?: TbPhieuNhapAvgOrderByAggregateInput
    _max?: TbPhieuNhapMaxOrderByAggregateInput
    _min?: TbPhieuNhapMinOrderByAggregateInput
    _sum?: TbPhieuNhapSumOrderByAggregateInput
  }

  export type TbPhieuNhapScalarWhereWithAggregatesInput = {
    AND?: TbPhieuNhapScalarWhereWithAggregatesInput | TbPhieuNhapScalarWhereWithAggregatesInput[]
    OR?: TbPhieuNhapScalarWhereWithAggregatesInput[]
    NOT?: TbPhieuNhapScalarWhereWithAggregatesInput | TbPhieuNhapScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbPhieuNhap"> | string
    MaKhachSan?: StringWithAggregatesFilter<"TbPhieuNhap"> | string
    MaNhaCungCap?: StringNullableWithAggregatesFilter<"TbPhieuNhap"> | string | null
    CacKhoanChiPhiPhatSinhHangHoa?: DecimalNullableWithAggregatesFilter<"TbPhieuNhap"> | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalWithAggregatesFilter<"TbPhieuNhap"> | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalWithAggregatesFilter<"TbPhieuNhap"> | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusWithAggregatesFilter<"TbPhieuNhap"> | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusWithAggregatesFilter<"TbPhieuNhap"> | $Enums.thongbao_Status
    createAt?: DateTimeWithAggregatesFilter<"TbPhieuNhap"> | Date | string
    updateAt?: DateTimeWithAggregatesFilter<"TbPhieuNhap"> | Date | string
  }

  export type TbChiTietNoiDungNhapWhereInput = {
    AND?: TbChiTietNoiDungNhapWhereInput | TbChiTietNoiDungNhapWhereInput[]
    OR?: TbChiTietNoiDungNhapWhereInput[]
    NOT?: TbChiTietNoiDungNhapWhereInput | TbChiTietNoiDungNhapWhereInput[]
    id?: StringFilter<"TbChiTietNoiDungNhap"> | string
    MaHangHoa?: StringFilter<"TbChiTietNoiDungNhap"> | string
    MaPhieuNhap?: StringFilter<"TbChiTietNoiDungNhap"> | string
    ThanhTien?: DecimalFilter<"TbChiTietNoiDungNhap"> | Decimal | DecimalJsLike | number | string
    SLNhap?: IntFilter<"TbChiTietNoiDungNhap"> | number
    GiamGia?: DecimalNullableFilter<"TbChiTietNoiDungNhap"> | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeFilter<"TbChiTietNoiDungNhap"> | Date | string
    updateAt?: DateTimeFilter<"TbChiTietNoiDungNhap"> | Date | string
    HangHoa?: XOR<TbHangHoaRelationFilter, TbHangHoaWhereInput>
    PhieuNhap?: XOR<TbPhieuNhapRelationFilter, TbPhieuNhapWhereInput>
  }

  export type TbChiTietNoiDungNhapOrderByWithRelationInput = {
    id?: SortOrder
    MaHangHoa?: SortOrder
    MaPhieuNhap?: SortOrder
    ThanhTien?: SortOrder
    SLNhap?: SortOrder
    GiamGia?: SortOrderInput | SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    HangHoa?: TbHangHoaOrderByWithRelationInput
    PhieuNhap?: TbPhieuNhapOrderByWithRelationInput
  }

  export type TbChiTietNoiDungNhapWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbChiTietNoiDungNhapWhereInput | TbChiTietNoiDungNhapWhereInput[]
    OR?: TbChiTietNoiDungNhapWhereInput[]
    NOT?: TbChiTietNoiDungNhapWhereInput | TbChiTietNoiDungNhapWhereInput[]
    MaHangHoa?: StringFilter<"TbChiTietNoiDungNhap"> | string
    MaPhieuNhap?: StringFilter<"TbChiTietNoiDungNhap"> | string
    ThanhTien?: DecimalFilter<"TbChiTietNoiDungNhap"> | Decimal | DecimalJsLike | number | string
    SLNhap?: IntFilter<"TbChiTietNoiDungNhap"> | number
    GiamGia?: DecimalNullableFilter<"TbChiTietNoiDungNhap"> | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeFilter<"TbChiTietNoiDungNhap"> | Date | string
    updateAt?: DateTimeFilter<"TbChiTietNoiDungNhap"> | Date | string
    HangHoa?: XOR<TbHangHoaRelationFilter, TbHangHoaWhereInput>
    PhieuNhap?: XOR<TbPhieuNhapRelationFilter, TbPhieuNhapWhereInput>
  }, "id">

  export type TbChiTietNoiDungNhapOrderByWithAggregationInput = {
    id?: SortOrder
    MaHangHoa?: SortOrder
    MaPhieuNhap?: SortOrder
    ThanhTien?: SortOrder
    SLNhap?: SortOrder
    GiamGia?: SortOrderInput | SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    _count?: TbChiTietNoiDungNhapCountOrderByAggregateInput
    _avg?: TbChiTietNoiDungNhapAvgOrderByAggregateInput
    _max?: TbChiTietNoiDungNhapMaxOrderByAggregateInput
    _min?: TbChiTietNoiDungNhapMinOrderByAggregateInput
    _sum?: TbChiTietNoiDungNhapSumOrderByAggregateInput
  }

  export type TbChiTietNoiDungNhapScalarWhereWithAggregatesInput = {
    AND?: TbChiTietNoiDungNhapScalarWhereWithAggregatesInput | TbChiTietNoiDungNhapScalarWhereWithAggregatesInput[]
    OR?: TbChiTietNoiDungNhapScalarWhereWithAggregatesInput[]
    NOT?: TbChiTietNoiDungNhapScalarWhereWithAggregatesInput | TbChiTietNoiDungNhapScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbChiTietNoiDungNhap"> | string
    MaHangHoa?: StringWithAggregatesFilter<"TbChiTietNoiDungNhap"> | string
    MaPhieuNhap?: StringWithAggregatesFilter<"TbChiTietNoiDungNhap"> | string
    ThanhTien?: DecimalWithAggregatesFilter<"TbChiTietNoiDungNhap"> | Decimal | DecimalJsLike | number | string
    SLNhap?: IntWithAggregatesFilter<"TbChiTietNoiDungNhap"> | number
    GiamGia?: DecimalNullableWithAggregatesFilter<"TbChiTietNoiDungNhap"> | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeWithAggregatesFilter<"TbChiTietNoiDungNhap"> | Date | string
    updateAt?: DateTimeWithAggregatesFilter<"TbChiTietNoiDungNhap"> | Date | string
  }

  export type TbNhomHangHoaWhereInput = {
    AND?: TbNhomHangHoaWhereInput | TbNhomHangHoaWhereInput[]
    OR?: TbNhomHangHoaWhereInput[]
    NOT?: TbNhomHangHoaWhereInput | TbNhomHangHoaWhereInput[]
    id?: StringFilter<"TbNhomHangHoa"> | string
    MaKhachSan?: StringFilter<"TbNhomHangHoa"> | string
    TenNhomHangHoa?: StringFilter<"TbNhomHangHoa"> | string
    HangHoa?: TbHangHoaListRelationFilter
    KhachSan?: XOR<TbKhachSanRelationFilter, TbKhachSanWhereInput>
  }

  export type TbNhomHangHoaOrderByWithRelationInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomHangHoa?: SortOrder
    HangHoa?: TbHangHoaOrderByRelationAggregateInput
    KhachSan?: TbKhachSanOrderByWithRelationInput
  }

  export type TbNhomHangHoaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbNhomHangHoaWhereInput | TbNhomHangHoaWhereInput[]
    OR?: TbNhomHangHoaWhereInput[]
    NOT?: TbNhomHangHoaWhereInput | TbNhomHangHoaWhereInput[]
    MaKhachSan?: StringFilter<"TbNhomHangHoa"> | string
    TenNhomHangHoa?: StringFilter<"TbNhomHangHoa"> | string
    HangHoa?: TbHangHoaListRelationFilter
    KhachSan?: XOR<TbKhachSanRelationFilter, TbKhachSanWhereInput>
  }, "id">

  export type TbNhomHangHoaOrderByWithAggregationInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomHangHoa?: SortOrder
    _count?: TbNhomHangHoaCountOrderByAggregateInput
    _max?: TbNhomHangHoaMaxOrderByAggregateInput
    _min?: TbNhomHangHoaMinOrderByAggregateInput
  }

  export type TbNhomHangHoaScalarWhereWithAggregatesInput = {
    AND?: TbNhomHangHoaScalarWhereWithAggregatesInput | TbNhomHangHoaScalarWhereWithAggregatesInput[]
    OR?: TbNhomHangHoaScalarWhereWithAggregatesInput[]
    NOT?: TbNhomHangHoaScalarWhereWithAggregatesInput | TbNhomHangHoaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbNhomHangHoa"> | string
    MaKhachSan?: StringWithAggregatesFilter<"TbNhomHangHoa"> | string
    TenNhomHangHoa?: StringWithAggregatesFilter<"TbNhomHangHoa"> | string
  }

  export type TbHoaDonWhereInput = {
    AND?: TbHoaDonWhereInput | TbHoaDonWhereInput[]
    OR?: TbHoaDonWhereInput[]
    NOT?: TbHoaDonWhereInput | TbHoaDonWhereInput[]
    id?: StringFilter<"TbHoaDon"> | string
    MaTaiKhoanSub?: StringNullableFilter<"TbHoaDon"> | string | null
    MaKhachSan?: StringFilter<"TbHoaDon"> | string
    TongHoaDon?: DecimalNullableFilter<"TbHoaDon"> | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: DecimalNullableFilter<"TbHoaDon"> | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: DateTimeNullableFilter<"TbHoaDon"> | Date | string | null
    GhiChu?: StringNullableFilter<"TbHoaDon"> | string | null
    Status?: Enumtbhoadon_StatusFilter<"TbHoaDon"> | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFilter<"TbHoaDon"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbHoaDon"> | Date | string
    updateAt?: DateTimeFilter<"TbHoaDon"> | Date | string
    PhuongThucThanhToan?: Enumtbhoadon_PhuongThucThanhToanNullableFilter<"TbHoaDon"> | $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoListRelationFilter
    KhachSan?: XOR<TbKhachSanRelationFilter, TbKhachSanWhereInput>
    TaiKhoanSub?: XOR<SubUserNullableRelationFilter, SubUserWhereInput> | null
  }

  export type TbHoaDonOrderByWithRelationInput = {
    id?: SortOrder
    MaTaiKhoanSub?: SortOrderInput | SortOrder
    MaKhachSan?: SortOrder
    TongHoaDon?: SortOrderInput | SortOrder
    KhachThanhToan?: SortOrderInput | SortOrder
    NgayThanhToan?: SortOrderInput | SortOrder
    GhiChu?: SortOrderInput | SortOrder
    Status?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    PhuongThucThanhToan?: SortOrderInput | SortOrder
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoOrderByRelationAggregateInput
    KhachSan?: TbKhachSanOrderByWithRelationInput
    TaiKhoanSub?: SubUserOrderByWithRelationInput
  }

  export type TbHoaDonWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbHoaDonWhereInput | TbHoaDonWhereInput[]
    OR?: TbHoaDonWhereInput[]
    NOT?: TbHoaDonWhereInput | TbHoaDonWhereInput[]
    MaTaiKhoanSub?: StringNullableFilter<"TbHoaDon"> | string | null
    MaKhachSan?: StringFilter<"TbHoaDon"> | string
    TongHoaDon?: DecimalNullableFilter<"TbHoaDon"> | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: DecimalNullableFilter<"TbHoaDon"> | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: DateTimeNullableFilter<"TbHoaDon"> | Date | string | null
    GhiChu?: StringNullableFilter<"TbHoaDon"> | string | null
    Status?: Enumtbhoadon_StatusFilter<"TbHoaDon"> | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFilter<"TbHoaDon"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbHoaDon"> | Date | string
    updateAt?: DateTimeFilter<"TbHoaDon"> | Date | string
    PhuongThucThanhToan?: Enumtbhoadon_PhuongThucThanhToanNullableFilter<"TbHoaDon"> | $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoListRelationFilter
    KhachSan?: XOR<TbKhachSanRelationFilter, TbKhachSanWhereInput>
    TaiKhoanSub?: XOR<SubUserNullableRelationFilter, SubUserWhereInput> | null
  }, "id">

  export type TbHoaDonOrderByWithAggregationInput = {
    id?: SortOrder
    MaTaiKhoanSub?: SortOrderInput | SortOrder
    MaKhachSan?: SortOrder
    TongHoaDon?: SortOrderInput | SortOrder
    KhachThanhToan?: SortOrderInput | SortOrder
    NgayThanhToan?: SortOrderInput | SortOrder
    GhiChu?: SortOrderInput | SortOrder
    Status?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    PhuongThucThanhToan?: SortOrderInput | SortOrder
    _count?: TbHoaDonCountOrderByAggregateInput
    _avg?: TbHoaDonAvgOrderByAggregateInput
    _max?: TbHoaDonMaxOrderByAggregateInput
    _min?: TbHoaDonMinOrderByAggregateInput
    _sum?: TbHoaDonSumOrderByAggregateInput
  }

  export type TbHoaDonScalarWhereWithAggregatesInput = {
    AND?: TbHoaDonScalarWhereWithAggregatesInput | TbHoaDonScalarWhereWithAggregatesInput[]
    OR?: TbHoaDonScalarWhereWithAggregatesInput[]
    NOT?: TbHoaDonScalarWhereWithAggregatesInput | TbHoaDonScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbHoaDon"> | string
    MaTaiKhoanSub?: StringNullableWithAggregatesFilter<"TbHoaDon"> | string | null
    MaKhachSan?: StringWithAggregatesFilter<"TbHoaDon"> | string
    TongHoaDon?: DecimalNullableWithAggregatesFilter<"TbHoaDon"> | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: DecimalNullableWithAggregatesFilter<"TbHoaDon"> | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: DateTimeNullableWithAggregatesFilter<"TbHoaDon"> | Date | string | null
    GhiChu?: StringNullableWithAggregatesFilter<"TbHoaDon"> | string | null
    Status?: Enumtbhoadon_StatusWithAggregatesFilter<"TbHoaDon"> | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusWithAggregatesFilter<"TbHoaDon"> | $Enums.thongbao_Status
    createAt?: DateTimeWithAggregatesFilter<"TbHoaDon"> | Date | string
    updateAt?: DateTimeWithAggregatesFilter<"TbHoaDon"> | Date | string
    PhuongThucThanhToan?: Enumtbhoadon_PhuongThucThanhToanNullableWithAggregatesFilter<"TbHoaDon"> | $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type TbKhachHangWhereInput = {
    AND?: TbKhachHangWhereInput | TbKhachHangWhereInput[]
    OR?: TbKhachHangWhereInput[]
    NOT?: TbKhachHangWhereInput | TbKhachHangWhereInput[]
    id?: StringFilter<"TbKhachHang"> | string
    TenKH?: StringNullableFilter<"TbKhachHang"> | string | null
    SDTKH?: StringNullableFilter<"TbKhachHang"> | string | null
    EmailKH?: StringFilter<"TbKhachHang"> | string
    createAt?: DateTimeFilter<"TbKhachHang"> | Date | string
    updateAt?: DateTimeFilter<"TbKhachHang"> | Date | string
    DatCho?: TbDatChoListRelationFilter
  }

  export type TbKhachHangOrderByWithRelationInput = {
    id?: SortOrder
    TenKH?: SortOrderInput | SortOrder
    SDTKH?: SortOrderInput | SortOrder
    EmailKH?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    DatCho?: TbDatChoOrderByRelationAggregateInput
  }

  export type TbKhachHangWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    EmailKH?: string
    AND?: TbKhachHangWhereInput | TbKhachHangWhereInput[]
    OR?: TbKhachHangWhereInput[]
    NOT?: TbKhachHangWhereInput | TbKhachHangWhereInput[]
    TenKH?: StringNullableFilter<"TbKhachHang"> | string | null
    SDTKH?: StringNullableFilter<"TbKhachHang"> | string | null
    createAt?: DateTimeFilter<"TbKhachHang"> | Date | string
    updateAt?: DateTimeFilter<"TbKhachHang"> | Date | string
    DatCho?: TbDatChoListRelationFilter
  }, "id" | "EmailKH">

  export type TbKhachHangOrderByWithAggregationInput = {
    id?: SortOrder
    TenKH?: SortOrderInput | SortOrder
    SDTKH?: SortOrderInput | SortOrder
    EmailKH?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    _count?: TbKhachHangCountOrderByAggregateInput
    _max?: TbKhachHangMaxOrderByAggregateInput
    _min?: TbKhachHangMinOrderByAggregateInput
  }

  export type TbKhachHangScalarWhereWithAggregatesInput = {
    AND?: TbKhachHangScalarWhereWithAggregatesInput | TbKhachHangScalarWhereWithAggregatesInput[]
    OR?: TbKhachHangScalarWhereWithAggregatesInput[]
    NOT?: TbKhachHangScalarWhereWithAggregatesInput | TbKhachHangScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbKhachHang"> | string
    TenKH?: StringNullableWithAggregatesFilter<"TbKhachHang"> | string | null
    SDTKH?: StringNullableWithAggregatesFilter<"TbKhachHang"> | string | null
    EmailKH?: StringWithAggregatesFilter<"TbKhachHang"> | string
    createAt?: DateTimeWithAggregatesFilter<"TbKhachHang"> | Date | string
    updateAt?: DateTimeWithAggregatesFilter<"TbKhachHang"> | Date | string
  }

  export type TbKhachSanWhereInput = {
    AND?: TbKhachSanWhereInput | TbKhachSanWhereInput[]
    OR?: TbKhachSanWhereInput[]
    NOT?: TbKhachSanWhereInput | TbKhachSanWhereInput[]
    id?: StringFilter<"TbKhachSan"> | string
    MaChiNhanh?: StringFilter<"TbKhachSan"> | string
    TenKhachSan?: StringFilter<"TbKhachSan"> | string
    DiaChiKhachSan?: StringNullableFilter<"TbKhachSan"> | string | null
    SDTKhachSan?: StringNullableFilter<"TbKhachSan"> | string | null
    EmailKhachSan?: StringNullableFilter<"TbKhachSan"> | string | null
    TaiKhoanSub?: SubUserListRelationFilter
    HoaDon?: TbHoaDonListRelationFilter
    PhieuNhap?: TbPhieuNhapListRelationFilter
    NhomKhuVucPhong?: TbNhomKhuVucPhongListRelationFilter
    NhomHangHoa?: TbNhomHangHoaListRelationFilter
    NhomDichVu?: TbNhomDichVuListRelationFilter
    ChiNhanh?: XOR<TbChiNhanhRelationFilter, TbChiNhanhWhereInput>
  }

  export type TbKhachSanOrderByWithRelationInput = {
    id?: SortOrder
    MaChiNhanh?: SortOrder
    TenKhachSan?: SortOrder
    DiaChiKhachSan?: SortOrderInput | SortOrder
    SDTKhachSan?: SortOrderInput | SortOrder
    EmailKhachSan?: SortOrderInput | SortOrder
    TaiKhoanSub?: SubUserOrderByRelationAggregateInput
    HoaDon?: TbHoaDonOrderByRelationAggregateInput
    PhieuNhap?: TbPhieuNhapOrderByRelationAggregateInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongOrderByRelationAggregateInput
    NhomHangHoa?: TbNhomHangHoaOrderByRelationAggregateInput
    NhomDichVu?: TbNhomDichVuOrderByRelationAggregateInput
    ChiNhanh?: TbChiNhanhOrderByWithRelationInput
  }

  export type TbKhachSanWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    EmailKhachSan?: string
    AND?: TbKhachSanWhereInput | TbKhachSanWhereInput[]
    OR?: TbKhachSanWhereInput[]
    NOT?: TbKhachSanWhereInput | TbKhachSanWhereInput[]
    MaChiNhanh?: StringFilter<"TbKhachSan"> | string
    TenKhachSan?: StringFilter<"TbKhachSan"> | string
    DiaChiKhachSan?: StringNullableFilter<"TbKhachSan"> | string | null
    SDTKhachSan?: StringNullableFilter<"TbKhachSan"> | string | null
    TaiKhoanSub?: SubUserListRelationFilter
    HoaDon?: TbHoaDonListRelationFilter
    PhieuNhap?: TbPhieuNhapListRelationFilter
    NhomKhuVucPhong?: TbNhomKhuVucPhongListRelationFilter
    NhomHangHoa?: TbNhomHangHoaListRelationFilter
    NhomDichVu?: TbNhomDichVuListRelationFilter
    ChiNhanh?: XOR<TbChiNhanhRelationFilter, TbChiNhanhWhereInput>
  }, "id" | "EmailKhachSan">

  export type TbKhachSanOrderByWithAggregationInput = {
    id?: SortOrder
    MaChiNhanh?: SortOrder
    TenKhachSan?: SortOrder
    DiaChiKhachSan?: SortOrderInput | SortOrder
    SDTKhachSan?: SortOrderInput | SortOrder
    EmailKhachSan?: SortOrderInput | SortOrder
    _count?: TbKhachSanCountOrderByAggregateInput
    _max?: TbKhachSanMaxOrderByAggregateInput
    _min?: TbKhachSanMinOrderByAggregateInput
  }

  export type TbKhachSanScalarWhereWithAggregatesInput = {
    AND?: TbKhachSanScalarWhereWithAggregatesInput | TbKhachSanScalarWhereWithAggregatesInput[]
    OR?: TbKhachSanScalarWhereWithAggregatesInput[]
    NOT?: TbKhachSanScalarWhereWithAggregatesInput | TbKhachSanScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbKhachSan"> | string
    MaChiNhanh?: StringWithAggregatesFilter<"TbKhachSan"> | string
    TenKhachSan?: StringWithAggregatesFilter<"TbKhachSan"> | string
    DiaChiKhachSan?: StringNullableWithAggregatesFilter<"TbKhachSan"> | string | null
    SDTKhachSan?: StringNullableWithAggregatesFilter<"TbKhachSan"> | string | null
    EmailKhachSan?: StringNullableWithAggregatesFilter<"TbKhachSan"> | string | null
  }

  export type TbLoaiPhongWhereInput = {
    AND?: TbLoaiPhongWhereInput | TbLoaiPhongWhereInput[]
    OR?: TbLoaiPhongWhereInput[]
    NOT?: TbLoaiPhongWhereInput | TbLoaiPhongWhereInput[]
    id?: StringFilter<"TbLoaiPhong"> | string
    MaKhachSan?: StringFilter<"TbLoaiPhong"> | string
    TenLoaiPhong?: StringFilter<"TbLoaiPhong"> | string
    GiaTheoGio?: DecimalFilter<"TbLoaiPhong"> | Decimal | DecimalJsLike | number | string
    GiaTheoNgay?: DecimalFilter<"TbLoaiPhong"> | Decimal | DecimalJsLike | number | string
    CacLinkAnhLoaiPhong?: TbCacLinkAnhLoaiPhongListRelationFilter
    Phong?: TbPhongListRelationFilter
  }

  export type TbLoaiPhongOrderByWithRelationInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenLoaiPhong?: SortOrder
    GiaTheoGio?: SortOrder
    GiaTheoNgay?: SortOrder
    CacLinkAnhLoaiPhong?: TbCacLinkAnhLoaiPhongOrderByRelationAggregateInput
    Phong?: TbPhongOrderByRelationAggregateInput
  }

  export type TbLoaiPhongWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbLoaiPhongWhereInput | TbLoaiPhongWhereInput[]
    OR?: TbLoaiPhongWhereInput[]
    NOT?: TbLoaiPhongWhereInput | TbLoaiPhongWhereInput[]
    MaKhachSan?: StringFilter<"TbLoaiPhong"> | string
    TenLoaiPhong?: StringFilter<"TbLoaiPhong"> | string
    GiaTheoGio?: DecimalFilter<"TbLoaiPhong"> | Decimal | DecimalJsLike | number | string
    GiaTheoNgay?: DecimalFilter<"TbLoaiPhong"> | Decimal | DecimalJsLike | number | string
    CacLinkAnhLoaiPhong?: TbCacLinkAnhLoaiPhongListRelationFilter
    Phong?: TbPhongListRelationFilter
  }, "id">

  export type TbLoaiPhongOrderByWithAggregationInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenLoaiPhong?: SortOrder
    GiaTheoGio?: SortOrder
    GiaTheoNgay?: SortOrder
    _count?: TbLoaiPhongCountOrderByAggregateInput
    _avg?: TbLoaiPhongAvgOrderByAggregateInput
    _max?: TbLoaiPhongMaxOrderByAggregateInput
    _min?: TbLoaiPhongMinOrderByAggregateInput
    _sum?: TbLoaiPhongSumOrderByAggregateInput
  }

  export type TbLoaiPhongScalarWhereWithAggregatesInput = {
    AND?: TbLoaiPhongScalarWhereWithAggregatesInput | TbLoaiPhongScalarWhereWithAggregatesInput[]
    OR?: TbLoaiPhongScalarWhereWithAggregatesInput[]
    NOT?: TbLoaiPhongScalarWhereWithAggregatesInput | TbLoaiPhongScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbLoaiPhong"> | string
    MaKhachSan?: StringWithAggregatesFilter<"TbLoaiPhong"> | string
    TenLoaiPhong?: StringWithAggregatesFilter<"TbLoaiPhong"> | string
    GiaTheoGio?: DecimalWithAggregatesFilter<"TbLoaiPhong"> | Decimal | DecimalJsLike | number | string
    GiaTheoNgay?: DecimalWithAggregatesFilter<"TbLoaiPhong"> | Decimal | DecimalJsLike | number | string
  }

  export type TbCacLinkAnhLoaiPhongWhereInput = {
    AND?: TbCacLinkAnhLoaiPhongWhereInput | TbCacLinkAnhLoaiPhongWhereInput[]
    OR?: TbCacLinkAnhLoaiPhongWhereInput[]
    NOT?: TbCacLinkAnhLoaiPhongWhereInput | TbCacLinkAnhLoaiPhongWhereInput[]
    id?: StringFilter<"TbCacLinkAnhLoaiPhong"> | string
    MaLoaiPhong?: StringFilter<"TbCacLinkAnhLoaiPhong"> | string
    LinkAnh?: StringFilter<"TbCacLinkAnhLoaiPhong"> | string
    LoaiPhong?: XOR<TbLoaiPhongRelationFilter, TbLoaiPhongWhereInput>
  }

  export type TbCacLinkAnhLoaiPhongOrderByWithRelationInput = {
    id?: SortOrder
    MaLoaiPhong?: SortOrder
    LinkAnh?: SortOrder
    LoaiPhong?: TbLoaiPhongOrderByWithRelationInput
  }

  export type TbCacLinkAnhLoaiPhongWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbCacLinkAnhLoaiPhongWhereInput | TbCacLinkAnhLoaiPhongWhereInput[]
    OR?: TbCacLinkAnhLoaiPhongWhereInput[]
    NOT?: TbCacLinkAnhLoaiPhongWhereInput | TbCacLinkAnhLoaiPhongWhereInput[]
    MaLoaiPhong?: StringFilter<"TbCacLinkAnhLoaiPhong"> | string
    LinkAnh?: StringFilter<"TbCacLinkAnhLoaiPhong"> | string
    LoaiPhong?: XOR<TbLoaiPhongRelationFilter, TbLoaiPhongWhereInput>
  }, "id">

  export type TbCacLinkAnhLoaiPhongOrderByWithAggregationInput = {
    id?: SortOrder
    MaLoaiPhong?: SortOrder
    LinkAnh?: SortOrder
    _count?: TbCacLinkAnhLoaiPhongCountOrderByAggregateInput
    _max?: TbCacLinkAnhLoaiPhongMaxOrderByAggregateInput
    _min?: TbCacLinkAnhLoaiPhongMinOrderByAggregateInput
  }

  export type TbCacLinkAnhLoaiPhongScalarWhereWithAggregatesInput = {
    AND?: TbCacLinkAnhLoaiPhongScalarWhereWithAggregatesInput | TbCacLinkAnhLoaiPhongScalarWhereWithAggregatesInput[]
    OR?: TbCacLinkAnhLoaiPhongScalarWhereWithAggregatesInput[]
    NOT?: TbCacLinkAnhLoaiPhongScalarWhereWithAggregatesInput | TbCacLinkAnhLoaiPhongScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbCacLinkAnhLoaiPhong"> | string
    MaLoaiPhong?: StringWithAggregatesFilter<"TbCacLinkAnhLoaiPhong"> | string
    LinkAnh?: StringWithAggregatesFilter<"TbCacLinkAnhLoaiPhong"> | string
  }

  export type TbCacLinkAnhDichVuWhereInput = {
    AND?: TbCacLinkAnhDichVuWhereInput | TbCacLinkAnhDichVuWhereInput[]
    OR?: TbCacLinkAnhDichVuWhereInput[]
    NOT?: TbCacLinkAnhDichVuWhereInput | TbCacLinkAnhDichVuWhereInput[]
    id?: StringFilter<"TbCacLinkAnhDichVu"> | string
    MaDichVu?: StringFilter<"TbCacLinkAnhDichVu"> | string
    LinkAnh?: StringFilter<"TbCacLinkAnhDichVu"> | string
    DichVu?: XOR<TbDichVuRelationFilter, TbDichVuWhereInput>
  }

  export type TbCacLinkAnhDichVuOrderByWithRelationInput = {
    id?: SortOrder
    MaDichVu?: SortOrder
    LinkAnh?: SortOrder
    DichVu?: TbDichVuOrderByWithRelationInput
  }

  export type TbCacLinkAnhDichVuWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbCacLinkAnhDichVuWhereInput | TbCacLinkAnhDichVuWhereInput[]
    OR?: TbCacLinkAnhDichVuWhereInput[]
    NOT?: TbCacLinkAnhDichVuWhereInput | TbCacLinkAnhDichVuWhereInput[]
    MaDichVu?: StringFilter<"TbCacLinkAnhDichVu"> | string
    LinkAnh?: StringFilter<"TbCacLinkAnhDichVu"> | string
    DichVu?: XOR<TbDichVuRelationFilter, TbDichVuWhereInput>
  }, "id">

  export type TbCacLinkAnhDichVuOrderByWithAggregationInput = {
    id?: SortOrder
    MaDichVu?: SortOrder
    LinkAnh?: SortOrder
    _count?: TbCacLinkAnhDichVuCountOrderByAggregateInput
    _max?: TbCacLinkAnhDichVuMaxOrderByAggregateInput
    _min?: TbCacLinkAnhDichVuMinOrderByAggregateInput
  }

  export type TbCacLinkAnhDichVuScalarWhereWithAggregatesInput = {
    AND?: TbCacLinkAnhDichVuScalarWhereWithAggregatesInput | TbCacLinkAnhDichVuScalarWhereWithAggregatesInput[]
    OR?: TbCacLinkAnhDichVuScalarWhereWithAggregatesInput[]
    NOT?: TbCacLinkAnhDichVuScalarWhereWithAggregatesInput | TbCacLinkAnhDichVuScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbCacLinkAnhDichVu"> | string
    MaDichVu?: StringWithAggregatesFilter<"TbCacLinkAnhDichVu"> | string
    LinkAnh?: StringWithAggregatesFilter<"TbCacLinkAnhDichVu"> | string
  }

  export type TbCacLinkAnhHangHoaWhereInput = {
    AND?: TbCacLinkAnhHangHoaWhereInput | TbCacLinkAnhHangHoaWhereInput[]
    OR?: TbCacLinkAnhHangHoaWhereInput[]
    NOT?: TbCacLinkAnhHangHoaWhereInput | TbCacLinkAnhHangHoaWhereInput[]
    id?: StringFilter<"TbCacLinkAnhHangHoa"> | string
    MaHangHoa?: StringFilter<"TbCacLinkAnhHangHoa"> | string
    LinkAnh?: StringFilter<"TbCacLinkAnhHangHoa"> | string
    HangHoa?: XOR<TbHangHoaRelationFilter, TbHangHoaWhereInput>
  }

  export type TbCacLinkAnhHangHoaOrderByWithRelationInput = {
    id?: SortOrder
    MaHangHoa?: SortOrder
    LinkAnh?: SortOrder
    HangHoa?: TbHangHoaOrderByWithRelationInput
  }

  export type TbCacLinkAnhHangHoaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbCacLinkAnhHangHoaWhereInput | TbCacLinkAnhHangHoaWhereInput[]
    OR?: TbCacLinkAnhHangHoaWhereInput[]
    NOT?: TbCacLinkAnhHangHoaWhereInput | TbCacLinkAnhHangHoaWhereInput[]
    MaHangHoa?: StringFilter<"TbCacLinkAnhHangHoa"> | string
    LinkAnh?: StringFilter<"TbCacLinkAnhHangHoa"> | string
    HangHoa?: XOR<TbHangHoaRelationFilter, TbHangHoaWhereInput>
  }, "id">

  export type TbCacLinkAnhHangHoaOrderByWithAggregationInput = {
    id?: SortOrder
    MaHangHoa?: SortOrder
    LinkAnh?: SortOrder
    _count?: TbCacLinkAnhHangHoaCountOrderByAggregateInput
    _max?: TbCacLinkAnhHangHoaMaxOrderByAggregateInput
    _min?: TbCacLinkAnhHangHoaMinOrderByAggregateInput
  }

  export type TbCacLinkAnhHangHoaScalarWhereWithAggregatesInput = {
    AND?: TbCacLinkAnhHangHoaScalarWhereWithAggregatesInput | TbCacLinkAnhHangHoaScalarWhereWithAggregatesInput[]
    OR?: TbCacLinkAnhHangHoaScalarWhereWithAggregatesInput[]
    NOT?: TbCacLinkAnhHangHoaScalarWhereWithAggregatesInput | TbCacLinkAnhHangHoaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbCacLinkAnhHangHoa"> | string
    MaHangHoa?: StringWithAggregatesFilter<"TbCacLinkAnhHangHoa"> | string
    LinkAnh?: StringWithAggregatesFilter<"TbCacLinkAnhHangHoa"> | string
  }

  export type TbCacLinkAnhPhongWhereInput = {
    AND?: TbCacLinkAnhPhongWhereInput | TbCacLinkAnhPhongWhereInput[]
    OR?: TbCacLinkAnhPhongWhereInput[]
    NOT?: TbCacLinkAnhPhongWhereInput | TbCacLinkAnhPhongWhereInput[]
    id?: StringFilter<"TbCacLinkAnhPhong"> | string
    MaPhong?: StringFilter<"TbCacLinkAnhPhong"> | string
    LinkAnh?: StringFilter<"TbCacLinkAnhPhong"> | string
    Phong?: XOR<TbPhongRelationFilter, TbPhongWhereInput>
  }

  export type TbCacLinkAnhPhongOrderByWithRelationInput = {
    id?: SortOrder
    MaPhong?: SortOrder
    LinkAnh?: SortOrder
    Phong?: TbPhongOrderByWithRelationInput
  }

  export type TbCacLinkAnhPhongWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbCacLinkAnhPhongWhereInput | TbCacLinkAnhPhongWhereInput[]
    OR?: TbCacLinkAnhPhongWhereInput[]
    NOT?: TbCacLinkAnhPhongWhereInput | TbCacLinkAnhPhongWhereInput[]
    MaPhong?: StringFilter<"TbCacLinkAnhPhong"> | string
    LinkAnh?: StringFilter<"TbCacLinkAnhPhong"> | string
    Phong?: XOR<TbPhongRelationFilter, TbPhongWhereInput>
  }, "id">

  export type TbCacLinkAnhPhongOrderByWithAggregationInput = {
    id?: SortOrder
    MaPhong?: SortOrder
    LinkAnh?: SortOrder
    _count?: TbCacLinkAnhPhongCountOrderByAggregateInput
    _max?: TbCacLinkAnhPhongMaxOrderByAggregateInput
    _min?: TbCacLinkAnhPhongMinOrderByAggregateInput
  }

  export type TbCacLinkAnhPhongScalarWhereWithAggregatesInput = {
    AND?: TbCacLinkAnhPhongScalarWhereWithAggregatesInput | TbCacLinkAnhPhongScalarWhereWithAggregatesInput[]
    OR?: TbCacLinkAnhPhongScalarWhereWithAggregatesInput[]
    NOT?: TbCacLinkAnhPhongScalarWhereWithAggregatesInput | TbCacLinkAnhPhongScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbCacLinkAnhPhong"> | string
    MaPhong?: StringWithAggregatesFilter<"TbCacLinkAnhPhong"> | string
    LinkAnh?: StringWithAggregatesFilter<"TbCacLinkAnhPhong"> | string
  }

  export type TbNhaCungCapWhereInput = {
    AND?: TbNhaCungCapWhereInput | TbNhaCungCapWhereInput[]
    OR?: TbNhaCungCapWhereInput[]
    NOT?: TbNhaCungCapWhereInput | TbNhaCungCapWhereInput[]
    id?: StringFilter<"TbNhaCungCap"> | string
    TenNhaCungCap?: StringFilter<"TbNhaCungCap"> | string
    SDTNhaCungCap?: StringFilter<"TbNhaCungCap"> | string
    EmailNhaCungCap?: StringFilter<"TbNhaCungCap"> | string
    PhieuNhap?: TbPhieuNhapListRelationFilter
  }

  export type TbNhaCungCapOrderByWithRelationInput = {
    id?: SortOrder
    TenNhaCungCap?: SortOrder
    SDTNhaCungCap?: SortOrder
    EmailNhaCungCap?: SortOrder
    PhieuNhap?: TbPhieuNhapOrderByRelationAggregateInput
  }

  export type TbNhaCungCapWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    EmailNhaCungCap?: string
    AND?: TbNhaCungCapWhereInput | TbNhaCungCapWhereInput[]
    OR?: TbNhaCungCapWhereInput[]
    NOT?: TbNhaCungCapWhereInput | TbNhaCungCapWhereInput[]
    TenNhaCungCap?: StringFilter<"TbNhaCungCap"> | string
    SDTNhaCungCap?: StringFilter<"TbNhaCungCap"> | string
    PhieuNhap?: TbPhieuNhapListRelationFilter
  }, "id" | "EmailNhaCungCap">

  export type TbNhaCungCapOrderByWithAggregationInput = {
    id?: SortOrder
    TenNhaCungCap?: SortOrder
    SDTNhaCungCap?: SortOrder
    EmailNhaCungCap?: SortOrder
    _count?: TbNhaCungCapCountOrderByAggregateInput
    _max?: TbNhaCungCapMaxOrderByAggregateInput
    _min?: TbNhaCungCapMinOrderByAggregateInput
  }

  export type TbNhaCungCapScalarWhereWithAggregatesInput = {
    AND?: TbNhaCungCapScalarWhereWithAggregatesInput | TbNhaCungCapScalarWhereWithAggregatesInput[]
    OR?: TbNhaCungCapScalarWhereWithAggregatesInput[]
    NOT?: TbNhaCungCapScalarWhereWithAggregatesInput | TbNhaCungCapScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbNhaCungCap"> | string
    TenNhaCungCap?: StringWithAggregatesFilter<"TbNhaCungCap"> | string
    SDTNhaCungCap?: StringWithAggregatesFilter<"TbNhaCungCap"> | string
    EmailNhaCungCap?: StringWithAggregatesFilter<"TbNhaCungCap"> | string
  }

  export type TbPhongWhereInput = {
    AND?: TbPhongWhereInput | TbPhongWhereInput[]
    OR?: TbPhongWhereInput[]
    NOT?: TbPhongWhereInput | TbPhongWhereInput[]
    id?: StringFilter<"TbPhong"> | string
    MaLoaiPhong?: StringFilter<"TbPhong"> | string
    MaNhomKhuVucPhong?: StringFilter<"TbPhong"> | string
    TenPhong?: StringFilter<"TbPhong"> | string
    GhiChu?: StringNullableFilter<"TbPhong"> | string | null
    Status?: Enumtbphong_StatusFilter<"TbPhong"> | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFilter<"TbPhong"> | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFilter<"TbPhong"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbPhong"> | Date | string
    updateAt?: DateTimeFilter<"TbPhong"> | Date | string
    NhomKhuVucPhong?: XOR<TbNhomKhuVucPhongRelationFilter, TbNhomKhuVucPhongWhereInput>
    LoaiPhong?: XOR<TbLoaiPhongRelationFilter, TbLoaiPhongWhereInput>
    DatCho?: TbDatChoListRelationFilter
    CacLinkAnhPhong?: TbCacLinkAnhPhongListRelationFilter
  }

  export type TbPhongOrderByWithRelationInput = {
    id?: SortOrder
    MaLoaiPhong?: SortOrder
    MaNhomKhuVucPhong?: SortOrder
    TenPhong?: SortOrder
    GhiChu?: SortOrderInput | SortOrder
    Status?: SortOrder
    StatusDatCho?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    NhomKhuVucPhong?: TbNhomKhuVucPhongOrderByWithRelationInput
    LoaiPhong?: TbLoaiPhongOrderByWithRelationInput
    DatCho?: TbDatChoOrderByRelationAggregateInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongOrderByRelationAggregateInput
  }

  export type TbPhongWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbPhongWhereInput | TbPhongWhereInput[]
    OR?: TbPhongWhereInput[]
    NOT?: TbPhongWhereInput | TbPhongWhereInput[]
    MaLoaiPhong?: StringFilter<"TbPhong"> | string
    MaNhomKhuVucPhong?: StringFilter<"TbPhong"> | string
    TenPhong?: StringFilter<"TbPhong"> | string
    GhiChu?: StringNullableFilter<"TbPhong"> | string | null
    Status?: Enumtbphong_StatusFilter<"TbPhong"> | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFilter<"TbPhong"> | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFilter<"TbPhong"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbPhong"> | Date | string
    updateAt?: DateTimeFilter<"TbPhong"> | Date | string
    NhomKhuVucPhong?: XOR<TbNhomKhuVucPhongRelationFilter, TbNhomKhuVucPhongWhereInput>
    LoaiPhong?: XOR<TbLoaiPhongRelationFilter, TbLoaiPhongWhereInput>
    DatCho?: TbDatChoListRelationFilter
    CacLinkAnhPhong?: TbCacLinkAnhPhongListRelationFilter
  }, "id">

  export type TbPhongOrderByWithAggregationInput = {
    id?: SortOrder
    MaLoaiPhong?: SortOrder
    MaNhomKhuVucPhong?: SortOrder
    TenPhong?: SortOrder
    GhiChu?: SortOrderInput | SortOrder
    Status?: SortOrder
    StatusDatCho?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    _count?: TbPhongCountOrderByAggregateInput
    _max?: TbPhongMaxOrderByAggregateInput
    _min?: TbPhongMinOrderByAggregateInput
  }

  export type TbPhongScalarWhereWithAggregatesInput = {
    AND?: TbPhongScalarWhereWithAggregatesInput | TbPhongScalarWhereWithAggregatesInput[]
    OR?: TbPhongScalarWhereWithAggregatesInput[]
    NOT?: TbPhongScalarWhereWithAggregatesInput | TbPhongScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbPhong"> | string
    MaLoaiPhong?: StringWithAggregatesFilter<"TbPhong"> | string
    MaNhomKhuVucPhong?: StringWithAggregatesFilter<"TbPhong"> | string
    TenPhong?: StringWithAggregatesFilter<"TbPhong"> | string
    GhiChu?: StringNullableWithAggregatesFilter<"TbPhong"> | string | null
    Status?: Enumtbphong_StatusWithAggregatesFilter<"TbPhong"> | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusWithAggregatesFilter<"TbPhong"> | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusWithAggregatesFilter<"TbPhong"> | $Enums.thongbao_Status
    createAt?: DateTimeWithAggregatesFilter<"TbPhong"> | Date | string
    updateAt?: DateTimeWithAggregatesFilter<"TbPhong"> | Date | string
  }

  export type TbNhomKhuVucPhongWhereInput = {
    AND?: TbNhomKhuVucPhongWhereInput | TbNhomKhuVucPhongWhereInput[]
    OR?: TbNhomKhuVucPhongWhereInput[]
    NOT?: TbNhomKhuVucPhongWhereInput | TbNhomKhuVucPhongWhereInput[]
    id?: StringFilter<"TbNhomKhuVucPhong"> | string
    MaKhachSan?: StringFilter<"TbNhomKhuVucPhong"> | string
    TenNhomKhuVuc?: StringFilter<"TbNhomKhuVucPhong"> | string
    GhiChu?: StringNullableFilter<"TbNhomKhuVucPhong"> | string | null
    Phong?: TbPhongListRelationFilter
    KhachSan?: XOR<TbKhachSanRelationFilter, TbKhachSanWhereInput>
  }

  export type TbNhomKhuVucPhongOrderByWithRelationInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomKhuVuc?: SortOrder
    GhiChu?: SortOrderInput | SortOrder
    Phong?: TbPhongOrderByRelationAggregateInput
    KhachSan?: TbKhachSanOrderByWithRelationInput
  }

  export type TbNhomKhuVucPhongWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TbNhomKhuVucPhongWhereInput | TbNhomKhuVucPhongWhereInput[]
    OR?: TbNhomKhuVucPhongWhereInput[]
    NOT?: TbNhomKhuVucPhongWhereInput | TbNhomKhuVucPhongWhereInput[]
    MaKhachSan?: StringFilter<"TbNhomKhuVucPhong"> | string
    TenNhomKhuVuc?: StringFilter<"TbNhomKhuVucPhong"> | string
    GhiChu?: StringNullableFilter<"TbNhomKhuVucPhong"> | string | null
    Phong?: TbPhongListRelationFilter
    KhachSan?: XOR<TbKhachSanRelationFilter, TbKhachSanWhereInput>
  }, "id">

  export type TbNhomKhuVucPhongOrderByWithAggregationInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomKhuVuc?: SortOrder
    GhiChu?: SortOrderInput | SortOrder
    _count?: TbNhomKhuVucPhongCountOrderByAggregateInput
    _max?: TbNhomKhuVucPhongMaxOrderByAggregateInput
    _min?: TbNhomKhuVucPhongMinOrderByAggregateInput
  }

  export type TbNhomKhuVucPhongScalarWhereWithAggregatesInput = {
    AND?: TbNhomKhuVucPhongScalarWhereWithAggregatesInput | TbNhomKhuVucPhongScalarWhereWithAggregatesInput[]
    OR?: TbNhomKhuVucPhongScalarWhereWithAggregatesInput[]
    NOT?: TbNhomKhuVucPhongScalarWhereWithAggregatesInput | TbNhomKhuVucPhongScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TbNhomKhuVucPhong"> | string
    MaKhachSan?: StringWithAggregatesFilter<"TbNhomKhuVucPhong"> | string
    TenNhomKhuVuc?: StringWithAggregatesFilter<"TbNhomKhuVucPhong"> | string
    GhiChu?: StringNullableWithAggregatesFilter<"TbNhomKhuVucPhong"> | string | null
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    phone_number?: FloatNullableFilter<"User"> | number | null
    address?: StringNullableFilter<"User"> | string | null
    password?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    role?: Enumtbtaikhoan_VaiTroFilter<"User"> | $Enums.tbtaikhoan_VaiTro
    avatar?: XOR<AvatarsNullableRelationFilter, AvatarsWhereInput> | null
    ChiNhanh?: TbChiNhanhListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    phone_number?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    password?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
    avatar?: AvatarsOrderByWithRelationInput
    ChiNhanh?: TbChiNhanhOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    uniquee_email_phone_number?: UserUniquee_email_phone_numberCompoundUniqueInput
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    phone_number?: FloatNullableFilter<"User"> | number | null
    address?: StringNullableFilter<"User"> | string | null
    password?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    role?: Enumtbtaikhoan_VaiTroFilter<"User"> | $Enums.tbtaikhoan_VaiTro
    avatar?: XOR<AvatarsNullableRelationFilter, AvatarsWhereInput> | null
    ChiNhanh?: TbChiNhanhListRelationFilter
  }, "id" | "email" | "uniquee_email_phone_number">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    phone_number?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    password?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    phone_number?: FloatNullableWithAggregatesFilter<"User"> | number | null
    address?: StringNullableWithAggregatesFilter<"User"> | string | null
    password?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    role?: Enumtbtaikhoan_VaiTroWithAggregatesFilter<"User"> | $Enums.tbtaikhoan_VaiTro
  }

  export type SubUserWhereInput = {
    AND?: SubUserWhereInput | SubUserWhereInput[]
    OR?: SubUserWhereInput[]
    NOT?: SubUserWhereInput | SubUserWhereInput[]
    id?: StringFilter<"SubUser"> | string
    MaKhachSan?: StringNullableFilter<"SubUser"> | string | null
    name?: StringFilter<"SubUser"> | string
    phone_number?: FloatNullableFilter<"SubUser"> | number | null
    address?: StringNullableFilter<"SubUser"> | string | null
    password?: StringFilter<"SubUser"> | string
    email?: StringFilter<"SubUser"> | string
    createdAt?: DateTimeFilter<"SubUser"> | Date | string
    updatedAt?: DateTimeFilter<"SubUser"> | Date | string
    role?: Enumtbtaikhoancon_VaiTroFilter<"SubUser"> | $Enums.tbtaikhoancon_VaiTro
    subAvatar?: XOR<SubAvatarsNullableRelationFilter, SubAvatarsWhereInput> | null
    HoaDon?: TbHoaDonListRelationFilter
    KhachSan?: XOR<TbKhachSanNullableRelationFilter, TbKhachSanWhereInput> | null
  }

  export type SubUserOrderByWithRelationInput = {
    id?: SortOrder
    MaKhachSan?: SortOrderInput | SortOrder
    name?: SortOrder
    phone_number?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    password?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
    subAvatar?: SubAvatarsOrderByWithRelationInput
    HoaDon?: TbHoaDonOrderByRelationAggregateInput
    KhachSan?: TbKhachSanOrderByWithRelationInput
  }

  export type SubUserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    uniquee_sub_email_phone_number?: SubUserUniquee_sub_email_phone_numberCompoundUniqueInput
    AND?: SubUserWhereInput | SubUserWhereInput[]
    OR?: SubUserWhereInput[]
    NOT?: SubUserWhereInput | SubUserWhereInput[]
    MaKhachSan?: StringNullableFilter<"SubUser"> | string | null
    name?: StringFilter<"SubUser"> | string
    phone_number?: FloatNullableFilter<"SubUser"> | number | null
    address?: StringNullableFilter<"SubUser"> | string | null
    password?: StringFilter<"SubUser"> | string
    createdAt?: DateTimeFilter<"SubUser"> | Date | string
    updatedAt?: DateTimeFilter<"SubUser"> | Date | string
    role?: Enumtbtaikhoancon_VaiTroFilter<"SubUser"> | $Enums.tbtaikhoancon_VaiTro
    subAvatar?: XOR<SubAvatarsNullableRelationFilter, SubAvatarsWhereInput> | null
    HoaDon?: TbHoaDonListRelationFilter
    KhachSan?: XOR<TbKhachSanNullableRelationFilter, TbKhachSanWhereInput> | null
  }, "id" | "email" | "uniquee_sub_email_phone_number">

  export type SubUserOrderByWithAggregationInput = {
    id?: SortOrder
    MaKhachSan?: SortOrderInput | SortOrder
    name?: SortOrder
    phone_number?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    password?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
    _count?: SubUserCountOrderByAggregateInput
    _avg?: SubUserAvgOrderByAggregateInput
    _max?: SubUserMaxOrderByAggregateInput
    _min?: SubUserMinOrderByAggregateInput
    _sum?: SubUserSumOrderByAggregateInput
  }

  export type SubUserScalarWhereWithAggregatesInput = {
    AND?: SubUserScalarWhereWithAggregatesInput | SubUserScalarWhereWithAggregatesInput[]
    OR?: SubUserScalarWhereWithAggregatesInput[]
    NOT?: SubUserScalarWhereWithAggregatesInput | SubUserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SubUser"> | string
    MaKhachSan?: StringNullableWithAggregatesFilter<"SubUser"> | string | null
    name?: StringWithAggregatesFilter<"SubUser"> | string
    phone_number?: FloatNullableWithAggregatesFilter<"SubUser"> | number | null
    address?: StringNullableWithAggregatesFilter<"SubUser"> | string | null
    password?: StringWithAggregatesFilter<"SubUser"> | string
    email?: StringWithAggregatesFilter<"SubUser"> | string
    createdAt?: DateTimeWithAggregatesFilter<"SubUser"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SubUser"> | Date | string
    role?: Enumtbtaikhoancon_VaiTroWithAggregatesFilter<"SubUser"> | $Enums.tbtaikhoancon_VaiTro
  }

  export type AvatarsWhereInput = {
    AND?: AvatarsWhereInput | AvatarsWhereInput[]
    OR?: AvatarsWhereInput[]
    NOT?: AvatarsWhereInput | AvatarsWhereInput[]
    id?: StringFilter<"Avatars"> | string
    public_id?: StringFilter<"Avatars"> | string
    url?: StringFilter<"Avatars"> | string
    userId?: StringFilter<"Avatars"> | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type AvatarsOrderByWithRelationInput = {
    id?: SortOrder
    public_id?: SortOrder
    url?: SortOrder
    userId?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type AvatarsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: AvatarsWhereInput | AvatarsWhereInput[]
    OR?: AvatarsWhereInput[]
    NOT?: AvatarsWhereInput | AvatarsWhereInput[]
    public_id?: StringFilter<"Avatars"> | string
    url?: StringFilter<"Avatars"> | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type AvatarsOrderByWithAggregationInput = {
    id?: SortOrder
    public_id?: SortOrder
    url?: SortOrder
    userId?: SortOrder
    _count?: AvatarsCountOrderByAggregateInput
    _max?: AvatarsMaxOrderByAggregateInput
    _min?: AvatarsMinOrderByAggregateInput
  }

  export type AvatarsScalarWhereWithAggregatesInput = {
    AND?: AvatarsScalarWhereWithAggregatesInput | AvatarsScalarWhereWithAggregatesInput[]
    OR?: AvatarsScalarWhereWithAggregatesInput[]
    NOT?: AvatarsScalarWhereWithAggregatesInput | AvatarsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Avatars"> | string
    public_id?: StringWithAggregatesFilter<"Avatars"> | string
    url?: StringWithAggregatesFilter<"Avatars"> | string
    userId?: StringWithAggregatesFilter<"Avatars"> | string
  }

  export type SubAvatarsWhereInput = {
    AND?: SubAvatarsWhereInput | SubAvatarsWhereInput[]
    OR?: SubAvatarsWhereInput[]
    NOT?: SubAvatarsWhereInput | SubAvatarsWhereInput[]
    id?: StringFilter<"SubAvatars"> | string
    public_id?: StringFilter<"SubAvatars"> | string
    url?: StringFilter<"SubAvatars"> | string
    subUserId?: StringFilter<"SubAvatars"> | string
    sub_user?: XOR<SubUserRelationFilter, SubUserWhereInput>
  }

  export type SubAvatarsOrderByWithRelationInput = {
    id?: SortOrder
    public_id?: SortOrder
    url?: SortOrder
    subUserId?: SortOrder
    sub_user?: SubUserOrderByWithRelationInput
  }

  export type SubAvatarsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    subUserId?: string
    AND?: SubAvatarsWhereInput | SubAvatarsWhereInput[]
    OR?: SubAvatarsWhereInput[]
    NOT?: SubAvatarsWhereInput | SubAvatarsWhereInput[]
    public_id?: StringFilter<"SubAvatars"> | string
    url?: StringFilter<"SubAvatars"> | string
    sub_user?: XOR<SubUserRelationFilter, SubUserWhereInput>
  }, "id" | "subUserId">

  export type SubAvatarsOrderByWithAggregationInput = {
    id?: SortOrder
    public_id?: SortOrder
    url?: SortOrder
    subUserId?: SortOrder
    _count?: SubAvatarsCountOrderByAggregateInput
    _max?: SubAvatarsMaxOrderByAggregateInput
    _min?: SubAvatarsMinOrderByAggregateInput
  }

  export type SubAvatarsScalarWhereWithAggregatesInput = {
    AND?: SubAvatarsScalarWhereWithAggregatesInput | SubAvatarsScalarWhereWithAggregatesInput[]
    OR?: SubAvatarsScalarWhereWithAggregatesInput[]
    NOT?: SubAvatarsScalarWhereWithAggregatesInput | SubAvatarsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SubAvatars"> | string
    public_id?: StringWithAggregatesFilter<"SubAvatars"> | string
    url?: StringWithAggregatesFilter<"SubAvatars"> | string
    subUserId?: StringWithAggregatesFilter<"SubAvatars"> | string
  }

  export type TbChiNhanhCreateInput = {
    id?: string
    TenChiNhanh: string
    SDTChiNhanh?: string | null
    DiaChiChiNhanh?: string | null
    KhachSan?: TbKhachSanCreateNestedManyWithoutChiNhanhInput
    TaiKhoanAdmin: UserCreateNestedOneWithoutChiNhanhInput
  }

  export type TbChiNhanhUncheckedCreateInput = {
    id?: string
    MaAdmin: string
    TenChiNhanh: string
    SDTChiNhanh?: string | null
    DiaChiChiNhanh?: string | null
    KhachSan?: TbKhachSanUncheckedCreateNestedManyWithoutChiNhanhInput
  }

  export type TbChiNhanhUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenChiNhanh?: StringFieldUpdateOperationsInput | string
    SDTChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    DiaChiChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    KhachSan?: TbKhachSanUpdateManyWithoutChiNhanhNestedInput
    TaiKhoanAdmin?: UserUpdateOneRequiredWithoutChiNhanhNestedInput
  }

  export type TbChiNhanhUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaAdmin?: StringFieldUpdateOperationsInput | string
    TenChiNhanh?: StringFieldUpdateOperationsInput | string
    SDTChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    DiaChiChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    KhachSan?: TbKhachSanUncheckedUpdateManyWithoutChiNhanhNestedInput
  }

  export type TbChiNhanhCreateManyInput = {
    id?: string
    MaAdmin: string
    TenChiNhanh: string
    SDTChiNhanh?: string | null
    DiaChiChiNhanh?: string | null
  }

  export type TbChiNhanhUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenChiNhanh?: StringFieldUpdateOperationsInput | string
    SDTChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    DiaChiChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TbChiNhanhUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaAdmin?: StringFieldUpdateOperationsInput | string
    TenChiNhanh?: StringFieldUpdateOperationsInput | string
    SDTChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    DiaChiChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TbChiTietDichVuDatChoCreateInput = {
    id?: string
    MoTa?: string | null
    createAt?: Date | string
    DatCho: TbDatChoCreateNestedOneWithoutChiTietDichVuDatChoInput
    DichVu?: TbDichVuCreateNestedOneWithoutChiTietDichVuDatChoInput
    HoaDon?: TbHoaDonCreateNestedOneWithoutChiTietDichVuDatChoInput
  }

  export type TbChiTietDichVuDatChoUncheckedCreateInput = {
    id?: string
    MaDatCho: string
    MaDichVu?: string | null
    MaHoaDon?: string | null
    MoTa?: string | null
    createAt?: Date | string
  }

  export type TbChiTietDichVuDatChoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DatCho?: TbDatChoUpdateOneRequiredWithoutChiTietDichVuDatChoNestedInput
    DichVu?: TbDichVuUpdateOneWithoutChiTietDichVuDatChoNestedInput
    HoaDon?: TbHoaDonUpdateOneWithoutChiTietDichVuDatChoNestedInput
  }

  export type TbChiTietDichVuDatChoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaDatCho?: StringFieldUpdateOperationsInput | string
    MaDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    MaHoaDon?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbChiTietDichVuDatChoCreateManyInput = {
    id?: string
    MaDatCho: string
    MaDichVu?: string | null
    MaHoaDon?: string | null
    MoTa?: string | null
    createAt?: Date | string
  }

  export type TbChiTietDichVuDatChoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbChiTietDichVuDatChoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaDatCho?: StringFieldUpdateOperationsInput | string
    MaDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    MaHoaDon?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbDatChoCreateInput = {
    id?: string
    NgayDatCho?: Date | string
    NgayNhanPhong: Date | string
    NgayTraPhong: Date | string
    SLNguoiLonDiKem?: number
    SLTreEmDiKem?: number
    LoaiKhach?: $Enums.loaikhach_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoCreateNestedManyWithoutDatChoInput
    KhachHang: TbKhachHangCreateNestedOneWithoutDatChoInput
    Phong: TbPhongCreateNestedOneWithoutDatChoInput
  }

  export type TbDatChoUncheckedCreateInput = {
    id?: string
    MaKH: string
    MaPhong: string
    NgayDatCho?: Date | string
    NgayNhanPhong: Date | string
    NgayTraPhong: Date | string
    SLNguoiLonDiKem?: number
    SLTreEmDiKem?: number
    LoaiKhach?: $Enums.loaikhach_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedCreateNestedManyWithoutDatChoInput
  }

  export type TbDatChoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    NgayDatCho?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayNhanPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayTraPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    SLNguoiLonDiKem?: IntFieldUpdateOperationsInput | number
    SLTreEmDiKem?: IntFieldUpdateOperationsInput | number
    LoaiKhach?: Enumloaikhach_StatusFieldUpdateOperationsInput | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUpdateManyWithoutDatChoNestedInput
    KhachHang?: TbKhachHangUpdateOneRequiredWithoutDatChoNestedInput
    Phong?: TbPhongUpdateOneRequiredWithoutDatChoNestedInput
  }

  export type TbDatChoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKH?: StringFieldUpdateOperationsInput | string
    MaPhong?: StringFieldUpdateOperationsInput | string
    NgayDatCho?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayNhanPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayTraPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    SLNguoiLonDiKem?: IntFieldUpdateOperationsInput | number
    SLTreEmDiKem?: IntFieldUpdateOperationsInput | number
    LoaiKhach?: Enumloaikhach_StatusFieldUpdateOperationsInput | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedUpdateManyWithoutDatChoNestedInput
  }

  export type TbDatChoCreateManyInput = {
    id?: string
    MaKH: string
    MaPhong: string
    NgayDatCho?: Date | string
    NgayNhanPhong: Date | string
    NgayTraPhong: Date | string
    SLNguoiLonDiKem?: number
    SLTreEmDiKem?: number
    LoaiKhach?: $Enums.loaikhach_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbDatChoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    NgayDatCho?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayNhanPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayTraPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    SLNguoiLonDiKem?: IntFieldUpdateOperationsInput | number
    SLTreEmDiKem?: IntFieldUpdateOperationsInput | number
    LoaiKhach?: Enumloaikhach_StatusFieldUpdateOperationsInput | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbDatChoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKH?: StringFieldUpdateOperationsInput | string
    MaPhong?: StringFieldUpdateOperationsInput | string
    NgayDatCho?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayNhanPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayTraPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    SLNguoiLonDiKem?: IntFieldUpdateOperationsInput | number
    SLTreEmDiKem?: IntFieldUpdateOperationsInput | number
    LoaiKhach?: Enumloaikhach_StatusFieldUpdateOperationsInput | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbDichVuCreateInput = {
    id?: string
    TenDichVu: string
    DonViTinh?: string | null
    GiaVon: Decimal | DecimalJsLike | number | string
    GiaBan: Decimal | DecimalJsLike | number | string
    ThoiLuong: number
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    NhomDichVu: TbNhomDichVuCreateNestedOneWithoutDichVuInput
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoCreateNestedManyWithoutDichVuInput
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuCreateNestedManyWithoutDichVuInput
  }

  export type TbDichVuUncheckedCreateInput = {
    id?: string
    MaNhomDichVu: string
    TenDichVu: string
    DonViTinh?: string | null
    GiaVon: Decimal | DecimalJsLike | number | string
    GiaBan: Decimal | DecimalJsLike | number | string
    ThoiLuong: number
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedCreateNestedManyWithoutDichVuInput
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuUncheckedCreateNestedManyWithoutDichVuInput
  }

  export type TbDichVuUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenDichVu?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaVon?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFieldUpdateOperationsInput | number
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NhomDichVu?: TbNhomDichVuUpdateOneRequiredWithoutDichVuNestedInput
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUpdateManyWithoutDichVuNestedInput
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuUpdateManyWithoutDichVuNestedInput
  }

  export type TbDichVuUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaNhomDichVu?: StringFieldUpdateOperationsInput | string
    TenDichVu?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaVon?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFieldUpdateOperationsInput | number
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedUpdateManyWithoutDichVuNestedInput
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuUncheckedUpdateManyWithoutDichVuNestedInput
  }

  export type TbDichVuCreateManyInput = {
    id?: string
    MaNhomDichVu: string
    TenDichVu: string
    DonViTinh?: string | null
    GiaVon: Decimal | DecimalJsLike | number | string
    GiaBan: Decimal | DecimalJsLike | number | string
    ThoiLuong: number
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbDichVuUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenDichVu?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaVon?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFieldUpdateOperationsInput | number
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbDichVuUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaNhomDichVu?: StringFieldUpdateOperationsInput | string
    TenDichVu?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaVon?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFieldUpdateOperationsInput | number
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbNhomDichVuCreateInput = {
    id?: string
    TenNhomDichVu: string
    DichVu?: TbDichVuCreateNestedManyWithoutNhomDichVuInput
    KhachSan: TbKhachSanCreateNestedOneWithoutNhomDichVuInput
  }

  export type TbNhomDichVuUncheckedCreateInput = {
    id?: string
    MaKhachSan: string
    TenNhomDichVu: string
    DichVu?: TbDichVuUncheckedCreateNestedManyWithoutNhomDichVuInput
  }

  export type TbNhomDichVuUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomDichVu?: StringFieldUpdateOperationsInput | string
    DichVu?: TbDichVuUpdateManyWithoutNhomDichVuNestedInput
    KhachSan?: TbKhachSanUpdateOneRequiredWithoutNhomDichVuNestedInput
  }

  export type TbNhomDichVuUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenNhomDichVu?: StringFieldUpdateOperationsInput | string
    DichVu?: TbDichVuUncheckedUpdateManyWithoutNhomDichVuNestedInput
  }

  export type TbNhomDichVuCreateManyInput = {
    id?: string
    MaKhachSan: string
    TenNhomDichVu: string
  }

  export type TbNhomDichVuUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomDichVu?: StringFieldUpdateOperationsInput | string
  }

  export type TbNhomDichVuUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenNhomDichVu?: StringFieldUpdateOperationsInput | string
  }

  export type TbHangHoaCreateInput = {
    id?: string
    TenHangHoa: string
    DonViTinh?: string | null
    GiaGocHangHoa: Decimal | DecimalJsLike | number | string
    GiaBanHangHoa: Decimal | DecimalJsLike | number | string
    SLTonKho: number
    DinhMucTonItNhat?: number | null
    DinhMucTonNhieuNhat?: number | null
    TrongLuong?: string | null
    MoTa?: string | null
    GhiChu?: string | null
    ViTri?: string | null
    StatusThongBao?: $Enums.thongbao_Status
    NhomHangHoa: TbNhomHangHoaCreateNestedOneWithoutHangHoaInput
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaCreateNestedManyWithoutHangHoaInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapCreateNestedManyWithoutHangHoaInput
  }

  export type TbHangHoaUncheckedCreateInput = {
    id?: string
    MaNhomHangHoa: string
    TenHangHoa: string
    DonViTinh?: string | null
    GiaGocHangHoa: Decimal | DecimalJsLike | number | string
    GiaBanHangHoa: Decimal | DecimalJsLike | number | string
    SLTonKho: number
    DinhMucTonItNhat?: number | null
    DinhMucTonNhieuNhat?: number | null
    TrongLuong?: string | null
    MoTa?: string | null
    GhiChu?: string | null
    ViTri?: string | null
    StatusThongBao?: $Enums.thongbao_Status
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaUncheckedCreateNestedManyWithoutHangHoaInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUncheckedCreateNestedManyWithoutHangHoaInput
  }

  export type TbHangHoaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenHangHoa?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaGocHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFieldUpdateOperationsInput | number
    DinhMucTonItNhat?: NullableIntFieldUpdateOperationsInput | number | null
    DinhMucTonNhieuNhat?: NullableIntFieldUpdateOperationsInput | number | null
    TrongLuong?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    ViTri?: NullableStringFieldUpdateOperationsInput | string | null
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    NhomHangHoa?: TbNhomHangHoaUpdateOneRequiredWithoutHangHoaNestedInput
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaUpdateManyWithoutHangHoaNestedInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUpdateManyWithoutHangHoaNestedInput
  }

  export type TbHangHoaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaNhomHangHoa?: StringFieldUpdateOperationsInput | string
    TenHangHoa?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaGocHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFieldUpdateOperationsInput | number
    DinhMucTonItNhat?: NullableIntFieldUpdateOperationsInput | number | null
    DinhMucTonNhieuNhat?: NullableIntFieldUpdateOperationsInput | number | null
    TrongLuong?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    ViTri?: NullableStringFieldUpdateOperationsInput | string | null
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaUncheckedUpdateManyWithoutHangHoaNestedInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUncheckedUpdateManyWithoutHangHoaNestedInput
  }

  export type TbHangHoaCreateManyInput = {
    id?: string
    MaNhomHangHoa: string
    TenHangHoa: string
    DonViTinh?: string | null
    GiaGocHangHoa: Decimal | DecimalJsLike | number | string
    GiaBanHangHoa: Decimal | DecimalJsLike | number | string
    SLTonKho: number
    DinhMucTonItNhat?: number | null
    DinhMucTonNhieuNhat?: number | null
    TrongLuong?: string | null
    MoTa?: string | null
    GhiChu?: string | null
    ViTri?: string | null
    StatusThongBao?: $Enums.thongbao_Status
  }

  export type TbHangHoaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenHangHoa?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaGocHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFieldUpdateOperationsInput | number
    DinhMucTonItNhat?: NullableIntFieldUpdateOperationsInput | number | null
    DinhMucTonNhieuNhat?: NullableIntFieldUpdateOperationsInput | number | null
    TrongLuong?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    ViTri?: NullableStringFieldUpdateOperationsInput | string | null
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
  }

  export type TbHangHoaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaNhomHangHoa?: StringFieldUpdateOperationsInput | string
    TenHangHoa?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaGocHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFieldUpdateOperationsInput | number
    DinhMucTonItNhat?: NullableIntFieldUpdateOperationsInput | number | null
    DinhMucTonNhieuNhat?: NullableIntFieldUpdateOperationsInput | number | null
    TrongLuong?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    ViTri?: NullableStringFieldUpdateOperationsInput | string | null
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
  }

  export type TbPhieuNhapCreateInput = {
    id?: string
    CacKhoanChiPhiPhatSinhHangHoa?: Decimal | DecimalJsLike | number | string | null
    TongTienCanTra: Decimal | DecimalJsLike | number | string
    TienDaTra: Decimal | DecimalJsLike | number | string
    Status?: $Enums.tbphieunhap_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    NhaCungCap?: TbNhaCungCapCreateNestedOneWithoutPhieuNhapInput
    KhachSan: TbKhachSanCreateNestedOneWithoutPhieuNhapInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapCreateNestedManyWithoutPhieuNhapInput
  }

  export type TbPhieuNhapUncheckedCreateInput = {
    id?: string
    MaKhachSan: string
    MaNhaCungCap?: string | null
    CacKhoanChiPhiPhatSinhHangHoa?: Decimal | DecimalJsLike | number | string | null
    TongTienCanTra: Decimal | DecimalJsLike | number | string
    TienDaTra: Decimal | DecimalJsLike | number | string
    Status?: $Enums.tbphieunhap_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUncheckedCreateNestedManyWithoutPhieuNhapInput
  }

  export type TbPhieuNhapUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    CacKhoanChiPhiPhatSinhHangHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFieldUpdateOperationsInput | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NhaCungCap?: TbNhaCungCapUpdateOneWithoutPhieuNhapNestedInput
    KhachSan?: TbKhachSanUpdateOneRequiredWithoutPhieuNhapNestedInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUpdateManyWithoutPhieuNhapNestedInput
  }

  export type TbPhieuNhapUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    MaNhaCungCap?: NullableStringFieldUpdateOperationsInput | string | null
    CacKhoanChiPhiPhatSinhHangHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFieldUpdateOperationsInput | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUncheckedUpdateManyWithoutPhieuNhapNestedInput
  }

  export type TbPhieuNhapCreateManyInput = {
    id?: string
    MaKhachSan: string
    MaNhaCungCap?: string | null
    CacKhoanChiPhiPhatSinhHangHoa?: Decimal | DecimalJsLike | number | string | null
    TongTienCanTra: Decimal | DecimalJsLike | number | string
    TienDaTra: Decimal | DecimalJsLike | number | string
    Status?: $Enums.tbphieunhap_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbPhieuNhapUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    CacKhoanChiPhiPhatSinhHangHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFieldUpdateOperationsInput | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbPhieuNhapUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    MaNhaCungCap?: NullableStringFieldUpdateOperationsInput | string | null
    CacKhoanChiPhiPhatSinhHangHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFieldUpdateOperationsInput | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbChiTietNoiDungNhapCreateInput = {
    id?: string
    ThanhTien: Decimal | DecimalJsLike | number | string
    SLNhap: number
    GiamGia?: Decimal | DecimalJsLike | number | string | null
    createAt?: Date | string
    updateAt?: Date | string
    HangHoa: TbHangHoaCreateNestedOneWithoutChiTietNoiDungNhapInput
    PhieuNhap: TbPhieuNhapCreateNestedOneWithoutChiTietNoiDungNhapInput
  }

  export type TbChiTietNoiDungNhapUncheckedCreateInput = {
    id?: string
    MaHangHoa: string
    MaPhieuNhap: string
    ThanhTien: Decimal | DecimalJsLike | number | string
    SLNhap: number
    GiamGia?: Decimal | DecimalJsLike | number | string | null
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbChiTietNoiDungNhapUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ThanhTien?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLNhap?: IntFieldUpdateOperationsInput | number
    GiamGia?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    HangHoa?: TbHangHoaUpdateOneRequiredWithoutChiTietNoiDungNhapNestedInput
    PhieuNhap?: TbPhieuNhapUpdateOneRequiredWithoutChiTietNoiDungNhapNestedInput
  }

  export type TbChiTietNoiDungNhapUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaHangHoa?: StringFieldUpdateOperationsInput | string
    MaPhieuNhap?: StringFieldUpdateOperationsInput | string
    ThanhTien?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLNhap?: IntFieldUpdateOperationsInput | number
    GiamGia?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbChiTietNoiDungNhapCreateManyInput = {
    id?: string
    MaHangHoa: string
    MaPhieuNhap: string
    ThanhTien: Decimal | DecimalJsLike | number | string
    SLNhap: number
    GiamGia?: Decimal | DecimalJsLike | number | string | null
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbChiTietNoiDungNhapUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    ThanhTien?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLNhap?: IntFieldUpdateOperationsInput | number
    GiamGia?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbChiTietNoiDungNhapUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaHangHoa?: StringFieldUpdateOperationsInput | string
    MaPhieuNhap?: StringFieldUpdateOperationsInput | string
    ThanhTien?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLNhap?: IntFieldUpdateOperationsInput | number
    GiamGia?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbNhomHangHoaCreateInput = {
    id?: string
    TenNhomHangHoa: string
    HangHoa?: TbHangHoaCreateNestedManyWithoutNhomHangHoaInput
    KhachSan: TbKhachSanCreateNestedOneWithoutNhomHangHoaInput
  }

  export type TbNhomHangHoaUncheckedCreateInput = {
    id?: string
    MaKhachSan: string
    TenNhomHangHoa: string
    HangHoa?: TbHangHoaUncheckedCreateNestedManyWithoutNhomHangHoaInput
  }

  export type TbNhomHangHoaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomHangHoa?: StringFieldUpdateOperationsInput | string
    HangHoa?: TbHangHoaUpdateManyWithoutNhomHangHoaNestedInput
    KhachSan?: TbKhachSanUpdateOneRequiredWithoutNhomHangHoaNestedInput
  }

  export type TbNhomHangHoaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenNhomHangHoa?: StringFieldUpdateOperationsInput | string
    HangHoa?: TbHangHoaUncheckedUpdateManyWithoutNhomHangHoaNestedInput
  }

  export type TbNhomHangHoaCreateManyInput = {
    id?: string
    MaKhachSan: string
    TenNhomHangHoa: string
  }

  export type TbNhomHangHoaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomHangHoa?: StringFieldUpdateOperationsInput | string
  }

  export type TbNhomHangHoaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenNhomHangHoa?: StringFieldUpdateOperationsInput | string
  }

  export type TbHoaDonCreateInput = {
    id?: string
    TongHoaDon?: Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: Date | string | null
    GhiChu?: string | null
    Status?: $Enums.tbhoadon_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    PhuongThucThanhToan?: $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoCreateNestedManyWithoutHoaDonInput
    KhachSan: TbKhachSanCreateNestedOneWithoutHoaDonInput
    TaiKhoanSub?: SubUserCreateNestedOneWithoutHoaDonInput
  }

  export type TbHoaDonUncheckedCreateInput = {
    id?: string
    MaTaiKhoanSub?: string | null
    MaKhachSan: string
    TongHoaDon?: Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: Date | string | null
    GhiChu?: string | null
    Status?: $Enums.tbhoadon_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    PhuongThucThanhToan?: $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedCreateNestedManyWithoutHoaDonInput
  }

  export type TbHoaDonUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    TongHoaDon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbhoadon_StatusFieldUpdateOperationsInput | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PhuongThucThanhToan?: NullableEnumtbhoadon_PhuongThucThanhToanFieldUpdateOperationsInput | $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUpdateManyWithoutHoaDonNestedInput
    KhachSan?: TbKhachSanUpdateOneRequiredWithoutHoaDonNestedInput
    TaiKhoanSub?: SubUserUpdateOneWithoutHoaDonNestedInput
  }

  export type TbHoaDonUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaTaiKhoanSub?: NullableStringFieldUpdateOperationsInput | string | null
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TongHoaDon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbhoadon_StatusFieldUpdateOperationsInput | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PhuongThucThanhToan?: NullableEnumtbhoadon_PhuongThucThanhToanFieldUpdateOperationsInput | $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedUpdateManyWithoutHoaDonNestedInput
  }

  export type TbHoaDonCreateManyInput = {
    id?: string
    MaTaiKhoanSub?: string | null
    MaKhachSan: string
    TongHoaDon?: Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: Date | string | null
    GhiChu?: string | null
    Status?: $Enums.tbhoadon_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    PhuongThucThanhToan?: $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type TbHoaDonUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    TongHoaDon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbhoadon_StatusFieldUpdateOperationsInput | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PhuongThucThanhToan?: NullableEnumtbhoadon_PhuongThucThanhToanFieldUpdateOperationsInput | $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type TbHoaDonUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaTaiKhoanSub?: NullableStringFieldUpdateOperationsInput | string | null
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TongHoaDon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbhoadon_StatusFieldUpdateOperationsInput | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PhuongThucThanhToan?: NullableEnumtbhoadon_PhuongThucThanhToanFieldUpdateOperationsInput | $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type TbKhachHangCreateInput = {
    id?: string
    TenKH?: string | null
    SDTKH?: string | null
    EmailKH: string
    createAt?: Date | string
    updateAt?: Date | string
    DatCho?: TbDatChoCreateNestedManyWithoutKhachHangInput
  }

  export type TbKhachHangUncheckedCreateInput = {
    id?: string
    TenKH?: string | null
    SDTKH?: string | null
    EmailKH: string
    createAt?: Date | string
    updateAt?: Date | string
    DatCho?: TbDatChoUncheckedCreateNestedManyWithoutKhachHangInput
  }

  export type TbKhachHangUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKH?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKH?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKH?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DatCho?: TbDatChoUpdateManyWithoutKhachHangNestedInput
  }

  export type TbKhachHangUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKH?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKH?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKH?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DatCho?: TbDatChoUncheckedUpdateManyWithoutKhachHangNestedInput
  }

  export type TbKhachHangCreateManyInput = {
    id?: string
    TenKH?: string | null
    SDTKH?: string | null
    EmailKH: string
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbKhachHangUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKH?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKH?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKH?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbKhachHangUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKH?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKH?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKH?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbKhachSanCreateInput = {
    id?: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserCreateNestedManyWithoutKhachSanInput
    HoaDon?: TbHoaDonCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuCreateNestedManyWithoutKhachSanInput
    ChiNhanh: TbChiNhanhCreateNestedOneWithoutKhachSanInput
  }

  export type TbKhachSanUncheckedCreateInput = {
    id?: string
    MaChiNhanh: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserUncheckedCreateNestedManyWithoutKhachSanInput
    HoaDon?: TbHoaDonUncheckedCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapUncheckedCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaUncheckedCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuUncheckedCreateNestedManyWithoutKhachSanInput
  }

  export type TbKhachSanUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUpdateManyWithoutKhachSanNestedInput
    HoaDon?: TbHoaDonUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUpdateManyWithoutKhachSanNestedInput
    ChiNhanh?: TbChiNhanhUpdateOneRequiredWithoutKhachSanNestedInput
  }

  export type TbKhachSanUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaChiNhanh?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUncheckedUpdateManyWithoutKhachSanNestedInput
    HoaDon?: TbHoaDonUncheckedUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUncheckedUpdateManyWithoutKhachSanNestedInput
  }

  export type TbKhachSanCreateManyInput = {
    id?: string
    MaChiNhanh: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
  }

  export type TbKhachSanUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TbKhachSanUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaChiNhanh?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TbLoaiPhongCreateInput = {
    id?: string
    MaKhachSan: string
    TenLoaiPhong: string
    GiaTheoGio: Decimal | DecimalJsLike | number | string
    GiaTheoNgay: Decimal | DecimalJsLike | number | string
    CacLinkAnhLoaiPhong?: TbCacLinkAnhLoaiPhongCreateNestedManyWithoutLoaiPhongInput
    Phong?: TbPhongCreateNestedManyWithoutLoaiPhongInput
  }

  export type TbLoaiPhongUncheckedCreateInput = {
    id?: string
    MaKhachSan: string
    TenLoaiPhong: string
    GiaTheoGio: Decimal | DecimalJsLike | number | string
    GiaTheoNgay: Decimal | DecimalJsLike | number | string
    CacLinkAnhLoaiPhong?: TbCacLinkAnhLoaiPhongUncheckedCreateNestedManyWithoutLoaiPhongInput
    Phong?: TbPhongUncheckedCreateNestedManyWithoutLoaiPhongInput
  }

  export type TbLoaiPhongUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenLoaiPhong?: StringFieldUpdateOperationsInput | string
    GiaTheoGio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaTheoNgay?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    CacLinkAnhLoaiPhong?: TbCacLinkAnhLoaiPhongUpdateManyWithoutLoaiPhongNestedInput
    Phong?: TbPhongUpdateManyWithoutLoaiPhongNestedInput
  }

  export type TbLoaiPhongUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenLoaiPhong?: StringFieldUpdateOperationsInput | string
    GiaTheoGio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaTheoNgay?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    CacLinkAnhLoaiPhong?: TbCacLinkAnhLoaiPhongUncheckedUpdateManyWithoutLoaiPhongNestedInput
    Phong?: TbPhongUncheckedUpdateManyWithoutLoaiPhongNestedInput
  }

  export type TbLoaiPhongCreateManyInput = {
    id?: string
    MaKhachSan: string
    TenLoaiPhong: string
    GiaTheoGio: Decimal | DecimalJsLike | number | string
    GiaTheoNgay: Decimal | DecimalJsLike | number | string
  }

  export type TbLoaiPhongUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenLoaiPhong?: StringFieldUpdateOperationsInput | string
    GiaTheoGio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaTheoNgay?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type TbLoaiPhongUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenLoaiPhong?: StringFieldUpdateOperationsInput | string
    GiaTheoGio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaTheoNgay?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type TbCacLinkAnhLoaiPhongCreateInput = {
    id?: string
    LinkAnh: string
    LoaiPhong: TbLoaiPhongCreateNestedOneWithoutCacLinkAnhLoaiPhongInput
  }

  export type TbCacLinkAnhLoaiPhongUncheckedCreateInput = {
    id?: string
    MaLoaiPhong: string
    LinkAnh: string
  }

  export type TbCacLinkAnhLoaiPhongUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
    LoaiPhong?: TbLoaiPhongUpdateOneRequiredWithoutCacLinkAnhLoaiPhongNestedInput
  }

  export type TbCacLinkAnhLoaiPhongUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaLoaiPhong?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhLoaiPhongCreateManyInput = {
    id?: string
    MaLoaiPhong: string
    LinkAnh: string
  }

  export type TbCacLinkAnhLoaiPhongUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhLoaiPhongUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaLoaiPhong?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhDichVuCreateInput = {
    id?: string
    LinkAnh: string
    DichVu: TbDichVuCreateNestedOneWithoutCacLinkAnhDichVuInput
  }

  export type TbCacLinkAnhDichVuUncheckedCreateInput = {
    id?: string
    MaDichVu: string
    LinkAnh: string
  }

  export type TbCacLinkAnhDichVuUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
    DichVu?: TbDichVuUpdateOneRequiredWithoutCacLinkAnhDichVuNestedInput
  }

  export type TbCacLinkAnhDichVuUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaDichVu?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhDichVuCreateManyInput = {
    id?: string
    MaDichVu: string
    LinkAnh: string
  }

  export type TbCacLinkAnhDichVuUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhDichVuUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaDichVu?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhHangHoaCreateInput = {
    id?: string
    LinkAnh: string
    HangHoa: TbHangHoaCreateNestedOneWithoutCacLinkAnhHangHoaInput
  }

  export type TbCacLinkAnhHangHoaUncheckedCreateInput = {
    id?: string
    MaHangHoa: string
    LinkAnh: string
  }

  export type TbCacLinkAnhHangHoaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
    HangHoa?: TbHangHoaUpdateOneRequiredWithoutCacLinkAnhHangHoaNestedInput
  }

  export type TbCacLinkAnhHangHoaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaHangHoa?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhHangHoaCreateManyInput = {
    id?: string
    MaHangHoa: string
    LinkAnh: string
  }

  export type TbCacLinkAnhHangHoaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhHangHoaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaHangHoa?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhPhongCreateInput = {
    id?: string
    LinkAnh: string
    Phong: TbPhongCreateNestedOneWithoutCacLinkAnhPhongInput
  }

  export type TbCacLinkAnhPhongUncheckedCreateInput = {
    id?: string
    MaPhong: string
    LinkAnh: string
  }

  export type TbCacLinkAnhPhongUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
    Phong?: TbPhongUpdateOneRequiredWithoutCacLinkAnhPhongNestedInput
  }

  export type TbCacLinkAnhPhongUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaPhong?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhPhongCreateManyInput = {
    id?: string
    MaPhong: string
    LinkAnh: string
  }

  export type TbCacLinkAnhPhongUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhPhongUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaPhong?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbNhaCungCapCreateInput = {
    id?: string
    TenNhaCungCap: string
    SDTNhaCungCap: string
    EmailNhaCungCap: string
    PhieuNhap?: TbPhieuNhapCreateNestedManyWithoutNhaCungCapInput
  }

  export type TbNhaCungCapUncheckedCreateInput = {
    id?: string
    TenNhaCungCap: string
    SDTNhaCungCap: string
    EmailNhaCungCap: string
    PhieuNhap?: TbPhieuNhapUncheckedCreateNestedManyWithoutNhaCungCapInput
  }

  export type TbNhaCungCapUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhaCungCap?: StringFieldUpdateOperationsInput | string
    SDTNhaCungCap?: StringFieldUpdateOperationsInput | string
    EmailNhaCungCap?: StringFieldUpdateOperationsInput | string
    PhieuNhap?: TbPhieuNhapUpdateManyWithoutNhaCungCapNestedInput
  }

  export type TbNhaCungCapUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhaCungCap?: StringFieldUpdateOperationsInput | string
    SDTNhaCungCap?: StringFieldUpdateOperationsInput | string
    EmailNhaCungCap?: StringFieldUpdateOperationsInput | string
    PhieuNhap?: TbPhieuNhapUncheckedUpdateManyWithoutNhaCungCapNestedInput
  }

  export type TbNhaCungCapCreateManyInput = {
    id?: string
    TenNhaCungCap: string
    SDTNhaCungCap: string
    EmailNhaCungCap: string
  }

  export type TbNhaCungCapUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhaCungCap?: StringFieldUpdateOperationsInput | string
    SDTNhaCungCap?: StringFieldUpdateOperationsInput | string
    EmailNhaCungCap?: StringFieldUpdateOperationsInput | string
  }

  export type TbNhaCungCapUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhaCungCap?: StringFieldUpdateOperationsInput | string
    SDTNhaCungCap?: StringFieldUpdateOperationsInput | string
    EmailNhaCungCap?: StringFieldUpdateOperationsInput | string
  }

  export type TbPhongCreateInput = {
    id?: string
    TenPhong: string
    GhiChu?: string | null
    Status?: $Enums.tbphong_Status
    StatusDatCho?: $Enums.tbdatcho_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    NhomKhuVucPhong: TbNhomKhuVucPhongCreateNestedOneWithoutPhongInput
    LoaiPhong: TbLoaiPhongCreateNestedOneWithoutPhongInput
    DatCho?: TbDatChoCreateNestedManyWithoutPhongInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongCreateNestedManyWithoutPhongInput
  }

  export type TbPhongUncheckedCreateInput = {
    id?: string
    MaLoaiPhong: string
    MaNhomKhuVucPhong: string
    TenPhong: string
    GhiChu?: string | null
    Status?: $Enums.tbphong_Status
    StatusDatCho?: $Enums.tbdatcho_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    DatCho?: TbDatChoUncheckedCreateNestedManyWithoutPhongInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongUncheckedCreateNestedManyWithoutPhongInput
  }

  export type TbPhongUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NhomKhuVucPhong?: TbNhomKhuVucPhongUpdateOneRequiredWithoutPhongNestedInput
    LoaiPhong?: TbLoaiPhongUpdateOneRequiredWithoutPhongNestedInput
    DatCho?: TbDatChoUpdateManyWithoutPhongNestedInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongUpdateManyWithoutPhongNestedInput
  }

  export type TbPhongUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaLoaiPhong?: StringFieldUpdateOperationsInput | string
    MaNhomKhuVucPhong?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DatCho?: TbDatChoUncheckedUpdateManyWithoutPhongNestedInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongUncheckedUpdateManyWithoutPhongNestedInput
  }

  export type TbPhongCreateManyInput = {
    id?: string
    MaLoaiPhong: string
    MaNhomKhuVucPhong: string
    TenPhong: string
    GhiChu?: string | null
    Status?: $Enums.tbphong_Status
    StatusDatCho?: $Enums.tbdatcho_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbPhongUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbPhongUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaLoaiPhong?: StringFieldUpdateOperationsInput | string
    MaNhomKhuVucPhong?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbNhomKhuVucPhongCreateInput = {
    id?: string
    TenNhomKhuVuc: string
    GhiChu?: string | null
    Phong?: TbPhongCreateNestedManyWithoutNhomKhuVucPhongInput
    KhachSan: TbKhachSanCreateNestedOneWithoutNhomKhuVucPhongInput
  }

  export type TbNhomKhuVucPhongUncheckedCreateInput = {
    id?: string
    MaKhachSan: string
    TenNhomKhuVuc: string
    GhiChu?: string | null
    Phong?: TbPhongUncheckedCreateNestedManyWithoutNhomKhuVucPhongInput
  }

  export type TbNhomKhuVucPhongUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomKhuVuc?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Phong?: TbPhongUpdateManyWithoutNhomKhuVucPhongNestedInput
    KhachSan?: TbKhachSanUpdateOneRequiredWithoutNhomKhuVucPhongNestedInput
  }

  export type TbNhomKhuVucPhongUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenNhomKhuVuc?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Phong?: TbPhongUncheckedUpdateManyWithoutNhomKhuVucPhongNestedInput
  }

  export type TbNhomKhuVucPhongCreateManyInput = {
    id?: string
    MaKhachSan: string
    TenNhomKhuVuc: string
    GhiChu?: string | null
  }

  export type TbNhomKhuVucPhongUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomKhuVuc?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TbNhomKhuVucPhongUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenNhomKhuVuc?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateInput = {
    id?: string
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.tbtaikhoan_VaiTro
    avatar?: AvatarsCreateNestedOneWithoutUserInput
    ChiNhanh?: TbChiNhanhCreateNestedManyWithoutTaiKhoanAdminInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.tbtaikhoan_VaiTro
    avatar?: AvatarsUncheckedCreateNestedOneWithoutUserInput
    ChiNhanh?: TbChiNhanhUncheckedCreateNestedManyWithoutTaiKhoanAdminInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoan_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoan_VaiTro
    avatar?: AvatarsUpdateOneWithoutUserNestedInput
    ChiNhanh?: TbChiNhanhUpdateManyWithoutTaiKhoanAdminNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoan_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoan_VaiTro
    avatar?: AvatarsUncheckedUpdateOneWithoutUserNestedInput
    ChiNhanh?: TbChiNhanhUncheckedUpdateManyWithoutTaiKhoanAdminNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.tbtaikhoan_VaiTro
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoan_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoan_VaiTro
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoan_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoan_VaiTro
  }

  export type SubUserCreateInput = {
    id?: string
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role: $Enums.tbtaikhoancon_VaiTro
    subAvatar?: SubAvatarsCreateNestedOneWithoutSub_userInput
    HoaDon?: TbHoaDonCreateNestedManyWithoutTaiKhoanSubInput
    KhachSan?: TbKhachSanCreateNestedOneWithoutTaiKhoanSubInput
  }

  export type SubUserUncheckedCreateInput = {
    id?: string
    MaKhachSan?: string | null
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role: $Enums.tbtaikhoancon_VaiTro
    subAvatar?: SubAvatarsUncheckedCreateNestedOneWithoutSub_userInput
    HoaDon?: TbHoaDonUncheckedCreateNestedManyWithoutTaiKhoanSubInput
  }

  export type SubUserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoancon_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoancon_VaiTro
    subAvatar?: SubAvatarsUpdateOneWithoutSub_userNestedInput
    HoaDon?: TbHoaDonUpdateManyWithoutTaiKhoanSubNestedInput
    KhachSan?: TbKhachSanUpdateOneWithoutTaiKhoanSubNestedInput
  }

  export type SubUserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoancon_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoancon_VaiTro
    subAvatar?: SubAvatarsUncheckedUpdateOneWithoutSub_userNestedInput
    HoaDon?: TbHoaDonUncheckedUpdateManyWithoutTaiKhoanSubNestedInput
  }

  export type SubUserCreateManyInput = {
    id?: string
    MaKhachSan?: string | null
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role: $Enums.tbtaikhoancon_VaiTro
  }

  export type SubUserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoancon_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoancon_VaiTro
  }

  export type SubUserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoancon_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoancon_VaiTro
  }

  export type AvatarsCreateInput = {
    id?: string
    public_id: string
    url: string
    user: UserCreateNestedOneWithoutAvatarInput
  }

  export type AvatarsUncheckedCreateInput = {
    id?: string
    public_id: string
    url: string
    userId: string
  }

  export type AvatarsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    public_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutAvatarNestedInput
  }

  export type AvatarsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    public_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type AvatarsCreateManyInput = {
    id?: string
    public_id: string
    url: string
    userId: string
  }

  export type AvatarsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    public_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type AvatarsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    public_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type SubAvatarsCreateInput = {
    id?: string
    public_id: string
    url: string
    sub_user: SubUserCreateNestedOneWithoutSubAvatarInput
  }

  export type SubAvatarsUncheckedCreateInput = {
    id?: string
    public_id: string
    url: string
    subUserId: string
  }

  export type SubAvatarsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    public_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    sub_user?: SubUserUpdateOneRequiredWithoutSubAvatarNestedInput
  }

  export type SubAvatarsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    public_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    subUserId?: StringFieldUpdateOperationsInput | string
  }

  export type SubAvatarsCreateManyInput = {
    id?: string
    public_id: string
    url: string
    subUserId: string
  }

  export type SubAvatarsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    public_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type SubAvatarsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    public_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    subUserId?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type TbKhachSanListRelationFilter = {
    every?: TbKhachSanWhereInput
    some?: TbKhachSanWhereInput
    none?: TbKhachSanWhereInput
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type TbKhachSanOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbChiNhanhCountOrderByAggregateInput = {
    id?: SortOrder
    MaAdmin?: SortOrder
    TenChiNhanh?: SortOrder
    SDTChiNhanh?: SortOrder
    DiaChiChiNhanh?: SortOrder
  }

  export type TbChiNhanhMaxOrderByAggregateInput = {
    id?: SortOrder
    MaAdmin?: SortOrder
    TenChiNhanh?: SortOrder
    SDTChiNhanh?: SortOrder
    DiaChiChiNhanh?: SortOrder
  }

  export type TbChiNhanhMinOrderByAggregateInput = {
    id?: SortOrder
    MaAdmin?: SortOrder
    TenChiNhanh?: SortOrder
    SDTChiNhanh?: SortOrder
    DiaChiChiNhanh?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type TbDatChoRelationFilter = {
    is?: TbDatChoWhereInput
    isNot?: TbDatChoWhereInput
  }

  export type TbDichVuNullableRelationFilter = {
    is?: TbDichVuWhereInput | null
    isNot?: TbDichVuWhereInput | null
  }

  export type TbHoaDonNullableRelationFilter = {
    is?: TbHoaDonWhereInput | null
    isNot?: TbHoaDonWhereInput | null
  }

  export type TbChiTietDichVuDatChoCountOrderByAggregateInput = {
    id?: SortOrder
    MaDatCho?: SortOrder
    MaDichVu?: SortOrder
    MaHoaDon?: SortOrder
    MoTa?: SortOrder
    createAt?: SortOrder
  }

  export type TbChiTietDichVuDatChoMaxOrderByAggregateInput = {
    id?: SortOrder
    MaDatCho?: SortOrder
    MaDichVu?: SortOrder
    MaHoaDon?: SortOrder
    MoTa?: SortOrder
    createAt?: SortOrder
  }

  export type TbChiTietDichVuDatChoMinOrderByAggregateInput = {
    id?: SortOrder
    MaDatCho?: SortOrder
    MaDichVu?: SortOrder
    MaHoaDon?: SortOrder
    MoTa?: SortOrder
    createAt?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type Enumloaikhach_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.loaikhach_Status | Enumloaikhach_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.loaikhach_Status[]
    notIn?: $Enums.loaikhach_Status[]
    not?: NestedEnumloaikhach_StatusFilter<$PrismaModel> | $Enums.loaikhach_Status
  }

  export type Enumthongbao_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.thongbao_Status | Enumthongbao_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.thongbao_Status[]
    notIn?: $Enums.thongbao_Status[]
    not?: NestedEnumthongbao_StatusFilter<$PrismaModel> | $Enums.thongbao_Status
  }

  export type TbChiTietDichVuDatChoListRelationFilter = {
    every?: TbChiTietDichVuDatChoWhereInput
    some?: TbChiTietDichVuDatChoWhereInput
    none?: TbChiTietDichVuDatChoWhereInput
  }

  export type TbKhachHangRelationFilter = {
    is?: TbKhachHangWhereInput
    isNot?: TbKhachHangWhereInput
  }

  export type TbPhongRelationFilter = {
    is?: TbPhongWhereInput
    isNot?: TbPhongWhereInput
  }

  export type TbChiTietDichVuDatChoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbDatChoCountOrderByAggregateInput = {
    id?: SortOrder
    MaKH?: SortOrder
    MaPhong?: SortOrder
    NgayDatCho?: SortOrder
    NgayNhanPhong?: SortOrder
    NgayTraPhong?: SortOrder
    SLNguoiLonDiKem?: SortOrder
    SLTreEmDiKem?: SortOrder
    LoaiKhach?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbDatChoAvgOrderByAggregateInput = {
    SLNguoiLonDiKem?: SortOrder
    SLTreEmDiKem?: SortOrder
  }

  export type TbDatChoMaxOrderByAggregateInput = {
    id?: SortOrder
    MaKH?: SortOrder
    MaPhong?: SortOrder
    NgayDatCho?: SortOrder
    NgayNhanPhong?: SortOrder
    NgayTraPhong?: SortOrder
    SLNguoiLonDiKem?: SortOrder
    SLTreEmDiKem?: SortOrder
    LoaiKhach?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbDatChoMinOrderByAggregateInput = {
    id?: SortOrder
    MaKH?: SortOrder
    MaPhong?: SortOrder
    NgayDatCho?: SortOrder
    NgayNhanPhong?: SortOrder
    NgayTraPhong?: SortOrder
    SLNguoiLonDiKem?: SortOrder
    SLTreEmDiKem?: SortOrder
    LoaiKhach?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbDatChoSumOrderByAggregateInput = {
    SLNguoiLonDiKem?: SortOrder
    SLTreEmDiKem?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type Enumloaikhach_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.loaikhach_Status | Enumloaikhach_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.loaikhach_Status[]
    notIn?: $Enums.loaikhach_Status[]
    not?: NestedEnumloaikhach_StatusWithAggregatesFilter<$PrismaModel> | $Enums.loaikhach_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumloaikhach_StatusFilter<$PrismaModel>
    _max?: NestedEnumloaikhach_StatusFilter<$PrismaModel>
  }

  export type Enumthongbao_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.thongbao_Status | Enumthongbao_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.thongbao_Status[]
    notIn?: $Enums.thongbao_Status[]
    not?: NestedEnumthongbao_StatusWithAggregatesFilter<$PrismaModel> | $Enums.thongbao_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumthongbao_StatusFilter<$PrismaModel>
    _max?: NestedEnumthongbao_StatusFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type TbNhomDichVuRelationFilter = {
    is?: TbNhomDichVuWhereInput
    isNot?: TbNhomDichVuWhereInput
  }

  export type TbCacLinkAnhDichVuListRelationFilter = {
    every?: TbCacLinkAnhDichVuWhereInput
    some?: TbCacLinkAnhDichVuWhereInput
    none?: TbCacLinkAnhDichVuWhereInput
  }

  export type TbCacLinkAnhDichVuOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbDichVuCountOrderByAggregateInput = {
    id?: SortOrder
    MaNhomDichVu?: SortOrder
    TenDichVu?: SortOrder
    DonViTinh?: SortOrder
    GiaVon?: SortOrder
    GiaBan?: SortOrder
    ThoiLuong?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbDichVuAvgOrderByAggregateInput = {
    GiaVon?: SortOrder
    GiaBan?: SortOrder
    ThoiLuong?: SortOrder
  }

  export type TbDichVuMaxOrderByAggregateInput = {
    id?: SortOrder
    MaNhomDichVu?: SortOrder
    TenDichVu?: SortOrder
    DonViTinh?: SortOrder
    GiaVon?: SortOrder
    GiaBan?: SortOrder
    ThoiLuong?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbDichVuMinOrderByAggregateInput = {
    id?: SortOrder
    MaNhomDichVu?: SortOrder
    TenDichVu?: SortOrder
    DonViTinh?: SortOrder
    GiaVon?: SortOrder
    GiaBan?: SortOrder
    ThoiLuong?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbDichVuSumOrderByAggregateInput = {
    GiaVon?: SortOrder
    GiaBan?: SortOrder
    ThoiLuong?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type TbDichVuListRelationFilter = {
    every?: TbDichVuWhereInput
    some?: TbDichVuWhereInput
    none?: TbDichVuWhereInput
  }

  export type TbKhachSanRelationFilter = {
    is?: TbKhachSanWhereInput
    isNot?: TbKhachSanWhereInput
  }

  export type TbDichVuOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbNhomDichVuCountOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomDichVu?: SortOrder
  }

  export type TbNhomDichVuMaxOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomDichVu?: SortOrder
  }

  export type TbNhomDichVuMinOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomDichVu?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type TbNhomHangHoaRelationFilter = {
    is?: TbNhomHangHoaWhereInput
    isNot?: TbNhomHangHoaWhereInput
  }

  export type TbCacLinkAnhHangHoaListRelationFilter = {
    every?: TbCacLinkAnhHangHoaWhereInput
    some?: TbCacLinkAnhHangHoaWhereInput
    none?: TbCacLinkAnhHangHoaWhereInput
  }

  export type TbChiTietNoiDungNhapListRelationFilter = {
    every?: TbChiTietNoiDungNhapWhereInput
    some?: TbChiTietNoiDungNhapWhereInput
    none?: TbChiTietNoiDungNhapWhereInput
  }

  export type TbCacLinkAnhHangHoaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbChiTietNoiDungNhapOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbHangHoaCountOrderByAggregateInput = {
    id?: SortOrder
    MaNhomHangHoa?: SortOrder
    TenHangHoa?: SortOrder
    DonViTinh?: SortOrder
    GiaGocHangHoa?: SortOrder
    GiaBanHangHoa?: SortOrder
    SLTonKho?: SortOrder
    DinhMucTonItNhat?: SortOrder
    DinhMucTonNhieuNhat?: SortOrder
    TrongLuong?: SortOrder
    MoTa?: SortOrder
    GhiChu?: SortOrder
    ViTri?: SortOrder
    StatusThongBao?: SortOrder
  }

  export type TbHangHoaAvgOrderByAggregateInput = {
    GiaGocHangHoa?: SortOrder
    GiaBanHangHoa?: SortOrder
    SLTonKho?: SortOrder
    DinhMucTonItNhat?: SortOrder
    DinhMucTonNhieuNhat?: SortOrder
  }

  export type TbHangHoaMaxOrderByAggregateInput = {
    id?: SortOrder
    MaNhomHangHoa?: SortOrder
    TenHangHoa?: SortOrder
    DonViTinh?: SortOrder
    GiaGocHangHoa?: SortOrder
    GiaBanHangHoa?: SortOrder
    SLTonKho?: SortOrder
    DinhMucTonItNhat?: SortOrder
    DinhMucTonNhieuNhat?: SortOrder
    TrongLuong?: SortOrder
    MoTa?: SortOrder
    GhiChu?: SortOrder
    ViTri?: SortOrder
    StatusThongBao?: SortOrder
  }

  export type TbHangHoaMinOrderByAggregateInput = {
    id?: SortOrder
    MaNhomHangHoa?: SortOrder
    TenHangHoa?: SortOrder
    DonViTinh?: SortOrder
    GiaGocHangHoa?: SortOrder
    GiaBanHangHoa?: SortOrder
    SLTonKho?: SortOrder
    DinhMucTonItNhat?: SortOrder
    DinhMucTonNhieuNhat?: SortOrder
    TrongLuong?: SortOrder
    MoTa?: SortOrder
    GhiChu?: SortOrder
    ViTri?: SortOrder
    StatusThongBao?: SortOrder
  }

  export type TbHangHoaSumOrderByAggregateInput = {
    GiaGocHangHoa?: SortOrder
    GiaBanHangHoa?: SortOrder
    SLTonKho?: SortOrder
    DinhMucTonItNhat?: SortOrder
    DinhMucTonNhieuNhat?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type Enumtbphieunhap_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.tbphieunhap_Status | Enumtbphieunhap_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbphieunhap_Status[]
    notIn?: $Enums.tbphieunhap_Status[]
    not?: NestedEnumtbphieunhap_StatusFilter<$PrismaModel> | $Enums.tbphieunhap_Status
  }

  export type TbNhaCungCapNullableRelationFilter = {
    is?: TbNhaCungCapWhereInput | null
    isNot?: TbNhaCungCapWhereInput | null
  }

  export type TbPhieuNhapCountOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    MaNhaCungCap?: SortOrder
    CacKhoanChiPhiPhatSinhHangHoa?: SortOrder
    TongTienCanTra?: SortOrder
    TienDaTra?: SortOrder
    Status?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbPhieuNhapAvgOrderByAggregateInput = {
    CacKhoanChiPhiPhatSinhHangHoa?: SortOrder
    TongTienCanTra?: SortOrder
    TienDaTra?: SortOrder
  }

  export type TbPhieuNhapMaxOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    MaNhaCungCap?: SortOrder
    CacKhoanChiPhiPhatSinhHangHoa?: SortOrder
    TongTienCanTra?: SortOrder
    TienDaTra?: SortOrder
    Status?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbPhieuNhapMinOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    MaNhaCungCap?: SortOrder
    CacKhoanChiPhiPhatSinhHangHoa?: SortOrder
    TongTienCanTra?: SortOrder
    TienDaTra?: SortOrder
    Status?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbPhieuNhapSumOrderByAggregateInput = {
    CacKhoanChiPhiPhatSinhHangHoa?: SortOrder
    TongTienCanTra?: SortOrder
    TienDaTra?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type Enumtbphieunhap_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbphieunhap_Status | Enumtbphieunhap_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbphieunhap_Status[]
    notIn?: $Enums.tbphieunhap_Status[]
    not?: NestedEnumtbphieunhap_StatusWithAggregatesFilter<$PrismaModel> | $Enums.tbphieunhap_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtbphieunhap_StatusFilter<$PrismaModel>
    _max?: NestedEnumtbphieunhap_StatusFilter<$PrismaModel>
  }

  export type TbHangHoaRelationFilter = {
    is?: TbHangHoaWhereInput
    isNot?: TbHangHoaWhereInput
  }

  export type TbPhieuNhapRelationFilter = {
    is?: TbPhieuNhapWhereInput
    isNot?: TbPhieuNhapWhereInput
  }

  export type TbChiTietNoiDungNhapCountOrderByAggregateInput = {
    id?: SortOrder
    MaHangHoa?: SortOrder
    MaPhieuNhap?: SortOrder
    ThanhTien?: SortOrder
    SLNhap?: SortOrder
    GiamGia?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbChiTietNoiDungNhapAvgOrderByAggregateInput = {
    ThanhTien?: SortOrder
    SLNhap?: SortOrder
    GiamGia?: SortOrder
  }

  export type TbChiTietNoiDungNhapMaxOrderByAggregateInput = {
    id?: SortOrder
    MaHangHoa?: SortOrder
    MaPhieuNhap?: SortOrder
    ThanhTien?: SortOrder
    SLNhap?: SortOrder
    GiamGia?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbChiTietNoiDungNhapMinOrderByAggregateInput = {
    id?: SortOrder
    MaHangHoa?: SortOrder
    MaPhieuNhap?: SortOrder
    ThanhTien?: SortOrder
    SLNhap?: SortOrder
    GiamGia?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbChiTietNoiDungNhapSumOrderByAggregateInput = {
    ThanhTien?: SortOrder
    SLNhap?: SortOrder
    GiamGia?: SortOrder
  }

  export type TbHangHoaListRelationFilter = {
    every?: TbHangHoaWhereInput
    some?: TbHangHoaWhereInput
    none?: TbHangHoaWhereInput
  }

  export type TbHangHoaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbNhomHangHoaCountOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomHangHoa?: SortOrder
  }

  export type TbNhomHangHoaMaxOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomHangHoa?: SortOrder
  }

  export type TbNhomHangHoaMinOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomHangHoa?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type Enumtbhoadon_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.tbhoadon_Status | Enumtbhoadon_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbhoadon_Status[]
    notIn?: $Enums.tbhoadon_Status[]
    not?: NestedEnumtbhoadon_StatusFilter<$PrismaModel> | $Enums.tbhoadon_Status
  }

  export type Enumtbhoadon_PhuongThucThanhToanNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.tbhoadon_PhuongThucThanhToan | Enumtbhoadon_PhuongThucThanhToanFieldRefInput<$PrismaModel> | null
    in?: $Enums.tbhoadon_PhuongThucThanhToan[] | null
    notIn?: $Enums.tbhoadon_PhuongThucThanhToan[] | null
    not?: NestedEnumtbhoadon_PhuongThucThanhToanNullableFilter<$PrismaModel> | $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type SubUserNullableRelationFilter = {
    is?: SubUserWhereInput | null
    isNot?: SubUserWhereInput | null
  }

  export type TbHoaDonCountOrderByAggregateInput = {
    id?: SortOrder
    MaTaiKhoanSub?: SortOrder
    MaKhachSan?: SortOrder
    TongHoaDon?: SortOrder
    KhachThanhToan?: SortOrder
    NgayThanhToan?: SortOrder
    GhiChu?: SortOrder
    Status?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    PhuongThucThanhToan?: SortOrder
  }

  export type TbHoaDonAvgOrderByAggregateInput = {
    TongHoaDon?: SortOrder
    KhachThanhToan?: SortOrder
  }

  export type TbHoaDonMaxOrderByAggregateInput = {
    id?: SortOrder
    MaTaiKhoanSub?: SortOrder
    MaKhachSan?: SortOrder
    TongHoaDon?: SortOrder
    KhachThanhToan?: SortOrder
    NgayThanhToan?: SortOrder
    GhiChu?: SortOrder
    Status?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    PhuongThucThanhToan?: SortOrder
  }

  export type TbHoaDonMinOrderByAggregateInput = {
    id?: SortOrder
    MaTaiKhoanSub?: SortOrder
    MaKhachSan?: SortOrder
    TongHoaDon?: SortOrder
    KhachThanhToan?: SortOrder
    NgayThanhToan?: SortOrder
    GhiChu?: SortOrder
    Status?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
    PhuongThucThanhToan?: SortOrder
  }

  export type TbHoaDonSumOrderByAggregateInput = {
    TongHoaDon?: SortOrder
    KhachThanhToan?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type Enumtbhoadon_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbhoadon_Status | Enumtbhoadon_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbhoadon_Status[]
    notIn?: $Enums.tbhoadon_Status[]
    not?: NestedEnumtbhoadon_StatusWithAggregatesFilter<$PrismaModel> | $Enums.tbhoadon_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtbhoadon_StatusFilter<$PrismaModel>
    _max?: NestedEnumtbhoadon_StatusFilter<$PrismaModel>
  }

  export type Enumtbhoadon_PhuongThucThanhToanNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbhoadon_PhuongThucThanhToan | Enumtbhoadon_PhuongThucThanhToanFieldRefInput<$PrismaModel> | null
    in?: $Enums.tbhoadon_PhuongThucThanhToan[] | null
    notIn?: $Enums.tbhoadon_PhuongThucThanhToan[] | null
    not?: NestedEnumtbhoadon_PhuongThucThanhToanNullableWithAggregatesFilter<$PrismaModel> | $Enums.tbhoadon_PhuongThucThanhToan | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtbhoadon_PhuongThucThanhToanNullableFilter<$PrismaModel>
    _max?: NestedEnumtbhoadon_PhuongThucThanhToanNullableFilter<$PrismaModel>
  }

  export type TbDatChoListRelationFilter = {
    every?: TbDatChoWhereInput
    some?: TbDatChoWhereInput
    none?: TbDatChoWhereInput
  }

  export type TbDatChoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbKhachHangCountOrderByAggregateInput = {
    id?: SortOrder
    TenKH?: SortOrder
    SDTKH?: SortOrder
    EmailKH?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbKhachHangMaxOrderByAggregateInput = {
    id?: SortOrder
    TenKH?: SortOrder
    SDTKH?: SortOrder
    EmailKH?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbKhachHangMinOrderByAggregateInput = {
    id?: SortOrder
    TenKH?: SortOrder
    SDTKH?: SortOrder
    EmailKH?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type SubUserListRelationFilter = {
    every?: SubUserWhereInput
    some?: SubUserWhereInput
    none?: SubUserWhereInput
  }

  export type TbHoaDonListRelationFilter = {
    every?: TbHoaDonWhereInput
    some?: TbHoaDonWhereInput
    none?: TbHoaDonWhereInput
  }

  export type TbPhieuNhapListRelationFilter = {
    every?: TbPhieuNhapWhereInput
    some?: TbPhieuNhapWhereInput
    none?: TbPhieuNhapWhereInput
  }

  export type TbNhomKhuVucPhongListRelationFilter = {
    every?: TbNhomKhuVucPhongWhereInput
    some?: TbNhomKhuVucPhongWhereInput
    none?: TbNhomKhuVucPhongWhereInput
  }

  export type TbNhomHangHoaListRelationFilter = {
    every?: TbNhomHangHoaWhereInput
    some?: TbNhomHangHoaWhereInput
    none?: TbNhomHangHoaWhereInput
  }

  export type TbNhomDichVuListRelationFilter = {
    every?: TbNhomDichVuWhereInput
    some?: TbNhomDichVuWhereInput
    none?: TbNhomDichVuWhereInput
  }

  export type TbChiNhanhRelationFilter = {
    is?: TbChiNhanhWhereInput
    isNot?: TbChiNhanhWhereInput
  }

  export type SubUserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbHoaDonOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbPhieuNhapOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbNhomKhuVucPhongOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbNhomHangHoaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbNhomDichVuOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbKhachSanCountOrderByAggregateInput = {
    id?: SortOrder
    MaChiNhanh?: SortOrder
    TenKhachSan?: SortOrder
    DiaChiKhachSan?: SortOrder
    SDTKhachSan?: SortOrder
    EmailKhachSan?: SortOrder
  }

  export type TbKhachSanMaxOrderByAggregateInput = {
    id?: SortOrder
    MaChiNhanh?: SortOrder
    TenKhachSan?: SortOrder
    DiaChiKhachSan?: SortOrder
    SDTKhachSan?: SortOrder
    EmailKhachSan?: SortOrder
  }

  export type TbKhachSanMinOrderByAggregateInput = {
    id?: SortOrder
    MaChiNhanh?: SortOrder
    TenKhachSan?: SortOrder
    DiaChiKhachSan?: SortOrder
    SDTKhachSan?: SortOrder
    EmailKhachSan?: SortOrder
  }

  export type TbCacLinkAnhLoaiPhongListRelationFilter = {
    every?: TbCacLinkAnhLoaiPhongWhereInput
    some?: TbCacLinkAnhLoaiPhongWhereInput
    none?: TbCacLinkAnhLoaiPhongWhereInput
  }

  export type TbPhongListRelationFilter = {
    every?: TbPhongWhereInput
    some?: TbPhongWhereInput
    none?: TbPhongWhereInput
  }

  export type TbCacLinkAnhLoaiPhongOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbPhongOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbLoaiPhongCountOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenLoaiPhong?: SortOrder
    GiaTheoGio?: SortOrder
    GiaTheoNgay?: SortOrder
  }

  export type TbLoaiPhongAvgOrderByAggregateInput = {
    GiaTheoGio?: SortOrder
    GiaTheoNgay?: SortOrder
  }

  export type TbLoaiPhongMaxOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenLoaiPhong?: SortOrder
    GiaTheoGio?: SortOrder
    GiaTheoNgay?: SortOrder
  }

  export type TbLoaiPhongMinOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenLoaiPhong?: SortOrder
    GiaTheoGio?: SortOrder
    GiaTheoNgay?: SortOrder
  }

  export type TbLoaiPhongSumOrderByAggregateInput = {
    GiaTheoGio?: SortOrder
    GiaTheoNgay?: SortOrder
  }

  export type TbLoaiPhongRelationFilter = {
    is?: TbLoaiPhongWhereInput
    isNot?: TbLoaiPhongWhereInput
  }

  export type TbCacLinkAnhLoaiPhongCountOrderByAggregateInput = {
    id?: SortOrder
    MaLoaiPhong?: SortOrder
    LinkAnh?: SortOrder
  }

  export type TbCacLinkAnhLoaiPhongMaxOrderByAggregateInput = {
    id?: SortOrder
    MaLoaiPhong?: SortOrder
    LinkAnh?: SortOrder
  }

  export type TbCacLinkAnhLoaiPhongMinOrderByAggregateInput = {
    id?: SortOrder
    MaLoaiPhong?: SortOrder
    LinkAnh?: SortOrder
  }

  export type TbDichVuRelationFilter = {
    is?: TbDichVuWhereInput
    isNot?: TbDichVuWhereInput
  }

  export type TbCacLinkAnhDichVuCountOrderByAggregateInput = {
    id?: SortOrder
    MaDichVu?: SortOrder
    LinkAnh?: SortOrder
  }

  export type TbCacLinkAnhDichVuMaxOrderByAggregateInput = {
    id?: SortOrder
    MaDichVu?: SortOrder
    LinkAnh?: SortOrder
  }

  export type TbCacLinkAnhDichVuMinOrderByAggregateInput = {
    id?: SortOrder
    MaDichVu?: SortOrder
    LinkAnh?: SortOrder
  }

  export type TbCacLinkAnhHangHoaCountOrderByAggregateInput = {
    id?: SortOrder
    MaHangHoa?: SortOrder
    LinkAnh?: SortOrder
  }

  export type TbCacLinkAnhHangHoaMaxOrderByAggregateInput = {
    id?: SortOrder
    MaHangHoa?: SortOrder
    LinkAnh?: SortOrder
  }

  export type TbCacLinkAnhHangHoaMinOrderByAggregateInput = {
    id?: SortOrder
    MaHangHoa?: SortOrder
    LinkAnh?: SortOrder
  }

  export type TbCacLinkAnhPhongCountOrderByAggregateInput = {
    id?: SortOrder
    MaPhong?: SortOrder
    LinkAnh?: SortOrder
  }

  export type TbCacLinkAnhPhongMaxOrderByAggregateInput = {
    id?: SortOrder
    MaPhong?: SortOrder
    LinkAnh?: SortOrder
  }

  export type TbCacLinkAnhPhongMinOrderByAggregateInput = {
    id?: SortOrder
    MaPhong?: SortOrder
    LinkAnh?: SortOrder
  }

  export type TbNhaCungCapCountOrderByAggregateInput = {
    id?: SortOrder
    TenNhaCungCap?: SortOrder
    SDTNhaCungCap?: SortOrder
    EmailNhaCungCap?: SortOrder
  }

  export type TbNhaCungCapMaxOrderByAggregateInput = {
    id?: SortOrder
    TenNhaCungCap?: SortOrder
    SDTNhaCungCap?: SortOrder
    EmailNhaCungCap?: SortOrder
  }

  export type TbNhaCungCapMinOrderByAggregateInput = {
    id?: SortOrder
    TenNhaCungCap?: SortOrder
    SDTNhaCungCap?: SortOrder
    EmailNhaCungCap?: SortOrder
  }

  export type Enumtbphong_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.tbphong_Status | Enumtbphong_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbphong_Status[]
    notIn?: $Enums.tbphong_Status[]
    not?: NestedEnumtbphong_StatusFilter<$PrismaModel> | $Enums.tbphong_Status
  }

  export type Enumtbdatcho_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.tbdatcho_Status | Enumtbdatcho_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbdatcho_Status[]
    notIn?: $Enums.tbdatcho_Status[]
    not?: NestedEnumtbdatcho_StatusFilter<$PrismaModel> | $Enums.tbdatcho_Status
  }

  export type TbNhomKhuVucPhongRelationFilter = {
    is?: TbNhomKhuVucPhongWhereInput
    isNot?: TbNhomKhuVucPhongWhereInput
  }

  export type TbCacLinkAnhPhongListRelationFilter = {
    every?: TbCacLinkAnhPhongWhereInput
    some?: TbCacLinkAnhPhongWhereInput
    none?: TbCacLinkAnhPhongWhereInput
  }

  export type TbCacLinkAnhPhongOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TbPhongCountOrderByAggregateInput = {
    id?: SortOrder
    MaLoaiPhong?: SortOrder
    MaNhomKhuVucPhong?: SortOrder
    TenPhong?: SortOrder
    GhiChu?: SortOrder
    Status?: SortOrder
    StatusDatCho?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbPhongMaxOrderByAggregateInput = {
    id?: SortOrder
    MaLoaiPhong?: SortOrder
    MaNhomKhuVucPhong?: SortOrder
    TenPhong?: SortOrder
    GhiChu?: SortOrder
    Status?: SortOrder
    StatusDatCho?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type TbPhongMinOrderByAggregateInput = {
    id?: SortOrder
    MaLoaiPhong?: SortOrder
    MaNhomKhuVucPhong?: SortOrder
    TenPhong?: SortOrder
    GhiChu?: SortOrder
    Status?: SortOrder
    StatusDatCho?: SortOrder
    StatusThongBao?: SortOrder
    createAt?: SortOrder
    updateAt?: SortOrder
  }

  export type Enumtbphong_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbphong_Status | Enumtbphong_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbphong_Status[]
    notIn?: $Enums.tbphong_Status[]
    not?: NestedEnumtbphong_StatusWithAggregatesFilter<$PrismaModel> | $Enums.tbphong_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtbphong_StatusFilter<$PrismaModel>
    _max?: NestedEnumtbphong_StatusFilter<$PrismaModel>
  }

  export type Enumtbdatcho_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbdatcho_Status | Enumtbdatcho_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbdatcho_Status[]
    notIn?: $Enums.tbdatcho_Status[]
    not?: NestedEnumtbdatcho_StatusWithAggregatesFilter<$PrismaModel> | $Enums.tbdatcho_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtbdatcho_StatusFilter<$PrismaModel>
    _max?: NestedEnumtbdatcho_StatusFilter<$PrismaModel>
  }

  export type TbNhomKhuVucPhongCountOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomKhuVuc?: SortOrder
    GhiChu?: SortOrder
  }

  export type TbNhomKhuVucPhongMaxOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomKhuVuc?: SortOrder
    GhiChu?: SortOrder
  }

  export type TbNhomKhuVucPhongMinOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    TenNhomKhuVuc?: SortOrder
    GhiChu?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type Enumtbtaikhoan_VaiTroFilter<$PrismaModel = never> = {
    equals?: $Enums.tbtaikhoan_VaiTro | Enumtbtaikhoan_VaiTroFieldRefInput<$PrismaModel>
    in?: $Enums.tbtaikhoan_VaiTro[]
    notIn?: $Enums.tbtaikhoan_VaiTro[]
    not?: NestedEnumtbtaikhoan_VaiTroFilter<$PrismaModel> | $Enums.tbtaikhoan_VaiTro
  }

  export type AvatarsNullableRelationFilter = {
    is?: AvatarsWhereInput | null
    isNot?: AvatarsWhereInput | null
  }

  export type TbChiNhanhListRelationFilter = {
    every?: TbChiNhanhWhereInput
    some?: TbChiNhanhWhereInput
    none?: TbChiNhanhWhereInput
  }

  export type TbChiNhanhOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserUniquee_email_phone_numberCompoundUniqueInput = {
    email: string
    phone_number: number
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    password?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    phone_number?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    password?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    password?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    phone_number?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type Enumtbtaikhoan_VaiTroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbtaikhoan_VaiTro | Enumtbtaikhoan_VaiTroFieldRefInput<$PrismaModel>
    in?: $Enums.tbtaikhoan_VaiTro[]
    notIn?: $Enums.tbtaikhoan_VaiTro[]
    not?: NestedEnumtbtaikhoan_VaiTroWithAggregatesFilter<$PrismaModel> | $Enums.tbtaikhoan_VaiTro
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtbtaikhoan_VaiTroFilter<$PrismaModel>
    _max?: NestedEnumtbtaikhoan_VaiTroFilter<$PrismaModel>
  }

  export type Enumtbtaikhoancon_VaiTroFilter<$PrismaModel = never> = {
    equals?: $Enums.tbtaikhoancon_VaiTro | Enumtbtaikhoancon_VaiTroFieldRefInput<$PrismaModel>
    in?: $Enums.tbtaikhoancon_VaiTro[]
    notIn?: $Enums.tbtaikhoancon_VaiTro[]
    not?: NestedEnumtbtaikhoancon_VaiTroFilter<$PrismaModel> | $Enums.tbtaikhoancon_VaiTro
  }

  export type SubAvatarsNullableRelationFilter = {
    is?: SubAvatarsWhereInput | null
    isNot?: SubAvatarsWhereInput | null
  }

  export type TbKhachSanNullableRelationFilter = {
    is?: TbKhachSanWhereInput | null
    isNot?: TbKhachSanWhereInput | null
  }

  export type SubUserUniquee_sub_email_phone_numberCompoundUniqueInput = {
    email: string
    phone_number: number
  }

  export type SubUserCountOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    name?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    password?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
  }

  export type SubUserAvgOrderByAggregateInput = {
    phone_number?: SortOrder
  }

  export type SubUserMaxOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    name?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    password?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
  }

  export type SubUserMinOrderByAggregateInput = {
    id?: SortOrder
    MaKhachSan?: SortOrder
    name?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    password?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
  }

  export type SubUserSumOrderByAggregateInput = {
    phone_number?: SortOrder
  }

  export type Enumtbtaikhoancon_VaiTroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbtaikhoancon_VaiTro | Enumtbtaikhoancon_VaiTroFieldRefInput<$PrismaModel>
    in?: $Enums.tbtaikhoancon_VaiTro[]
    notIn?: $Enums.tbtaikhoancon_VaiTro[]
    not?: NestedEnumtbtaikhoancon_VaiTroWithAggregatesFilter<$PrismaModel> | $Enums.tbtaikhoancon_VaiTro
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtbtaikhoancon_VaiTroFilter<$PrismaModel>
    _max?: NestedEnumtbtaikhoancon_VaiTroFilter<$PrismaModel>
  }

  export type AvatarsCountOrderByAggregateInput = {
    id?: SortOrder
    public_id?: SortOrder
    url?: SortOrder
    userId?: SortOrder
  }

  export type AvatarsMaxOrderByAggregateInput = {
    id?: SortOrder
    public_id?: SortOrder
    url?: SortOrder
    userId?: SortOrder
  }

  export type AvatarsMinOrderByAggregateInput = {
    id?: SortOrder
    public_id?: SortOrder
    url?: SortOrder
    userId?: SortOrder
  }

  export type SubUserRelationFilter = {
    is?: SubUserWhereInput
    isNot?: SubUserWhereInput
  }

  export type SubAvatarsCountOrderByAggregateInput = {
    id?: SortOrder
    public_id?: SortOrder
    url?: SortOrder
    subUserId?: SortOrder
  }

  export type SubAvatarsMaxOrderByAggregateInput = {
    id?: SortOrder
    public_id?: SortOrder
    url?: SortOrder
    subUserId?: SortOrder
  }

  export type SubAvatarsMinOrderByAggregateInput = {
    id?: SortOrder
    public_id?: SortOrder
    url?: SortOrder
    subUserId?: SortOrder
  }

  export type TbKhachSanCreateNestedManyWithoutChiNhanhInput = {
    create?: XOR<TbKhachSanCreateWithoutChiNhanhInput, TbKhachSanUncheckedCreateWithoutChiNhanhInput> | TbKhachSanCreateWithoutChiNhanhInput[] | TbKhachSanUncheckedCreateWithoutChiNhanhInput[]
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutChiNhanhInput | TbKhachSanCreateOrConnectWithoutChiNhanhInput[]
    createMany?: TbKhachSanCreateManyChiNhanhInputEnvelope
    connect?: TbKhachSanWhereUniqueInput | TbKhachSanWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutChiNhanhInput = {
    create?: XOR<UserCreateWithoutChiNhanhInput, UserUncheckedCreateWithoutChiNhanhInput>
    connectOrCreate?: UserCreateOrConnectWithoutChiNhanhInput
    connect?: UserWhereUniqueInput
  }

  export type TbKhachSanUncheckedCreateNestedManyWithoutChiNhanhInput = {
    create?: XOR<TbKhachSanCreateWithoutChiNhanhInput, TbKhachSanUncheckedCreateWithoutChiNhanhInput> | TbKhachSanCreateWithoutChiNhanhInput[] | TbKhachSanUncheckedCreateWithoutChiNhanhInput[]
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutChiNhanhInput | TbKhachSanCreateOrConnectWithoutChiNhanhInput[]
    createMany?: TbKhachSanCreateManyChiNhanhInputEnvelope
    connect?: TbKhachSanWhereUniqueInput | TbKhachSanWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type TbKhachSanUpdateManyWithoutChiNhanhNestedInput = {
    create?: XOR<TbKhachSanCreateWithoutChiNhanhInput, TbKhachSanUncheckedCreateWithoutChiNhanhInput> | TbKhachSanCreateWithoutChiNhanhInput[] | TbKhachSanUncheckedCreateWithoutChiNhanhInput[]
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutChiNhanhInput | TbKhachSanCreateOrConnectWithoutChiNhanhInput[]
    upsert?: TbKhachSanUpsertWithWhereUniqueWithoutChiNhanhInput | TbKhachSanUpsertWithWhereUniqueWithoutChiNhanhInput[]
    createMany?: TbKhachSanCreateManyChiNhanhInputEnvelope
    set?: TbKhachSanWhereUniqueInput | TbKhachSanWhereUniqueInput[]
    disconnect?: TbKhachSanWhereUniqueInput | TbKhachSanWhereUniqueInput[]
    delete?: TbKhachSanWhereUniqueInput | TbKhachSanWhereUniqueInput[]
    connect?: TbKhachSanWhereUniqueInput | TbKhachSanWhereUniqueInput[]
    update?: TbKhachSanUpdateWithWhereUniqueWithoutChiNhanhInput | TbKhachSanUpdateWithWhereUniqueWithoutChiNhanhInput[]
    updateMany?: TbKhachSanUpdateManyWithWhereWithoutChiNhanhInput | TbKhachSanUpdateManyWithWhereWithoutChiNhanhInput[]
    deleteMany?: TbKhachSanScalarWhereInput | TbKhachSanScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutChiNhanhNestedInput = {
    create?: XOR<UserCreateWithoutChiNhanhInput, UserUncheckedCreateWithoutChiNhanhInput>
    connectOrCreate?: UserCreateOrConnectWithoutChiNhanhInput
    upsert?: UserUpsertWithoutChiNhanhInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChiNhanhInput, UserUpdateWithoutChiNhanhInput>, UserUncheckedUpdateWithoutChiNhanhInput>
  }

  export type TbKhachSanUncheckedUpdateManyWithoutChiNhanhNestedInput = {
    create?: XOR<TbKhachSanCreateWithoutChiNhanhInput, TbKhachSanUncheckedCreateWithoutChiNhanhInput> | TbKhachSanCreateWithoutChiNhanhInput[] | TbKhachSanUncheckedCreateWithoutChiNhanhInput[]
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutChiNhanhInput | TbKhachSanCreateOrConnectWithoutChiNhanhInput[]
    upsert?: TbKhachSanUpsertWithWhereUniqueWithoutChiNhanhInput | TbKhachSanUpsertWithWhereUniqueWithoutChiNhanhInput[]
    createMany?: TbKhachSanCreateManyChiNhanhInputEnvelope
    set?: TbKhachSanWhereUniqueInput | TbKhachSanWhereUniqueInput[]
    disconnect?: TbKhachSanWhereUniqueInput | TbKhachSanWhereUniqueInput[]
    delete?: TbKhachSanWhereUniqueInput | TbKhachSanWhereUniqueInput[]
    connect?: TbKhachSanWhereUniqueInput | TbKhachSanWhereUniqueInput[]
    update?: TbKhachSanUpdateWithWhereUniqueWithoutChiNhanhInput | TbKhachSanUpdateWithWhereUniqueWithoutChiNhanhInput[]
    updateMany?: TbKhachSanUpdateManyWithWhereWithoutChiNhanhInput | TbKhachSanUpdateManyWithWhereWithoutChiNhanhInput[]
    deleteMany?: TbKhachSanScalarWhereInput | TbKhachSanScalarWhereInput[]
  }

  export type TbDatChoCreateNestedOneWithoutChiTietDichVuDatChoInput = {
    create?: XOR<TbDatChoCreateWithoutChiTietDichVuDatChoInput, TbDatChoUncheckedCreateWithoutChiTietDichVuDatChoInput>
    connectOrCreate?: TbDatChoCreateOrConnectWithoutChiTietDichVuDatChoInput
    connect?: TbDatChoWhereUniqueInput
  }

  export type TbDichVuCreateNestedOneWithoutChiTietDichVuDatChoInput = {
    create?: XOR<TbDichVuCreateWithoutChiTietDichVuDatChoInput, TbDichVuUncheckedCreateWithoutChiTietDichVuDatChoInput>
    connectOrCreate?: TbDichVuCreateOrConnectWithoutChiTietDichVuDatChoInput
    connect?: TbDichVuWhereUniqueInput
  }

  export type TbHoaDonCreateNestedOneWithoutChiTietDichVuDatChoInput = {
    create?: XOR<TbHoaDonCreateWithoutChiTietDichVuDatChoInput, TbHoaDonUncheckedCreateWithoutChiTietDichVuDatChoInput>
    connectOrCreate?: TbHoaDonCreateOrConnectWithoutChiTietDichVuDatChoInput
    connect?: TbHoaDonWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type TbDatChoUpdateOneRequiredWithoutChiTietDichVuDatChoNestedInput = {
    create?: XOR<TbDatChoCreateWithoutChiTietDichVuDatChoInput, TbDatChoUncheckedCreateWithoutChiTietDichVuDatChoInput>
    connectOrCreate?: TbDatChoCreateOrConnectWithoutChiTietDichVuDatChoInput
    upsert?: TbDatChoUpsertWithoutChiTietDichVuDatChoInput
    connect?: TbDatChoWhereUniqueInput
    update?: XOR<XOR<TbDatChoUpdateToOneWithWhereWithoutChiTietDichVuDatChoInput, TbDatChoUpdateWithoutChiTietDichVuDatChoInput>, TbDatChoUncheckedUpdateWithoutChiTietDichVuDatChoInput>
  }

  export type TbDichVuUpdateOneWithoutChiTietDichVuDatChoNestedInput = {
    create?: XOR<TbDichVuCreateWithoutChiTietDichVuDatChoInput, TbDichVuUncheckedCreateWithoutChiTietDichVuDatChoInput>
    connectOrCreate?: TbDichVuCreateOrConnectWithoutChiTietDichVuDatChoInput
    upsert?: TbDichVuUpsertWithoutChiTietDichVuDatChoInput
    disconnect?: TbDichVuWhereInput | boolean
    delete?: TbDichVuWhereInput | boolean
    connect?: TbDichVuWhereUniqueInput
    update?: XOR<XOR<TbDichVuUpdateToOneWithWhereWithoutChiTietDichVuDatChoInput, TbDichVuUpdateWithoutChiTietDichVuDatChoInput>, TbDichVuUncheckedUpdateWithoutChiTietDichVuDatChoInput>
  }

  export type TbHoaDonUpdateOneWithoutChiTietDichVuDatChoNestedInput = {
    create?: XOR<TbHoaDonCreateWithoutChiTietDichVuDatChoInput, TbHoaDonUncheckedCreateWithoutChiTietDichVuDatChoInput>
    connectOrCreate?: TbHoaDonCreateOrConnectWithoutChiTietDichVuDatChoInput
    upsert?: TbHoaDonUpsertWithoutChiTietDichVuDatChoInput
    disconnect?: TbHoaDonWhereInput | boolean
    delete?: TbHoaDonWhereInput | boolean
    connect?: TbHoaDonWhereUniqueInput
    update?: XOR<XOR<TbHoaDonUpdateToOneWithWhereWithoutChiTietDichVuDatChoInput, TbHoaDonUpdateWithoutChiTietDichVuDatChoInput>, TbHoaDonUncheckedUpdateWithoutChiTietDichVuDatChoInput>
  }

  export type TbChiTietDichVuDatChoCreateNestedManyWithoutDatChoInput = {
    create?: XOR<TbChiTietDichVuDatChoCreateWithoutDatChoInput, TbChiTietDichVuDatChoUncheckedCreateWithoutDatChoInput> | TbChiTietDichVuDatChoCreateWithoutDatChoInput[] | TbChiTietDichVuDatChoUncheckedCreateWithoutDatChoInput[]
    connectOrCreate?: TbChiTietDichVuDatChoCreateOrConnectWithoutDatChoInput | TbChiTietDichVuDatChoCreateOrConnectWithoutDatChoInput[]
    createMany?: TbChiTietDichVuDatChoCreateManyDatChoInputEnvelope
    connect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
  }

  export type TbKhachHangCreateNestedOneWithoutDatChoInput = {
    create?: XOR<TbKhachHangCreateWithoutDatChoInput, TbKhachHangUncheckedCreateWithoutDatChoInput>
    connectOrCreate?: TbKhachHangCreateOrConnectWithoutDatChoInput
    connect?: TbKhachHangWhereUniqueInput
  }

  export type TbPhongCreateNestedOneWithoutDatChoInput = {
    create?: XOR<TbPhongCreateWithoutDatChoInput, TbPhongUncheckedCreateWithoutDatChoInput>
    connectOrCreate?: TbPhongCreateOrConnectWithoutDatChoInput
    connect?: TbPhongWhereUniqueInput
  }

  export type TbChiTietDichVuDatChoUncheckedCreateNestedManyWithoutDatChoInput = {
    create?: XOR<TbChiTietDichVuDatChoCreateWithoutDatChoInput, TbChiTietDichVuDatChoUncheckedCreateWithoutDatChoInput> | TbChiTietDichVuDatChoCreateWithoutDatChoInput[] | TbChiTietDichVuDatChoUncheckedCreateWithoutDatChoInput[]
    connectOrCreate?: TbChiTietDichVuDatChoCreateOrConnectWithoutDatChoInput | TbChiTietDichVuDatChoCreateOrConnectWithoutDatChoInput[]
    createMany?: TbChiTietDichVuDatChoCreateManyDatChoInputEnvelope
    connect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type Enumloaikhach_StatusFieldUpdateOperationsInput = {
    set?: $Enums.loaikhach_Status
  }

  export type Enumthongbao_StatusFieldUpdateOperationsInput = {
    set?: $Enums.thongbao_Status
  }

  export type TbChiTietDichVuDatChoUpdateManyWithoutDatChoNestedInput = {
    create?: XOR<TbChiTietDichVuDatChoCreateWithoutDatChoInput, TbChiTietDichVuDatChoUncheckedCreateWithoutDatChoInput> | TbChiTietDichVuDatChoCreateWithoutDatChoInput[] | TbChiTietDichVuDatChoUncheckedCreateWithoutDatChoInput[]
    connectOrCreate?: TbChiTietDichVuDatChoCreateOrConnectWithoutDatChoInput | TbChiTietDichVuDatChoCreateOrConnectWithoutDatChoInput[]
    upsert?: TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutDatChoInput | TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutDatChoInput[]
    createMany?: TbChiTietDichVuDatChoCreateManyDatChoInputEnvelope
    set?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    disconnect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    delete?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    connect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    update?: TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutDatChoInput | TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutDatChoInput[]
    updateMany?: TbChiTietDichVuDatChoUpdateManyWithWhereWithoutDatChoInput | TbChiTietDichVuDatChoUpdateManyWithWhereWithoutDatChoInput[]
    deleteMany?: TbChiTietDichVuDatChoScalarWhereInput | TbChiTietDichVuDatChoScalarWhereInput[]
  }

  export type TbKhachHangUpdateOneRequiredWithoutDatChoNestedInput = {
    create?: XOR<TbKhachHangCreateWithoutDatChoInput, TbKhachHangUncheckedCreateWithoutDatChoInput>
    connectOrCreate?: TbKhachHangCreateOrConnectWithoutDatChoInput
    upsert?: TbKhachHangUpsertWithoutDatChoInput
    connect?: TbKhachHangWhereUniqueInput
    update?: XOR<XOR<TbKhachHangUpdateToOneWithWhereWithoutDatChoInput, TbKhachHangUpdateWithoutDatChoInput>, TbKhachHangUncheckedUpdateWithoutDatChoInput>
  }

  export type TbPhongUpdateOneRequiredWithoutDatChoNestedInput = {
    create?: XOR<TbPhongCreateWithoutDatChoInput, TbPhongUncheckedCreateWithoutDatChoInput>
    connectOrCreate?: TbPhongCreateOrConnectWithoutDatChoInput
    upsert?: TbPhongUpsertWithoutDatChoInput
    connect?: TbPhongWhereUniqueInput
    update?: XOR<XOR<TbPhongUpdateToOneWithWhereWithoutDatChoInput, TbPhongUpdateWithoutDatChoInput>, TbPhongUncheckedUpdateWithoutDatChoInput>
  }

  export type TbChiTietDichVuDatChoUncheckedUpdateManyWithoutDatChoNestedInput = {
    create?: XOR<TbChiTietDichVuDatChoCreateWithoutDatChoInput, TbChiTietDichVuDatChoUncheckedCreateWithoutDatChoInput> | TbChiTietDichVuDatChoCreateWithoutDatChoInput[] | TbChiTietDichVuDatChoUncheckedCreateWithoutDatChoInput[]
    connectOrCreate?: TbChiTietDichVuDatChoCreateOrConnectWithoutDatChoInput | TbChiTietDichVuDatChoCreateOrConnectWithoutDatChoInput[]
    upsert?: TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutDatChoInput | TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutDatChoInput[]
    createMany?: TbChiTietDichVuDatChoCreateManyDatChoInputEnvelope
    set?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    disconnect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    delete?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    connect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    update?: TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutDatChoInput | TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutDatChoInput[]
    updateMany?: TbChiTietDichVuDatChoUpdateManyWithWhereWithoutDatChoInput | TbChiTietDichVuDatChoUpdateManyWithWhereWithoutDatChoInput[]
    deleteMany?: TbChiTietDichVuDatChoScalarWhereInput | TbChiTietDichVuDatChoScalarWhereInput[]
  }

  export type TbNhomDichVuCreateNestedOneWithoutDichVuInput = {
    create?: XOR<TbNhomDichVuCreateWithoutDichVuInput, TbNhomDichVuUncheckedCreateWithoutDichVuInput>
    connectOrCreate?: TbNhomDichVuCreateOrConnectWithoutDichVuInput
    connect?: TbNhomDichVuWhereUniqueInput
  }

  export type TbChiTietDichVuDatChoCreateNestedManyWithoutDichVuInput = {
    create?: XOR<TbChiTietDichVuDatChoCreateWithoutDichVuInput, TbChiTietDichVuDatChoUncheckedCreateWithoutDichVuInput> | TbChiTietDichVuDatChoCreateWithoutDichVuInput[] | TbChiTietDichVuDatChoUncheckedCreateWithoutDichVuInput[]
    connectOrCreate?: TbChiTietDichVuDatChoCreateOrConnectWithoutDichVuInput | TbChiTietDichVuDatChoCreateOrConnectWithoutDichVuInput[]
    createMany?: TbChiTietDichVuDatChoCreateManyDichVuInputEnvelope
    connect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
  }

  export type TbCacLinkAnhDichVuCreateNestedManyWithoutDichVuInput = {
    create?: XOR<TbCacLinkAnhDichVuCreateWithoutDichVuInput, TbCacLinkAnhDichVuUncheckedCreateWithoutDichVuInput> | TbCacLinkAnhDichVuCreateWithoutDichVuInput[] | TbCacLinkAnhDichVuUncheckedCreateWithoutDichVuInput[]
    connectOrCreate?: TbCacLinkAnhDichVuCreateOrConnectWithoutDichVuInput | TbCacLinkAnhDichVuCreateOrConnectWithoutDichVuInput[]
    createMany?: TbCacLinkAnhDichVuCreateManyDichVuInputEnvelope
    connect?: TbCacLinkAnhDichVuWhereUniqueInput | TbCacLinkAnhDichVuWhereUniqueInput[]
  }

  export type TbChiTietDichVuDatChoUncheckedCreateNestedManyWithoutDichVuInput = {
    create?: XOR<TbChiTietDichVuDatChoCreateWithoutDichVuInput, TbChiTietDichVuDatChoUncheckedCreateWithoutDichVuInput> | TbChiTietDichVuDatChoCreateWithoutDichVuInput[] | TbChiTietDichVuDatChoUncheckedCreateWithoutDichVuInput[]
    connectOrCreate?: TbChiTietDichVuDatChoCreateOrConnectWithoutDichVuInput | TbChiTietDichVuDatChoCreateOrConnectWithoutDichVuInput[]
    createMany?: TbChiTietDichVuDatChoCreateManyDichVuInputEnvelope
    connect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
  }

  export type TbCacLinkAnhDichVuUncheckedCreateNestedManyWithoutDichVuInput = {
    create?: XOR<TbCacLinkAnhDichVuCreateWithoutDichVuInput, TbCacLinkAnhDichVuUncheckedCreateWithoutDichVuInput> | TbCacLinkAnhDichVuCreateWithoutDichVuInput[] | TbCacLinkAnhDichVuUncheckedCreateWithoutDichVuInput[]
    connectOrCreate?: TbCacLinkAnhDichVuCreateOrConnectWithoutDichVuInput | TbCacLinkAnhDichVuCreateOrConnectWithoutDichVuInput[]
    createMany?: TbCacLinkAnhDichVuCreateManyDichVuInputEnvelope
    connect?: TbCacLinkAnhDichVuWhereUniqueInput | TbCacLinkAnhDichVuWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type TbNhomDichVuUpdateOneRequiredWithoutDichVuNestedInput = {
    create?: XOR<TbNhomDichVuCreateWithoutDichVuInput, TbNhomDichVuUncheckedCreateWithoutDichVuInput>
    connectOrCreate?: TbNhomDichVuCreateOrConnectWithoutDichVuInput
    upsert?: TbNhomDichVuUpsertWithoutDichVuInput
    connect?: TbNhomDichVuWhereUniqueInput
    update?: XOR<XOR<TbNhomDichVuUpdateToOneWithWhereWithoutDichVuInput, TbNhomDichVuUpdateWithoutDichVuInput>, TbNhomDichVuUncheckedUpdateWithoutDichVuInput>
  }

  export type TbChiTietDichVuDatChoUpdateManyWithoutDichVuNestedInput = {
    create?: XOR<TbChiTietDichVuDatChoCreateWithoutDichVuInput, TbChiTietDichVuDatChoUncheckedCreateWithoutDichVuInput> | TbChiTietDichVuDatChoCreateWithoutDichVuInput[] | TbChiTietDichVuDatChoUncheckedCreateWithoutDichVuInput[]
    connectOrCreate?: TbChiTietDichVuDatChoCreateOrConnectWithoutDichVuInput | TbChiTietDichVuDatChoCreateOrConnectWithoutDichVuInput[]
    upsert?: TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutDichVuInput | TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutDichVuInput[]
    createMany?: TbChiTietDichVuDatChoCreateManyDichVuInputEnvelope
    set?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    disconnect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    delete?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    connect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    update?: TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutDichVuInput | TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutDichVuInput[]
    updateMany?: TbChiTietDichVuDatChoUpdateManyWithWhereWithoutDichVuInput | TbChiTietDichVuDatChoUpdateManyWithWhereWithoutDichVuInput[]
    deleteMany?: TbChiTietDichVuDatChoScalarWhereInput | TbChiTietDichVuDatChoScalarWhereInput[]
  }

  export type TbCacLinkAnhDichVuUpdateManyWithoutDichVuNestedInput = {
    create?: XOR<TbCacLinkAnhDichVuCreateWithoutDichVuInput, TbCacLinkAnhDichVuUncheckedCreateWithoutDichVuInput> | TbCacLinkAnhDichVuCreateWithoutDichVuInput[] | TbCacLinkAnhDichVuUncheckedCreateWithoutDichVuInput[]
    connectOrCreate?: TbCacLinkAnhDichVuCreateOrConnectWithoutDichVuInput | TbCacLinkAnhDichVuCreateOrConnectWithoutDichVuInput[]
    upsert?: TbCacLinkAnhDichVuUpsertWithWhereUniqueWithoutDichVuInput | TbCacLinkAnhDichVuUpsertWithWhereUniqueWithoutDichVuInput[]
    createMany?: TbCacLinkAnhDichVuCreateManyDichVuInputEnvelope
    set?: TbCacLinkAnhDichVuWhereUniqueInput | TbCacLinkAnhDichVuWhereUniqueInput[]
    disconnect?: TbCacLinkAnhDichVuWhereUniqueInput | TbCacLinkAnhDichVuWhereUniqueInput[]
    delete?: TbCacLinkAnhDichVuWhereUniqueInput | TbCacLinkAnhDichVuWhereUniqueInput[]
    connect?: TbCacLinkAnhDichVuWhereUniqueInput | TbCacLinkAnhDichVuWhereUniqueInput[]
    update?: TbCacLinkAnhDichVuUpdateWithWhereUniqueWithoutDichVuInput | TbCacLinkAnhDichVuUpdateWithWhereUniqueWithoutDichVuInput[]
    updateMany?: TbCacLinkAnhDichVuUpdateManyWithWhereWithoutDichVuInput | TbCacLinkAnhDichVuUpdateManyWithWhereWithoutDichVuInput[]
    deleteMany?: TbCacLinkAnhDichVuScalarWhereInput | TbCacLinkAnhDichVuScalarWhereInput[]
  }

  export type TbChiTietDichVuDatChoUncheckedUpdateManyWithoutDichVuNestedInput = {
    create?: XOR<TbChiTietDichVuDatChoCreateWithoutDichVuInput, TbChiTietDichVuDatChoUncheckedCreateWithoutDichVuInput> | TbChiTietDichVuDatChoCreateWithoutDichVuInput[] | TbChiTietDichVuDatChoUncheckedCreateWithoutDichVuInput[]
    connectOrCreate?: TbChiTietDichVuDatChoCreateOrConnectWithoutDichVuInput | TbChiTietDichVuDatChoCreateOrConnectWithoutDichVuInput[]
    upsert?: TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutDichVuInput | TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutDichVuInput[]
    createMany?: TbChiTietDichVuDatChoCreateManyDichVuInputEnvelope
    set?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    disconnect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    delete?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    connect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    update?: TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutDichVuInput | TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutDichVuInput[]
    updateMany?: TbChiTietDichVuDatChoUpdateManyWithWhereWithoutDichVuInput | TbChiTietDichVuDatChoUpdateManyWithWhereWithoutDichVuInput[]
    deleteMany?: TbChiTietDichVuDatChoScalarWhereInput | TbChiTietDichVuDatChoScalarWhereInput[]
  }

  export type TbCacLinkAnhDichVuUncheckedUpdateManyWithoutDichVuNestedInput = {
    create?: XOR<TbCacLinkAnhDichVuCreateWithoutDichVuInput, TbCacLinkAnhDichVuUncheckedCreateWithoutDichVuInput> | TbCacLinkAnhDichVuCreateWithoutDichVuInput[] | TbCacLinkAnhDichVuUncheckedCreateWithoutDichVuInput[]
    connectOrCreate?: TbCacLinkAnhDichVuCreateOrConnectWithoutDichVuInput | TbCacLinkAnhDichVuCreateOrConnectWithoutDichVuInput[]
    upsert?: TbCacLinkAnhDichVuUpsertWithWhereUniqueWithoutDichVuInput | TbCacLinkAnhDichVuUpsertWithWhereUniqueWithoutDichVuInput[]
    createMany?: TbCacLinkAnhDichVuCreateManyDichVuInputEnvelope
    set?: TbCacLinkAnhDichVuWhereUniqueInput | TbCacLinkAnhDichVuWhereUniqueInput[]
    disconnect?: TbCacLinkAnhDichVuWhereUniqueInput | TbCacLinkAnhDichVuWhereUniqueInput[]
    delete?: TbCacLinkAnhDichVuWhereUniqueInput | TbCacLinkAnhDichVuWhereUniqueInput[]
    connect?: TbCacLinkAnhDichVuWhereUniqueInput | TbCacLinkAnhDichVuWhereUniqueInput[]
    update?: TbCacLinkAnhDichVuUpdateWithWhereUniqueWithoutDichVuInput | TbCacLinkAnhDichVuUpdateWithWhereUniqueWithoutDichVuInput[]
    updateMany?: TbCacLinkAnhDichVuUpdateManyWithWhereWithoutDichVuInput | TbCacLinkAnhDichVuUpdateManyWithWhereWithoutDichVuInput[]
    deleteMany?: TbCacLinkAnhDichVuScalarWhereInput | TbCacLinkAnhDichVuScalarWhereInput[]
  }

  export type TbDichVuCreateNestedManyWithoutNhomDichVuInput = {
    create?: XOR<TbDichVuCreateWithoutNhomDichVuInput, TbDichVuUncheckedCreateWithoutNhomDichVuInput> | TbDichVuCreateWithoutNhomDichVuInput[] | TbDichVuUncheckedCreateWithoutNhomDichVuInput[]
    connectOrCreate?: TbDichVuCreateOrConnectWithoutNhomDichVuInput | TbDichVuCreateOrConnectWithoutNhomDichVuInput[]
    createMany?: TbDichVuCreateManyNhomDichVuInputEnvelope
    connect?: TbDichVuWhereUniqueInput | TbDichVuWhereUniqueInput[]
  }

  export type TbKhachSanCreateNestedOneWithoutNhomDichVuInput = {
    create?: XOR<TbKhachSanCreateWithoutNhomDichVuInput, TbKhachSanUncheckedCreateWithoutNhomDichVuInput>
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutNhomDichVuInput
    connect?: TbKhachSanWhereUniqueInput
  }

  export type TbDichVuUncheckedCreateNestedManyWithoutNhomDichVuInput = {
    create?: XOR<TbDichVuCreateWithoutNhomDichVuInput, TbDichVuUncheckedCreateWithoutNhomDichVuInput> | TbDichVuCreateWithoutNhomDichVuInput[] | TbDichVuUncheckedCreateWithoutNhomDichVuInput[]
    connectOrCreate?: TbDichVuCreateOrConnectWithoutNhomDichVuInput | TbDichVuCreateOrConnectWithoutNhomDichVuInput[]
    createMany?: TbDichVuCreateManyNhomDichVuInputEnvelope
    connect?: TbDichVuWhereUniqueInput | TbDichVuWhereUniqueInput[]
  }

  export type TbDichVuUpdateManyWithoutNhomDichVuNestedInput = {
    create?: XOR<TbDichVuCreateWithoutNhomDichVuInput, TbDichVuUncheckedCreateWithoutNhomDichVuInput> | TbDichVuCreateWithoutNhomDichVuInput[] | TbDichVuUncheckedCreateWithoutNhomDichVuInput[]
    connectOrCreate?: TbDichVuCreateOrConnectWithoutNhomDichVuInput | TbDichVuCreateOrConnectWithoutNhomDichVuInput[]
    upsert?: TbDichVuUpsertWithWhereUniqueWithoutNhomDichVuInput | TbDichVuUpsertWithWhereUniqueWithoutNhomDichVuInput[]
    createMany?: TbDichVuCreateManyNhomDichVuInputEnvelope
    set?: TbDichVuWhereUniqueInput | TbDichVuWhereUniqueInput[]
    disconnect?: TbDichVuWhereUniqueInput | TbDichVuWhereUniqueInput[]
    delete?: TbDichVuWhereUniqueInput | TbDichVuWhereUniqueInput[]
    connect?: TbDichVuWhereUniqueInput | TbDichVuWhereUniqueInput[]
    update?: TbDichVuUpdateWithWhereUniqueWithoutNhomDichVuInput | TbDichVuUpdateWithWhereUniqueWithoutNhomDichVuInput[]
    updateMany?: TbDichVuUpdateManyWithWhereWithoutNhomDichVuInput | TbDichVuUpdateManyWithWhereWithoutNhomDichVuInput[]
    deleteMany?: TbDichVuScalarWhereInput | TbDichVuScalarWhereInput[]
  }

  export type TbKhachSanUpdateOneRequiredWithoutNhomDichVuNestedInput = {
    create?: XOR<TbKhachSanCreateWithoutNhomDichVuInput, TbKhachSanUncheckedCreateWithoutNhomDichVuInput>
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutNhomDichVuInput
    upsert?: TbKhachSanUpsertWithoutNhomDichVuInput
    connect?: TbKhachSanWhereUniqueInput
    update?: XOR<XOR<TbKhachSanUpdateToOneWithWhereWithoutNhomDichVuInput, TbKhachSanUpdateWithoutNhomDichVuInput>, TbKhachSanUncheckedUpdateWithoutNhomDichVuInput>
  }

  export type TbDichVuUncheckedUpdateManyWithoutNhomDichVuNestedInput = {
    create?: XOR<TbDichVuCreateWithoutNhomDichVuInput, TbDichVuUncheckedCreateWithoutNhomDichVuInput> | TbDichVuCreateWithoutNhomDichVuInput[] | TbDichVuUncheckedCreateWithoutNhomDichVuInput[]
    connectOrCreate?: TbDichVuCreateOrConnectWithoutNhomDichVuInput | TbDichVuCreateOrConnectWithoutNhomDichVuInput[]
    upsert?: TbDichVuUpsertWithWhereUniqueWithoutNhomDichVuInput | TbDichVuUpsertWithWhereUniqueWithoutNhomDichVuInput[]
    createMany?: TbDichVuCreateManyNhomDichVuInputEnvelope
    set?: TbDichVuWhereUniqueInput | TbDichVuWhereUniqueInput[]
    disconnect?: TbDichVuWhereUniqueInput | TbDichVuWhereUniqueInput[]
    delete?: TbDichVuWhereUniqueInput | TbDichVuWhereUniqueInput[]
    connect?: TbDichVuWhereUniqueInput | TbDichVuWhereUniqueInput[]
    update?: TbDichVuUpdateWithWhereUniqueWithoutNhomDichVuInput | TbDichVuUpdateWithWhereUniqueWithoutNhomDichVuInput[]
    updateMany?: TbDichVuUpdateManyWithWhereWithoutNhomDichVuInput | TbDichVuUpdateManyWithWhereWithoutNhomDichVuInput[]
    deleteMany?: TbDichVuScalarWhereInput | TbDichVuScalarWhereInput[]
  }

  export type TbNhomHangHoaCreateNestedOneWithoutHangHoaInput = {
    create?: XOR<TbNhomHangHoaCreateWithoutHangHoaInput, TbNhomHangHoaUncheckedCreateWithoutHangHoaInput>
    connectOrCreate?: TbNhomHangHoaCreateOrConnectWithoutHangHoaInput
    connect?: TbNhomHangHoaWhereUniqueInput
  }

  export type TbCacLinkAnhHangHoaCreateNestedManyWithoutHangHoaInput = {
    create?: XOR<TbCacLinkAnhHangHoaCreateWithoutHangHoaInput, TbCacLinkAnhHangHoaUncheckedCreateWithoutHangHoaInput> | TbCacLinkAnhHangHoaCreateWithoutHangHoaInput[] | TbCacLinkAnhHangHoaUncheckedCreateWithoutHangHoaInput[]
    connectOrCreate?: TbCacLinkAnhHangHoaCreateOrConnectWithoutHangHoaInput | TbCacLinkAnhHangHoaCreateOrConnectWithoutHangHoaInput[]
    createMany?: TbCacLinkAnhHangHoaCreateManyHangHoaInputEnvelope
    connect?: TbCacLinkAnhHangHoaWhereUniqueInput | TbCacLinkAnhHangHoaWhereUniqueInput[]
  }

  export type TbChiTietNoiDungNhapCreateNestedManyWithoutHangHoaInput = {
    create?: XOR<TbChiTietNoiDungNhapCreateWithoutHangHoaInput, TbChiTietNoiDungNhapUncheckedCreateWithoutHangHoaInput> | TbChiTietNoiDungNhapCreateWithoutHangHoaInput[] | TbChiTietNoiDungNhapUncheckedCreateWithoutHangHoaInput[]
    connectOrCreate?: TbChiTietNoiDungNhapCreateOrConnectWithoutHangHoaInput | TbChiTietNoiDungNhapCreateOrConnectWithoutHangHoaInput[]
    createMany?: TbChiTietNoiDungNhapCreateManyHangHoaInputEnvelope
    connect?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
  }

  export type TbCacLinkAnhHangHoaUncheckedCreateNestedManyWithoutHangHoaInput = {
    create?: XOR<TbCacLinkAnhHangHoaCreateWithoutHangHoaInput, TbCacLinkAnhHangHoaUncheckedCreateWithoutHangHoaInput> | TbCacLinkAnhHangHoaCreateWithoutHangHoaInput[] | TbCacLinkAnhHangHoaUncheckedCreateWithoutHangHoaInput[]
    connectOrCreate?: TbCacLinkAnhHangHoaCreateOrConnectWithoutHangHoaInput | TbCacLinkAnhHangHoaCreateOrConnectWithoutHangHoaInput[]
    createMany?: TbCacLinkAnhHangHoaCreateManyHangHoaInputEnvelope
    connect?: TbCacLinkAnhHangHoaWhereUniqueInput | TbCacLinkAnhHangHoaWhereUniqueInput[]
  }

  export type TbChiTietNoiDungNhapUncheckedCreateNestedManyWithoutHangHoaInput = {
    create?: XOR<TbChiTietNoiDungNhapCreateWithoutHangHoaInput, TbChiTietNoiDungNhapUncheckedCreateWithoutHangHoaInput> | TbChiTietNoiDungNhapCreateWithoutHangHoaInput[] | TbChiTietNoiDungNhapUncheckedCreateWithoutHangHoaInput[]
    connectOrCreate?: TbChiTietNoiDungNhapCreateOrConnectWithoutHangHoaInput | TbChiTietNoiDungNhapCreateOrConnectWithoutHangHoaInput[]
    createMany?: TbChiTietNoiDungNhapCreateManyHangHoaInputEnvelope
    connect?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type TbNhomHangHoaUpdateOneRequiredWithoutHangHoaNestedInput = {
    create?: XOR<TbNhomHangHoaCreateWithoutHangHoaInput, TbNhomHangHoaUncheckedCreateWithoutHangHoaInput>
    connectOrCreate?: TbNhomHangHoaCreateOrConnectWithoutHangHoaInput
    upsert?: TbNhomHangHoaUpsertWithoutHangHoaInput
    connect?: TbNhomHangHoaWhereUniqueInput
    update?: XOR<XOR<TbNhomHangHoaUpdateToOneWithWhereWithoutHangHoaInput, TbNhomHangHoaUpdateWithoutHangHoaInput>, TbNhomHangHoaUncheckedUpdateWithoutHangHoaInput>
  }

  export type TbCacLinkAnhHangHoaUpdateManyWithoutHangHoaNestedInput = {
    create?: XOR<TbCacLinkAnhHangHoaCreateWithoutHangHoaInput, TbCacLinkAnhHangHoaUncheckedCreateWithoutHangHoaInput> | TbCacLinkAnhHangHoaCreateWithoutHangHoaInput[] | TbCacLinkAnhHangHoaUncheckedCreateWithoutHangHoaInput[]
    connectOrCreate?: TbCacLinkAnhHangHoaCreateOrConnectWithoutHangHoaInput | TbCacLinkAnhHangHoaCreateOrConnectWithoutHangHoaInput[]
    upsert?: TbCacLinkAnhHangHoaUpsertWithWhereUniqueWithoutHangHoaInput | TbCacLinkAnhHangHoaUpsertWithWhereUniqueWithoutHangHoaInput[]
    createMany?: TbCacLinkAnhHangHoaCreateManyHangHoaInputEnvelope
    set?: TbCacLinkAnhHangHoaWhereUniqueInput | TbCacLinkAnhHangHoaWhereUniqueInput[]
    disconnect?: TbCacLinkAnhHangHoaWhereUniqueInput | TbCacLinkAnhHangHoaWhereUniqueInput[]
    delete?: TbCacLinkAnhHangHoaWhereUniqueInput | TbCacLinkAnhHangHoaWhereUniqueInput[]
    connect?: TbCacLinkAnhHangHoaWhereUniqueInput | TbCacLinkAnhHangHoaWhereUniqueInput[]
    update?: TbCacLinkAnhHangHoaUpdateWithWhereUniqueWithoutHangHoaInput | TbCacLinkAnhHangHoaUpdateWithWhereUniqueWithoutHangHoaInput[]
    updateMany?: TbCacLinkAnhHangHoaUpdateManyWithWhereWithoutHangHoaInput | TbCacLinkAnhHangHoaUpdateManyWithWhereWithoutHangHoaInput[]
    deleteMany?: TbCacLinkAnhHangHoaScalarWhereInput | TbCacLinkAnhHangHoaScalarWhereInput[]
  }

  export type TbChiTietNoiDungNhapUpdateManyWithoutHangHoaNestedInput = {
    create?: XOR<TbChiTietNoiDungNhapCreateWithoutHangHoaInput, TbChiTietNoiDungNhapUncheckedCreateWithoutHangHoaInput> | TbChiTietNoiDungNhapCreateWithoutHangHoaInput[] | TbChiTietNoiDungNhapUncheckedCreateWithoutHangHoaInput[]
    connectOrCreate?: TbChiTietNoiDungNhapCreateOrConnectWithoutHangHoaInput | TbChiTietNoiDungNhapCreateOrConnectWithoutHangHoaInput[]
    upsert?: TbChiTietNoiDungNhapUpsertWithWhereUniqueWithoutHangHoaInput | TbChiTietNoiDungNhapUpsertWithWhereUniqueWithoutHangHoaInput[]
    createMany?: TbChiTietNoiDungNhapCreateManyHangHoaInputEnvelope
    set?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    disconnect?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    delete?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    connect?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    update?: TbChiTietNoiDungNhapUpdateWithWhereUniqueWithoutHangHoaInput | TbChiTietNoiDungNhapUpdateWithWhereUniqueWithoutHangHoaInput[]
    updateMany?: TbChiTietNoiDungNhapUpdateManyWithWhereWithoutHangHoaInput | TbChiTietNoiDungNhapUpdateManyWithWhereWithoutHangHoaInput[]
    deleteMany?: TbChiTietNoiDungNhapScalarWhereInput | TbChiTietNoiDungNhapScalarWhereInput[]
  }

  export type TbCacLinkAnhHangHoaUncheckedUpdateManyWithoutHangHoaNestedInput = {
    create?: XOR<TbCacLinkAnhHangHoaCreateWithoutHangHoaInput, TbCacLinkAnhHangHoaUncheckedCreateWithoutHangHoaInput> | TbCacLinkAnhHangHoaCreateWithoutHangHoaInput[] | TbCacLinkAnhHangHoaUncheckedCreateWithoutHangHoaInput[]
    connectOrCreate?: TbCacLinkAnhHangHoaCreateOrConnectWithoutHangHoaInput | TbCacLinkAnhHangHoaCreateOrConnectWithoutHangHoaInput[]
    upsert?: TbCacLinkAnhHangHoaUpsertWithWhereUniqueWithoutHangHoaInput | TbCacLinkAnhHangHoaUpsertWithWhereUniqueWithoutHangHoaInput[]
    createMany?: TbCacLinkAnhHangHoaCreateManyHangHoaInputEnvelope
    set?: TbCacLinkAnhHangHoaWhereUniqueInput | TbCacLinkAnhHangHoaWhereUniqueInput[]
    disconnect?: TbCacLinkAnhHangHoaWhereUniqueInput | TbCacLinkAnhHangHoaWhereUniqueInput[]
    delete?: TbCacLinkAnhHangHoaWhereUniqueInput | TbCacLinkAnhHangHoaWhereUniqueInput[]
    connect?: TbCacLinkAnhHangHoaWhereUniqueInput | TbCacLinkAnhHangHoaWhereUniqueInput[]
    update?: TbCacLinkAnhHangHoaUpdateWithWhereUniqueWithoutHangHoaInput | TbCacLinkAnhHangHoaUpdateWithWhereUniqueWithoutHangHoaInput[]
    updateMany?: TbCacLinkAnhHangHoaUpdateManyWithWhereWithoutHangHoaInput | TbCacLinkAnhHangHoaUpdateManyWithWhereWithoutHangHoaInput[]
    deleteMany?: TbCacLinkAnhHangHoaScalarWhereInput | TbCacLinkAnhHangHoaScalarWhereInput[]
  }

  export type TbChiTietNoiDungNhapUncheckedUpdateManyWithoutHangHoaNestedInput = {
    create?: XOR<TbChiTietNoiDungNhapCreateWithoutHangHoaInput, TbChiTietNoiDungNhapUncheckedCreateWithoutHangHoaInput> | TbChiTietNoiDungNhapCreateWithoutHangHoaInput[] | TbChiTietNoiDungNhapUncheckedCreateWithoutHangHoaInput[]
    connectOrCreate?: TbChiTietNoiDungNhapCreateOrConnectWithoutHangHoaInput | TbChiTietNoiDungNhapCreateOrConnectWithoutHangHoaInput[]
    upsert?: TbChiTietNoiDungNhapUpsertWithWhereUniqueWithoutHangHoaInput | TbChiTietNoiDungNhapUpsertWithWhereUniqueWithoutHangHoaInput[]
    createMany?: TbChiTietNoiDungNhapCreateManyHangHoaInputEnvelope
    set?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    disconnect?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    delete?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    connect?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    update?: TbChiTietNoiDungNhapUpdateWithWhereUniqueWithoutHangHoaInput | TbChiTietNoiDungNhapUpdateWithWhereUniqueWithoutHangHoaInput[]
    updateMany?: TbChiTietNoiDungNhapUpdateManyWithWhereWithoutHangHoaInput | TbChiTietNoiDungNhapUpdateManyWithWhereWithoutHangHoaInput[]
    deleteMany?: TbChiTietNoiDungNhapScalarWhereInput | TbChiTietNoiDungNhapScalarWhereInput[]
  }

  export type TbNhaCungCapCreateNestedOneWithoutPhieuNhapInput = {
    create?: XOR<TbNhaCungCapCreateWithoutPhieuNhapInput, TbNhaCungCapUncheckedCreateWithoutPhieuNhapInput>
    connectOrCreate?: TbNhaCungCapCreateOrConnectWithoutPhieuNhapInput
    connect?: TbNhaCungCapWhereUniqueInput
  }

  export type TbKhachSanCreateNestedOneWithoutPhieuNhapInput = {
    create?: XOR<TbKhachSanCreateWithoutPhieuNhapInput, TbKhachSanUncheckedCreateWithoutPhieuNhapInput>
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutPhieuNhapInput
    connect?: TbKhachSanWhereUniqueInput
  }

  export type TbChiTietNoiDungNhapCreateNestedManyWithoutPhieuNhapInput = {
    create?: XOR<TbChiTietNoiDungNhapCreateWithoutPhieuNhapInput, TbChiTietNoiDungNhapUncheckedCreateWithoutPhieuNhapInput> | TbChiTietNoiDungNhapCreateWithoutPhieuNhapInput[] | TbChiTietNoiDungNhapUncheckedCreateWithoutPhieuNhapInput[]
    connectOrCreate?: TbChiTietNoiDungNhapCreateOrConnectWithoutPhieuNhapInput | TbChiTietNoiDungNhapCreateOrConnectWithoutPhieuNhapInput[]
    createMany?: TbChiTietNoiDungNhapCreateManyPhieuNhapInputEnvelope
    connect?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
  }

  export type TbChiTietNoiDungNhapUncheckedCreateNestedManyWithoutPhieuNhapInput = {
    create?: XOR<TbChiTietNoiDungNhapCreateWithoutPhieuNhapInput, TbChiTietNoiDungNhapUncheckedCreateWithoutPhieuNhapInput> | TbChiTietNoiDungNhapCreateWithoutPhieuNhapInput[] | TbChiTietNoiDungNhapUncheckedCreateWithoutPhieuNhapInput[]
    connectOrCreate?: TbChiTietNoiDungNhapCreateOrConnectWithoutPhieuNhapInput | TbChiTietNoiDungNhapCreateOrConnectWithoutPhieuNhapInput[]
    createMany?: TbChiTietNoiDungNhapCreateManyPhieuNhapInputEnvelope
    connect?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type Enumtbphieunhap_StatusFieldUpdateOperationsInput = {
    set?: $Enums.tbphieunhap_Status
  }

  export type TbNhaCungCapUpdateOneWithoutPhieuNhapNestedInput = {
    create?: XOR<TbNhaCungCapCreateWithoutPhieuNhapInput, TbNhaCungCapUncheckedCreateWithoutPhieuNhapInput>
    connectOrCreate?: TbNhaCungCapCreateOrConnectWithoutPhieuNhapInput
    upsert?: TbNhaCungCapUpsertWithoutPhieuNhapInput
    disconnect?: TbNhaCungCapWhereInput | boolean
    delete?: TbNhaCungCapWhereInput | boolean
    connect?: TbNhaCungCapWhereUniqueInput
    update?: XOR<XOR<TbNhaCungCapUpdateToOneWithWhereWithoutPhieuNhapInput, TbNhaCungCapUpdateWithoutPhieuNhapInput>, TbNhaCungCapUncheckedUpdateWithoutPhieuNhapInput>
  }

  export type TbKhachSanUpdateOneRequiredWithoutPhieuNhapNestedInput = {
    create?: XOR<TbKhachSanCreateWithoutPhieuNhapInput, TbKhachSanUncheckedCreateWithoutPhieuNhapInput>
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutPhieuNhapInput
    upsert?: TbKhachSanUpsertWithoutPhieuNhapInput
    connect?: TbKhachSanWhereUniqueInput
    update?: XOR<XOR<TbKhachSanUpdateToOneWithWhereWithoutPhieuNhapInput, TbKhachSanUpdateWithoutPhieuNhapInput>, TbKhachSanUncheckedUpdateWithoutPhieuNhapInput>
  }

  export type TbChiTietNoiDungNhapUpdateManyWithoutPhieuNhapNestedInput = {
    create?: XOR<TbChiTietNoiDungNhapCreateWithoutPhieuNhapInput, TbChiTietNoiDungNhapUncheckedCreateWithoutPhieuNhapInput> | TbChiTietNoiDungNhapCreateWithoutPhieuNhapInput[] | TbChiTietNoiDungNhapUncheckedCreateWithoutPhieuNhapInput[]
    connectOrCreate?: TbChiTietNoiDungNhapCreateOrConnectWithoutPhieuNhapInput | TbChiTietNoiDungNhapCreateOrConnectWithoutPhieuNhapInput[]
    upsert?: TbChiTietNoiDungNhapUpsertWithWhereUniqueWithoutPhieuNhapInput | TbChiTietNoiDungNhapUpsertWithWhereUniqueWithoutPhieuNhapInput[]
    createMany?: TbChiTietNoiDungNhapCreateManyPhieuNhapInputEnvelope
    set?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    disconnect?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    delete?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    connect?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    update?: TbChiTietNoiDungNhapUpdateWithWhereUniqueWithoutPhieuNhapInput | TbChiTietNoiDungNhapUpdateWithWhereUniqueWithoutPhieuNhapInput[]
    updateMany?: TbChiTietNoiDungNhapUpdateManyWithWhereWithoutPhieuNhapInput | TbChiTietNoiDungNhapUpdateManyWithWhereWithoutPhieuNhapInput[]
    deleteMany?: TbChiTietNoiDungNhapScalarWhereInput | TbChiTietNoiDungNhapScalarWhereInput[]
  }

  export type TbChiTietNoiDungNhapUncheckedUpdateManyWithoutPhieuNhapNestedInput = {
    create?: XOR<TbChiTietNoiDungNhapCreateWithoutPhieuNhapInput, TbChiTietNoiDungNhapUncheckedCreateWithoutPhieuNhapInput> | TbChiTietNoiDungNhapCreateWithoutPhieuNhapInput[] | TbChiTietNoiDungNhapUncheckedCreateWithoutPhieuNhapInput[]
    connectOrCreate?: TbChiTietNoiDungNhapCreateOrConnectWithoutPhieuNhapInput | TbChiTietNoiDungNhapCreateOrConnectWithoutPhieuNhapInput[]
    upsert?: TbChiTietNoiDungNhapUpsertWithWhereUniqueWithoutPhieuNhapInput | TbChiTietNoiDungNhapUpsertWithWhereUniqueWithoutPhieuNhapInput[]
    createMany?: TbChiTietNoiDungNhapCreateManyPhieuNhapInputEnvelope
    set?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    disconnect?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    delete?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    connect?: TbChiTietNoiDungNhapWhereUniqueInput | TbChiTietNoiDungNhapWhereUniqueInput[]
    update?: TbChiTietNoiDungNhapUpdateWithWhereUniqueWithoutPhieuNhapInput | TbChiTietNoiDungNhapUpdateWithWhereUniqueWithoutPhieuNhapInput[]
    updateMany?: TbChiTietNoiDungNhapUpdateManyWithWhereWithoutPhieuNhapInput | TbChiTietNoiDungNhapUpdateManyWithWhereWithoutPhieuNhapInput[]
    deleteMany?: TbChiTietNoiDungNhapScalarWhereInput | TbChiTietNoiDungNhapScalarWhereInput[]
  }

  export type TbHangHoaCreateNestedOneWithoutChiTietNoiDungNhapInput = {
    create?: XOR<TbHangHoaCreateWithoutChiTietNoiDungNhapInput, TbHangHoaUncheckedCreateWithoutChiTietNoiDungNhapInput>
    connectOrCreate?: TbHangHoaCreateOrConnectWithoutChiTietNoiDungNhapInput
    connect?: TbHangHoaWhereUniqueInput
  }

  export type TbPhieuNhapCreateNestedOneWithoutChiTietNoiDungNhapInput = {
    create?: XOR<TbPhieuNhapCreateWithoutChiTietNoiDungNhapInput, TbPhieuNhapUncheckedCreateWithoutChiTietNoiDungNhapInput>
    connectOrCreate?: TbPhieuNhapCreateOrConnectWithoutChiTietNoiDungNhapInput
    connect?: TbPhieuNhapWhereUniqueInput
  }

  export type TbHangHoaUpdateOneRequiredWithoutChiTietNoiDungNhapNestedInput = {
    create?: XOR<TbHangHoaCreateWithoutChiTietNoiDungNhapInput, TbHangHoaUncheckedCreateWithoutChiTietNoiDungNhapInput>
    connectOrCreate?: TbHangHoaCreateOrConnectWithoutChiTietNoiDungNhapInput
    upsert?: TbHangHoaUpsertWithoutChiTietNoiDungNhapInput
    connect?: TbHangHoaWhereUniqueInput
    update?: XOR<XOR<TbHangHoaUpdateToOneWithWhereWithoutChiTietNoiDungNhapInput, TbHangHoaUpdateWithoutChiTietNoiDungNhapInput>, TbHangHoaUncheckedUpdateWithoutChiTietNoiDungNhapInput>
  }

  export type TbPhieuNhapUpdateOneRequiredWithoutChiTietNoiDungNhapNestedInput = {
    create?: XOR<TbPhieuNhapCreateWithoutChiTietNoiDungNhapInput, TbPhieuNhapUncheckedCreateWithoutChiTietNoiDungNhapInput>
    connectOrCreate?: TbPhieuNhapCreateOrConnectWithoutChiTietNoiDungNhapInput
    upsert?: TbPhieuNhapUpsertWithoutChiTietNoiDungNhapInput
    connect?: TbPhieuNhapWhereUniqueInput
    update?: XOR<XOR<TbPhieuNhapUpdateToOneWithWhereWithoutChiTietNoiDungNhapInput, TbPhieuNhapUpdateWithoutChiTietNoiDungNhapInput>, TbPhieuNhapUncheckedUpdateWithoutChiTietNoiDungNhapInput>
  }

  export type TbHangHoaCreateNestedManyWithoutNhomHangHoaInput = {
    create?: XOR<TbHangHoaCreateWithoutNhomHangHoaInput, TbHangHoaUncheckedCreateWithoutNhomHangHoaInput> | TbHangHoaCreateWithoutNhomHangHoaInput[] | TbHangHoaUncheckedCreateWithoutNhomHangHoaInput[]
    connectOrCreate?: TbHangHoaCreateOrConnectWithoutNhomHangHoaInput | TbHangHoaCreateOrConnectWithoutNhomHangHoaInput[]
    createMany?: TbHangHoaCreateManyNhomHangHoaInputEnvelope
    connect?: TbHangHoaWhereUniqueInput | TbHangHoaWhereUniqueInput[]
  }

  export type TbKhachSanCreateNestedOneWithoutNhomHangHoaInput = {
    create?: XOR<TbKhachSanCreateWithoutNhomHangHoaInput, TbKhachSanUncheckedCreateWithoutNhomHangHoaInput>
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutNhomHangHoaInput
    connect?: TbKhachSanWhereUniqueInput
  }

  export type TbHangHoaUncheckedCreateNestedManyWithoutNhomHangHoaInput = {
    create?: XOR<TbHangHoaCreateWithoutNhomHangHoaInput, TbHangHoaUncheckedCreateWithoutNhomHangHoaInput> | TbHangHoaCreateWithoutNhomHangHoaInput[] | TbHangHoaUncheckedCreateWithoutNhomHangHoaInput[]
    connectOrCreate?: TbHangHoaCreateOrConnectWithoutNhomHangHoaInput | TbHangHoaCreateOrConnectWithoutNhomHangHoaInput[]
    createMany?: TbHangHoaCreateManyNhomHangHoaInputEnvelope
    connect?: TbHangHoaWhereUniqueInput | TbHangHoaWhereUniqueInput[]
  }

  export type TbHangHoaUpdateManyWithoutNhomHangHoaNestedInput = {
    create?: XOR<TbHangHoaCreateWithoutNhomHangHoaInput, TbHangHoaUncheckedCreateWithoutNhomHangHoaInput> | TbHangHoaCreateWithoutNhomHangHoaInput[] | TbHangHoaUncheckedCreateWithoutNhomHangHoaInput[]
    connectOrCreate?: TbHangHoaCreateOrConnectWithoutNhomHangHoaInput | TbHangHoaCreateOrConnectWithoutNhomHangHoaInput[]
    upsert?: TbHangHoaUpsertWithWhereUniqueWithoutNhomHangHoaInput | TbHangHoaUpsertWithWhereUniqueWithoutNhomHangHoaInput[]
    createMany?: TbHangHoaCreateManyNhomHangHoaInputEnvelope
    set?: TbHangHoaWhereUniqueInput | TbHangHoaWhereUniqueInput[]
    disconnect?: TbHangHoaWhereUniqueInput | TbHangHoaWhereUniqueInput[]
    delete?: TbHangHoaWhereUniqueInput | TbHangHoaWhereUniqueInput[]
    connect?: TbHangHoaWhereUniqueInput | TbHangHoaWhereUniqueInput[]
    update?: TbHangHoaUpdateWithWhereUniqueWithoutNhomHangHoaInput | TbHangHoaUpdateWithWhereUniqueWithoutNhomHangHoaInput[]
    updateMany?: TbHangHoaUpdateManyWithWhereWithoutNhomHangHoaInput | TbHangHoaUpdateManyWithWhereWithoutNhomHangHoaInput[]
    deleteMany?: TbHangHoaScalarWhereInput | TbHangHoaScalarWhereInput[]
  }

  export type TbKhachSanUpdateOneRequiredWithoutNhomHangHoaNestedInput = {
    create?: XOR<TbKhachSanCreateWithoutNhomHangHoaInput, TbKhachSanUncheckedCreateWithoutNhomHangHoaInput>
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutNhomHangHoaInput
    upsert?: TbKhachSanUpsertWithoutNhomHangHoaInput
    connect?: TbKhachSanWhereUniqueInput
    update?: XOR<XOR<TbKhachSanUpdateToOneWithWhereWithoutNhomHangHoaInput, TbKhachSanUpdateWithoutNhomHangHoaInput>, TbKhachSanUncheckedUpdateWithoutNhomHangHoaInput>
  }

  export type TbHangHoaUncheckedUpdateManyWithoutNhomHangHoaNestedInput = {
    create?: XOR<TbHangHoaCreateWithoutNhomHangHoaInput, TbHangHoaUncheckedCreateWithoutNhomHangHoaInput> | TbHangHoaCreateWithoutNhomHangHoaInput[] | TbHangHoaUncheckedCreateWithoutNhomHangHoaInput[]
    connectOrCreate?: TbHangHoaCreateOrConnectWithoutNhomHangHoaInput | TbHangHoaCreateOrConnectWithoutNhomHangHoaInput[]
    upsert?: TbHangHoaUpsertWithWhereUniqueWithoutNhomHangHoaInput | TbHangHoaUpsertWithWhereUniqueWithoutNhomHangHoaInput[]
    createMany?: TbHangHoaCreateManyNhomHangHoaInputEnvelope
    set?: TbHangHoaWhereUniqueInput | TbHangHoaWhereUniqueInput[]
    disconnect?: TbHangHoaWhereUniqueInput | TbHangHoaWhereUniqueInput[]
    delete?: TbHangHoaWhereUniqueInput | TbHangHoaWhereUniqueInput[]
    connect?: TbHangHoaWhereUniqueInput | TbHangHoaWhereUniqueInput[]
    update?: TbHangHoaUpdateWithWhereUniqueWithoutNhomHangHoaInput | TbHangHoaUpdateWithWhereUniqueWithoutNhomHangHoaInput[]
    updateMany?: TbHangHoaUpdateManyWithWhereWithoutNhomHangHoaInput | TbHangHoaUpdateManyWithWhereWithoutNhomHangHoaInput[]
    deleteMany?: TbHangHoaScalarWhereInput | TbHangHoaScalarWhereInput[]
  }

  export type TbChiTietDichVuDatChoCreateNestedManyWithoutHoaDonInput = {
    create?: XOR<TbChiTietDichVuDatChoCreateWithoutHoaDonInput, TbChiTietDichVuDatChoUncheckedCreateWithoutHoaDonInput> | TbChiTietDichVuDatChoCreateWithoutHoaDonInput[] | TbChiTietDichVuDatChoUncheckedCreateWithoutHoaDonInput[]
    connectOrCreate?: TbChiTietDichVuDatChoCreateOrConnectWithoutHoaDonInput | TbChiTietDichVuDatChoCreateOrConnectWithoutHoaDonInput[]
    createMany?: TbChiTietDichVuDatChoCreateManyHoaDonInputEnvelope
    connect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
  }

  export type TbKhachSanCreateNestedOneWithoutHoaDonInput = {
    create?: XOR<TbKhachSanCreateWithoutHoaDonInput, TbKhachSanUncheckedCreateWithoutHoaDonInput>
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutHoaDonInput
    connect?: TbKhachSanWhereUniqueInput
  }

  export type SubUserCreateNestedOneWithoutHoaDonInput = {
    create?: XOR<SubUserCreateWithoutHoaDonInput, SubUserUncheckedCreateWithoutHoaDonInput>
    connectOrCreate?: SubUserCreateOrConnectWithoutHoaDonInput
    connect?: SubUserWhereUniqueInput
  }

  export type TbChiTietDichVuDatChoUncheckedCreateNestedManyWithoutHoaDonInput = {
    create?: XOR<TbChiTietDichVuDatChoCreateWithoutHoaDonInput, TbChiTietDichVuDatChoUncheckedCreateWithoutHoaDonInput> | TbChiTietDichVuDatChoCreateWithoutHoaDonInput[] | TbChiTietDichVuDatChoUncheckedCreateWithoutHoaDonInput[]
    connectOrCreate?: TbChiTietDichVuDatChoCreateOrConnectWithoutHoaDonInput | TbChiTietDichVuDatChoCreateOrConnectWithoutHoaDonInput[]
    createMany?: TbChiTietDichVuDatChoCreateManyHoaDonInputEnvelope
    connect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type Enumtbhoadon_StatusFieldUpdateOperationsInput = {
    set?: $Enums.tbhoadon_Status
  }

  export type NullableEnumtbhoadon_PhuongThucThanhToanFieldUpdateOperationsInput = {
    set?: $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type TbChiTietDichVuDatChoUpdateManyWithoutHoaDonNestedInput = {
    create?: XOR<TbChiTietDichVuDatChoCreateWithoutHoaDonInput, TbChiTietDichVuDatChoUncheckedCreateWithoutHoaDonInput> | TbChiTietDichVuDatChoCreateWithoutHoaDonInput[] | TbChiTietDichVuDatChoUncheckedCreateWithoutHoaDonInput[]
    connectOrCreate?: TbChiTietDichVuDatChoCreateOrConnectWithoutHoaDonInput | TbChiTietDichVuDatChoCreateOrConnectWithoutHoaDonInput[]
    upsert?: TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutHoaDonInput | TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutHoaDonInput[]
    createMany?: TbChiTietDichVuDatChoCreateManyHoaDonInputEnvelope
    set?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    disconnect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    delete?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    connect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    update?: TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutHoaDonInput | TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutHoaDonInput[]
    updateMany?: TbChiTietDichVuDatChoUpdateManyWithWhereWithoutHoaDonInput | TbChiTietDichVuDatChoUpdateManyWithWhereWithoutHoaDonInput[]
    deleteMany?: TbChiTietDichVuDatChoScalarWhereInput | TbChiTietDichVuDatChoScalarWhereInput[]
  }

  export type TbKhachSanUpdateOneRequiredWithoutHoaDonNestedInput = {
    create?: XOR<TbKhachSanCreateWithoutHoaDonInput, TbKhachSanUncheckedCreateWithoutHoaDonInput>
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutHoaDonInput
    upsert?: TbKhachSanUpsertWithoutHoaDonInput
    connect?: TbKhachSanWhereUniqueInput
    update?: XOR<XOR<TbKhachSanUpdateToOneWithWhereWithoutHoaDonInput, TbKhachSanUpdateWithoutHoaDonInput>, TbKhachSanUncheckedUpdateWithoutHoaDonInput>
  }

  export type SubUserUpdateOneWithoutHoaDonNestedInput = {
    create?: XOR<SubUserCreateWithoutHoaDonInput, SubUserUncheckedCreateWithoutHoaDonInput>
    connectOrCreate?: SubUserCreateOrConnectWithoutHoaDonInput
    upsert?: SubUserUpsertWithoutHoaDonInput
    disconnect?: SubUserWhereInput | boolean
    delete?: SubUserWhereInput | boolean
    connect?: SubUserWhereUniqueInput
    update?: XOR<XOR<SubUserUpdateToOneWithWhereWithoutHoaDonInput, SubUserUpdateWithoutHoaDonInput>, SubUserUncheckedUpdateWithoutHoaDonInput>
  }

  export type TbChiTietDichVuDatChoUncheckedUpdateManyWithoutHoaDonNestedInput = {
    create?: XOR<TbChiTietDichVuDatChoCreateWithoutHoaDonInput, TbChiTietDichVuDatChoUncheckedCreateWithoutHoaDonInput> | TbChiTietDichVuDatChoCreateWithoutHoaDonInput[] | TbChiTietDichVuDatChoUncheckedCreateWithoutHoaDonInput[]
    connectOrCreate?: TbChiTietDichVuDatChoCreateOrConnectWithoutHoaDonInput | TbChiTietDichVuDatChoCreateOrConnectWithoutHoaDonInput[]
    upsert?: TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutHoaDonInput | TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutHoaDonInput[]
    createMany?: TbChiTietDichVuDatChoCreateManyHoaDonInputEnvelope
    set?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    disconnect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    delete?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    connect?: TbChiTietDichVuDatChoWhereUniqueInput | TbChiTietDichVuDatChoWhereUniqueInput[]
    update?: TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutHoaDonInput | TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutHoaDonInput[]
    updateMany?: TbChiTietDichVuDatChoUpdateManyWithWhereWithoutHoaDonInput | TbChiTietDichVuDatChoUpdateManyWithWhereWithoutHoaDonInput[]
    deleteMany?: TbChiTietDichVuDatChoScalarWhereInput | TbChiTietDichVuDatChoScalarWhereInput[]
  }

  export type TbDatChoCreateNestedManyWithoutKhachHangInput = {
    create?: XOR<TbDatChoCreateWithoutKhachHangInput, TbDatChoUncheckedCreateWithoutKhachHangInput> | TbDatChoCreateWithoutKhachHangInput[] | TbDatChoUncheckedCreateWithoutKhachHangInput[]
    connectOrCreate?: TbDatChoCreateOrConnectWithoutKhachHangInput | TbDatChoCreateOrConnectWithoutKhachHangInput[]
    createMany?: TbDatChoCreateManyKhachHangInputEnvelope
    connect?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
  }

  export type TbDatChoUncheckedCreateNestedManyWithoutKhachHangInput = {
    create?: XOR<TbDatChoCreateWithoutKhachHangInput, TbDatChoUncheckedCreateWithoutKhachHangInput> | TbDatChoCreateWithoutKhachHangInput[] | TbDatChoUncheckedCreateWithoutKhachHangInput[]
    connectOrCreate?: TbDatChoCreateOrConnectWithoutKhachHangInput | TbDatChoCreateOrConnectWithoutKhachHangInput[]
    createMany?: TbDatChoCreateManyKhachHangInputEnvelope
    connect?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
  }

  export type TbDatChoUpdateManyWithoutKhachHangNestedInput = {
    create?: XOR<TbDatChoCreateWithoutKhachHangInput, TbDatChoUncheckedCreateWithoutKhachHangInput> | TbDatChoCreateWithoutKhachHangInput[] | TbDatChoUncheckedCreateWithoutKhachHangInput[]
    connectOrCreate?: TbDatChoCreateOrConnectWithoutKhachHangInput | TbDatChoCreateOrConnectWithoutKhachHangInput[]
    upsert?: TbDatChoUpsertWithWhereUniqueWithoutKhachHangInput | TbDatChoUpsertWithWhereUniqueWithoutKhachHangInput[]
    createMany?: TbDatChoCreateManyKhachHangInputEnvelope
    set?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    disconnect?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    delete?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    connect?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    update?: TbDatChoUpdateWithWhereUniqueWithoutKhachHangInput | TbDatChoUpdateWithWhereUniqueWithoutKhachHangInput[]
    updateMany?: TbDatChoUpdateManyWithWhereWithoutKhachHangInput | TbDatChoUpdateManyWithWhereWithoutKhachHangInput[]
    deleteMany?: TbDatChoScalarWhereInput | TbDatChoScalarWhereInput[]
  }

  export type TbDatChoUncheckedUpdateManyWithoutKhachHangNestedInput = {
    create?: XOR<TbDatChoCreateWithoutKhachHangInput, TbDatChoUncheckedCreateWithoutKhachHangInput> | TbDatChoCreateWithoutKhachHangInput[] | TbDatChoUncheckedCreateWithoutKhachHangInput[]
    connectOrCreate?: TbDatChoCreateOrConnectWithoutKhachHangInput | TbDatChoCreateOrConnectWithoutKhachHangInput[]
    upsert?: TbDatChoUpsertWithWhereUniqueWithoutKhachHangInput | TbDatChoUpsertWithWhereUniqueWithoutKhachHangInput[]
    createMany?: TbDatChoCreateManyKhachHangInputEnvelope
    set?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    disconnect?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    delete?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    connect?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    update?: TbDatChoUpdateWithWhereUniqueWithoutKhachHangInput | TbDatChoUpdateWithWhereUniqueWithoutKhachHangInput[]
    updateMany?: TbDatChoUpdateManyWithWhereWithoutKhachHangInput | TbDatChoUpdateManyWithWhereWithoutKhachHangInput[]
    deleteMany?: TbDatChoScalarWhereInput | TbDatChoScalarWhereInput[]
  }

  export type SubUserCreateNestedManyWithoutKhachSanInput = {
    create?: XOR<SubUserCreateWithoutKhachSanInput, SubUserUncheckedCreateWithoutKhachSanInput> | SubUserCreateWithoutKhachSanInput[] | SubUserUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: SubUserCreateOrConnectWithoutKhachSanInput | SubUserCreateOrConnectWithoutKhachSanInput[]
    createMany?: SubUserCreateManyKhachSanInputEnvelope
    connect?: SubUserWhereUniqueInput | SubUserWhereUniqueInput[]
  }

  export type TbHoaDonCreateNestedManyWithoutKhachSanInput = {
    create?: XOR<TbHoaDonCreateWithoutKhachSanInput, TbHoaDonUncheckedCreateWithoutKhachSanInput> | TbHoaDonCreateWithoutKhachSanInput[] | TbHoaDonUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbHoaDonCreateOrConnectWithoutKhachSanInput | TbHoaDonCreateOrConnectWithoutKhachSanInput[]
    createMany?: TbHoaDonCreateManyKhachSanInputEnvelope
    connect?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
  }

  export type TbPhieuNhapCreateNestedManyWithoutKhachSanInput = {
    create?: XOR<TbPhieuNhapCreateWithoutKhachSanInput, TbPhieuNhapUncheckedCreateWithoutKhachSanInput> | TbPhieuNhapCreateWithoutKhachSanInput[] | TbPhieuNhapUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbPhieuNhapCreateOrConnectWithoutKhachSanInput | TbPhieuNhapCreateOrConnectWithoutKhachSanInput[]
    createMany?: TbPhieuNhapCreateManyKhachSanInputEnvelope
    connect?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
  }

  export type TbNhomKhuVucPhongCreateNestedManyWithoutKhachSanInput = {
    create?: XOR<TbNhomKhuVucPhongCreateWithoutKhachSanInput, TbNhomKhuVucPhongUncheckedCreateWithoutKhachSanInput> | TbNhomKhuVucPhongCreateWithoutKhachSanInput[] | TbNhomKhuVucPhongUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbNhomKhuVucPhongCreateOrConnectWithoutKhachSanInput | TbNhomKhuVucPhongCreateOrConnectWithoutKhachSanInput[]
    createMany?: TbNhomKhuVucPhongCreateManyKhachSanInputEnvelope
    connect?: TbNhomKhuVucPhongWhereUniqueInput | TbNhomKhuVucPhongWhereUniqueInput[]
  }

  export type TbNhomHangHoaCreateNestedManyWithoutKhachSanInput = {
    create?: XOR<TbNhomHangHoaCreateWithoutKhachSanInput, TbNhomHangHoaUncheckedCreateWithoutKhachSanInput> | TbNhomHangHoaCreateWithoutKhachSanInput[] | TbNhomHangHoaUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbNhomHangHoaCreateOrConnectWithoutKhachSanInput | TbNhomHangHoaCreateOrConnectWithoutKhachSanInput[]
    createMany?: TbNhomHangHoaCreateManyKhachSanInputEnvelope
    connect?: TbNhomHangHoaWhereUniqueInput | TbNhomHangHoaWhereUniqueInput[]
  }

  export type TbNhomDichVuCreateNestedManyWithoutKhachSanInput = {
    create?: XOR<TbNhomDichVuCreateWithoutKhachSanInput, TbNhomDichVuUncheckedCreateWithoutKhachSanInput> | TbNhomDichVuCreateWithoutKhachSanInput[] | TbNhomDichVuUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbNhomDichVuCreateOrConnectWithoutKhachSanInput | TbNhomDichVuCreateOrConnectWithoutKhachSanInput[]
    createMany?: TbNhomDichVuCreateManyKhachSanInputEnvelope
    connect?: TbNhomDichVuWhereUniqueInput | TbNhomDichVuWhereUniqueInput[]
  }

  export type TbChiNhanhCreateNestedOneWithoutKhachSanInput = {
    create?: XOR<TbChiNhanhCreateWithoutKhachSanInput, TbChiNhanhUncheckedCreateWithoutKhachSanInput>
    connectOrCreate?: TbChiNhanhCreateOrConnectWithoutKhachSanInput
    connect?: TbChiNhanhWhereUniqueInput
  }

  export type SubUserUncheckedCreateNestedManyWithoutKhachSanInput = {
    create?: XOR<SubUserCreateWithoutKhachSanInput, SubUserUncheckedCreateWithoutKhachSanInput> | SubUserCreateWithoutKhachSanInput[] | SubUserUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: SubUserCreateOrConnectWithoutKhachSanInput | SubUserCreateOrConnectWithoutKhachSanInput[]
    createMany?: SubUserCreateManyKhachSanInputEnvelope
    connect?: SubUserWhereUniqueInput | SubUserWhereUniqueInput[]
  }

  export type TbHoaDonUncheckedCreateNestedManyWithoutKhachSanInput = {
    create?: XOR<TbHoaDonCreateWithoutKhachSanInput, TbHoaDonUncheckedCreateWithoutKhachSanInput> | TbHoaDonCreateWithoutKhachSanInput[] | TbHoaDonUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbHoaDonCreateOrConnectWithoutKhachSanInput | TbHoaDonCreateOrConnectWithoutKhachSanInput[]
    createMany?: TbHoaDonCreateManyKhachSanInputEnvelope
    connect?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
  }

  export type TbPhieuNhapUncheckedCreateNestedManyWithoutKhachSanInput = {
    create?: XOR<TbPhieuNhapCreateWithoutKhachSanInput, TbPhieuNhapUncheckedCreateWithoutKhachSanInput> | TbPhieuNhapCreateWithoutKhachSanInput[] | TbPhieuNhapUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbPhieuNhapCreateOrConnectWithoutKhachSanInput | TbPhieuNhapCreateOrConnectWithoutKhachSanInput[]
    createMany?: TbPhieuNhapCreateManyKhachSanInputEnvelope
    connect?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
  }

  export type TbNhomKhuVucPhongUncheckedCreateNestedManyWithoutKhachSanInput = {
    create?: XOR<TbNhomKhuVucPhongCreateWithoutKhachSanInput, TbNhomKhuVucPhongUncheckedCreateWithoutKhachSanInput> | TbNhomKhuVucPhongCreateWithoutKhachSanInput[] | TbNhomKhuVucPhongUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbNhomKhuVucPhongCreateOrConnectWithoutKhachSanInput | TbNhomKhuVucPhongCreateOrConnectWithoutKhachSanInput[]
    createMany?: TbNhomKhuVucPhongCreateManyKhachSanInputEnvelope
    connect?: TbNhomKhuVucPhongWhereUniqueInput | TbNhomKhuVucPhongWhereUniqueInput[]
  }

  export type TbNhomHangHoaUncheckedCreateNestedManyWithoutKhachSanInput = {
    create?: XOR<TbNhomHangHoaCreateWithoutKhachSanInput, TbNhomHangHoaUncheckedCreateWithoutKhachSanInput> | TbNhomHangHoaCreateWithoutKhachSanInput[] | TbNhomHangHoaUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbNhomHangHoaCreateOrConnectWithoutKhachSanInput | TbNhomHangHoaCreateOrConnectWithoutKhachSanInput[]
    createMany?: TbNhomHangHoaCreateManyKhachSanInputEnvelope
    connect?: TbNhomHangHoaWhereUniqueInput | TbNhomHangHoaWhereUniqueInput[]
  }

  export type TbNhomDichVuUncheckedCreateNestedManyWithoutKhachSanInput = {
    create?: XOR<TbNhomDichVuCreateWithoutKhachSanInput, TbNhomDichVuUncheckedCreateWithoutKhachSanInput> | TbNhomDichVuCreateWithoutKhachSanInput[] | TbNhomDichVuUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbNhomDichVuCreateOrConnectWithoutKhachSanInput | TbNhomDichVuCreateOrConnectWithoutKhachSanInput[]
    createMany?: TbNhomDichVuCreateManyKhachSanInputEnvelope
    connect?: TbNhomDichVuWhereUniqueInput | TbNhomDichVuWhereUniqueInput[]
  }

  export type SubUserUpdateManyWithoutKhachSanNestedInput = {
    create?: XOR<SubUserCreateWithoutKhachSanInput, SubUserUncheckedCreateWithoutKhachSanInput> | SubUserCreateWithoutKhachSanInput[] | SubUserUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: SubUserCreateOrConnectWithoutKhachSanInput | SubUserCreateOrConnectWithoutKhachSanInput[]
    upsert?: SubUserUpsertWithWhereUniqueWithoutKhachSanInput | SubUserUpsertWithWhereUniqueWithoutKhachSanInput[]
    createMany?: SubUserCreateManyKhachSanInputEnvelope
    set?: SubUserWhereUniqueInput | SubUserWhereUniqueInput[]
    disconnect?: SubUserWhereUniqueInput | SubUserWhereUniqueInput[]
    delete?: SubUserWhereUniqueInput | SubUserWhereUniqueInput[]
    connect?: SubUserWhereUniqueInput | SubUserWhereUniqueInput[]
    update?: SubUserUpdateWithWhereUniqueWithoutKhachSanInput | SubUserUpdateWithWhereUniqueWithoutKhachSanInput[]
    updateMany?: SubUserUpdateManyWithWhereWithoutKhachSanInput | SubUserUpdateManyWithWhereWithoutKhachSanInput[]
    deleteMany?: SubUserScalarWhereInput | SubUserScalarWhereInput[]
  }

  export type TbHoaDonUpdateManyWithoutKhachSanNestedInput = {
    create?: XOR<TbHoaDonCreateWithoutKhachSanInput, TbHoaDonUncheckedCreateWithoutKhachSanInput> | TbHoaDonCreateWithoutKhachSanInput[] | TbHoaDonUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbHoaDonCreateOrConnectWithoutKhachSanInput | TbHoaDonCreateOrConnectWithoutKhachSanInput[]
    upsert?: TbHoaDonUpsertWithWhereUniqueWithoutKhachSanInput | TbHoaDonUpsertWithWhereUniqueWithoutKhachSanInput[]
    createMany?: TbHoaDonCreateManyKhachSanInputEnvelope
    set?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    disconnect?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    delete?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    connect?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    update?: TbHoaDonUpdateWithWhereUniqueWithoutKhachSanInput | TbHoaDonUpdateWithWhereUniqueWithoutKhachSanInput[]
    updateMany?: TbHoaDonUpdateManyWithWhereWithoutKhachSanInput | TbHoaDonUpdateManyWithWhereWithoutKhachSanInput[]
    deleteMany?: TbHoaDonScalarWhereInput | TbHoaDonScalarWhereInput[]
  }

  export type TbPhieuNhapUpdateManyWithoutKhachSanNestedInput = {
    create?: XOR<TbPhieuNhapCreateWithoutKhachSanInput, TbPhieuNhapUncheckedCreateWithoutKhachSanInput> | TbPhieuNhapCreateWithoutKhachSanInput[] | TbPhieuNhapUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbPhieuNhapCreateOrConnectWithoutKhachSanInput | TbPhieuNhapCreateOrConnectWithoutKhachSanInput[]
    upsert?: TbPhieuNhapUpsertWithWhereUniqueWithoutKhachSanInput | TbPhieuNhapUpsertWithWhereUniqueWithoutKhachSanInput[]
    createMany?: TbPhieuNhapCreateManyKhachSanInputEnvelope
    set?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    disconnect?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    delete?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    connect?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    update?: TbPhieuNhapUpdateWithWhereUniqueWithoutKhachSanInput | TbPhieuNhapUpdateWithWhereUniqueWithoutKhachSanInput[]
    updateMany?: TbPhieuNhapUpdateManyWithWhereWithoutKhachSanInput | TbPhieuNhapUpdateManyWithWhereWithoutKhachSanInput[]
    deleteMany?: TbPhieuNhapScalarWhereInput | TbPhieuNhapScalarWhereInput[]
  }

  export type TbNhomKhuVucPhongUpdateManyWithoutKhachSanNestedInput = {
    create?: XOR<TbNhomKhuVucPhongCreateWithoutKhachSanInput, TbNhomKhuVucPhongUncheckedCreateWithoutKhachSanInput> | TbNhomKhuVucPhongCreateWithoutKhachSanInput[] | TbNhomKhuVucPhongUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbNhomKhuVucPhongCreateOrConnectWithoutKhachSanInput | TbNhomKhuVucPhongCreateOrConnectWithoutKhachSanInput[]
    upsert?: TbNhomKhuVucPhongUpsertWithWhereUniqueWithoutKhachSanInput | TbNhomKhuVucPhongUpsertWithWhereUniqueWithoutKhachSanInput[]
    createMany?: TbNhomKhuVucPhongCreateManyKhachSanInputEnvelope
    set?: TbNhomKhuVucPhongWhereUniqueInput | TbNhomKhuVucPhongWhereUniqueInput[]
    disconnect?: TbNhomKhuVucPhongWhereUniqueInput | TbNhomKhuVucPhongWhereUniqueInput[]
    delete?: TbNhomKhuVucPhongWhereUniqueInput | TbNhomKhuVucPhongWhereUniqueInput[]
    connect?: TbNhomKhuVucPhongWhereUniqueInput | TbNhomKhuVucPhongWhereUniqueInput[]
    update?: TbNhomKhuVucPhongUpdateWithWhereUniqueWithoutKhachSanInput | TbNhomKhuVucPhongUpdateWithWhereUniqueWithoutKhachSanInput[]
    updateMany?: TbNhomKhuVucPhongUpdateManyWithWhereWithoutKhachSanInput | TbNhomKhuVucPhongUpdateManyWithWhereWithoutKhachSanInput[]
    deleteMany?: TbNhomKhuVucPhongScalarWhereInput | TbNhomKhuVucPhongScalarWhereInput[]
  }

  export type TbNhomHangHoaUpdateManyWithoutKhachSanNestedInput = {
    create?: XOR<TbNhomHangHoaCreateWithoutKhachSanInput, TbNhomHangHoaUncheckedCreateWithoutKhachSanInput> | TbNhomHangHoaCreateWithoutKhachSanInput[] | TbNhomHangHoaUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbNhomHangHoaCreateOrConnectWithoutKhachSanInput | TbNhomHangHoaCreateOrConnectWithoutKhachSanInput[]
    upsert?: TbNhomHangHoaUpsertWithWhereUniqueWithoutKhachSanInput | TbNhomHangHoaUpsertWithWhereUniqueWithoutKhachSanInput[]
    createMany?: TbNhomHangHoaCreateManyKhachSanInputEnvelope
    set?: TbNhomHangHoaWhereUniqueInput | TbNhomHangHoaWhereUniqueInput[]
    disconnect?: TbNhomHangHoaWhereUniqueInput | TbNhomHangHoaWhereUniqueInput[]
    delete?: TbNhomHangHoaWhereUniqueInput | TbNhomHangHoaWhereUniqueInput[]
    connect?: TbNhomHangHoaWhereUniqueInput | TbNhomHangHoaWhereUniqueInput[]
    update?: TbNhomHangHoaUpdateWithWhereUniqueWithoutKhachSanInput | TbNhomHangHoaUpdateWithWhereUniqueWithoutKhachSanInput[]
    updateMany?: TbNhomHangHoaUpdateManyWithWhereWithoutKhachSanInput | TbNhomHangHoaUpdateManyWithWhereWithoutKhachSanInput[]
    deleteMany?: TbNhomHangHoaScalarWhereInput | TbNhomHangHoaScalarWhereInput[]
  }

  export type TbNhomDichVuUpdateManyWithoutKhachSanNestedInput = {
    create?: XOR<TbNhomDichVuCreateWithoutKhachSanInput, TbNhomDichVuUncheckedCreateWithoutKhachSanInput> | TbNhomDichVuCreateWithoutKhachSanInput[] | TbNhomDichVuUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbNhomDichVuCreateOrConnectWithoutKhachSanInput | TbNhomDichVuCreateOrConnectWithoutKhachSanInput[]
    upsert?: TbNhomDichVuUpsertWithWhereUniqueWithoutKhachSanInput | TbNhomDichVuUpsertWithWhereUniqueWithoutKhachSanInput[]
    createMany?: TbNhomDichVuCreateManyKhachSanInputEnvelope
    set?: TbNhomDichVuWhereUniqueInput | TbNhomDichVuWhereUniqueInput[]
    disconnect?: TbNhomDichVuWhereUniqueInput | TbNhomDichVuWhereUniqueInput[]
    delete?: TbNhomDichVuWhereUniqueInput | TbNhomDichVuWhereUniqueInput[]
    connect?: TbNhomDichVuWhereUniqueInput | TbNhomDichVuWhereUniqueInput[]
    update?: TbNhomDichVuUpdateWithWhereUniqueWithoutKhachSanInput | TbNhomDichVuUpdateWithWhereUniqueWithoutKhachSanInput[]
    updateMany?: TbNhomDichVuUpdateManyWithWhereWithoutKhachSanInput | TbNhomDichVuUpdateManyWithWhereWithoutKhachSanInput[]
    deleteMany?: TbNhomDichVuScalarWhereInput | TbNhomDichVuScalarWhereInput[]
  }

  export type TbChiNhanhUpdateOneRequiredWithoutKhachSanNestedInput = {
    create?: XOR<TbChiNhanhCreateWithoutKhachSanInput, TbChiNhanhUncheckedCreateWithoutKhachSanInput>
    connectOrCreate?: TbChiNhanhCreateOrConnectWithoutKhachSanInput
    upsert?: TbChiNhanhUpsertWithoutKhachSanInput
    connect?: TbChiNhanhWhereUniqueInput
    update?: XOR<XOR<TbChiNhanhUpdateToOneWithWhereWithoutKhachSanInput, TbChiNhanhUpdateWithoutKhachSanInput>, TbChiNhanhUncheckedUpdateWithoutKhachSanInput>
  }

  export type SubUserUncheckedUpdateManyWithoutKhachSanNestedInput = {
    create?: XOR<SubUserCreateWithoutKhachSanInput, SubUserUncheckedCreateWithoutKhachSanInput> | SubUserCreateWithoutKhachSanInput[] | SubUserUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: SubUserCreateOrConnectWithoutKhachSanInput | SubUserCreateOrConnectWithoutKhachSanInput[]
    upsert?: SubUserUpsertWithWhereUniqueWithoutKhachSanInput | SubUserUpsertWithWhereUniqueWithoutKhachSanInput[]
    createMany?: SubUserCreateManyKhachSanInputEnvelope
    set?: SubUserWhereUniqueInput | SubUserWhereUniqueInput[]
    disconnect?: SubUserWhereUniqueInput | SubUserWhereUniqueInput[]
    delete?: SubUserWhereUniqueInput | SubUserWhereUniqueInput[]
    connect?: SubUserWhereUniqueInput | SubUserWhereUniqueInput[]
    update?: SubUserUpdateWithWhereUniqueWithoutKhachSanInput | SubUserUpdateWithWhereUniqueWithoutKhachSanInput[]
    updateMany?: SubUserUpdateManyWithWhereWithoutKhachSanInput | SubUserUpdateManyWithWhereWithoutKhachSanInput[]
    deleteMany?: SubUserScalarWhereInput | SubUserScalarWhereInput[]
  }

  export type TbHoaDonUncheckedUpdateManyWithoutKhachSanNestedInput = {
    create?: XOR<TbHoaDonCreateWithoutKhachSanInput, TbHoaDonUncheckedCreateWithoutKhachSanInput> | TbHoaDonCreateWithoutKhachSanInput[] | TbHoaDonUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbHoaDonCreateOrConnectWithoutKhachSanInput | TbHoaDonCreateOrConnectWithoutKhachSanInput[]
    upsert?: TbHoaDonUpsertWithWhereUniqueWithoutKhachSanInput | TbHoaDonUpsertWithWhereUniqueWithoutKhachSanInput[]
    createMany?: TbHoaDonCreateManyKhachSanInputEnvelope
    set?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    disconnect?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    delete?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    connect?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    update?: TbHoaDonUpdateWithWhereUniqueWithoutKhachSanInput | TbHoaDonUpdateWithWhereUniqueWithoutKhachSanInput[]
    updateMany?: TbHoaDonUpdateManyWithWhereWithoutKhachSanInput | TbHoaDonUpdateManyWithWhereWithoutKhachSanInput[]
    deleteMany?: TbHoaDonScalarWhereInput | TbHoaDonScalarWhereInput[]
  }

  export type TbPhieuNhapUncheckedUpdateManyWithoutKhachSanNestedInput = {
    create?: XOR<TbPhieuNhapCreateWithoutKhachSanInput, TbPhieuNhapUncheckedCreateWithoutKhachSanInput> | TbPhieuNhapCreateWithoutKhachSanInput[] | TbPhieuNhapUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbPhieuNhapCreateOrConnectWithoutKhachSanInput | TbPhieuNhapCreateOrConnectWithoutKhachSanInput[]
    upsert?: TbPhieuNhapUpsertWithWhereUniqueWithoutKhachSanInput | TbPhieuNhapUpsertWithWhereUniqueWithoutKhachSanInput[]
    createMany?: TbPhieuNhapCreateManyKhachSanInputEnvelope
    set?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    disconnect?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    delete?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    connect?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    update?: TbPhieuNhapUpdateWithWhereUniqueWithoutKhachSanInput | TbPhieuNhapUpdateWithWhereUniqueWithoutKhachSanInput[]
    updateMany?: TbPhieuNhapUpdateManyWithWhereWithoutKhachSanInput | TbPhieuNhapUpdateManyWithWhereWithoutKhachSanInput[]
    deleteMany?: TbPhieuNhapScalarWhereInput | TbPhieuNhapScalarWhereInput[]
  }

  export type TbNhomKhuVucPhongUncheckedUpdateManyWithoutKhachSanNestedInput = {
    create?: XOR<TbNhomKhuVucPhongCreateWithoutKhachSanInput, TbNhomKhuVucPhongUncheckedCreateWithoutKhachSanInput> | TbNhomKhuVucPhongCreateWithoutKhachSanInput[] | TbNhomKhuVucPhongUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbNhomKhuVucPhongCreateOrConnectWithoutKhachSanInput | TbNhomKhuVucPhongCreateOrConnectWithoutKhachSanInput[]
    upsert?: TbNhomKhuVucPhongUpsertWithWhereUniqueWithoutKhachSanInput | TbNhomKhuVucPhongUpsertWithWhereUniqueWithoutKhachSanInput[]
    createMany?: TbNhomKhuVucPhongCreateManyKhachSanInputEnvelope
    set?: TbNhomKhuVucPhongWhereUniqueInput | TbNhomKhuVucPhongWhereUniqueInput[]
    disconnect?: TbNhomKhuVucPhongWhereUniqueInput | TbNhomKhuVucPhongWhereUniqueInput[]
    delete?: TbNhomKhuVucPhongWhereUniqueInput | TbNhomKhuVucPhongWhereUniqueInput[]
    connect?: TbNhomKhuVucPhongWhereUniqueInput | TbNhomKhuVucPhongWhereUniqueInput[]
    update?: TbNhomKhuVucPhongUpdateWithWhereUniqueWithoutKhachSanInput | TbNhomKhuVucPhongUpdateWithWhereUniqueWithoutKhachSanInput[]
    updateMany?: TbNhomKhuVucPhongUpdateManyWithWhereWithoutKhachSanInput | TbNhomKhuVucPhongUpdateManyWithWhereWithoutKhachSanInput[]
    deleteMany?: TbNhomKhuVucPhongScalarWhereInput | TbNhomKhuVucPhongScalarWhereInput[]
  }

  export type TbNhomHangHoaUncheckedUpdateManyWithoutKhachSanNestedInput = {
    create?: XOR<TbNhomHangHoaCreateWithoutKhachSanInput, TbNhomHangHoaUncheckedCreateWithoutKhachSanInput> | TbNhomHangHoaCreateWithoutKhachSanInput[] | TbNhomHangHoaUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbNhomHangHoaCreateOrConnectWithoutKhachSanInput | TbNhomHangHoaCreateOrConnectWithoutKhachSanInput[]
    upsert?: TbNhomHangHoaUpsertWithWhereUniqueWithoutKhachSanInput | TbNhomHangHoaUpsertWithWhereUniqueWithoutKhachSanInput[]
    createMany?: TbNhomHangHoaCreateManyKhachSanInputEnvelope
    set?: TbNhomHangHoaWhereUniqueInput | TbNhomHangHoaWhereUniqueInput[]
    disconnect?: TbNhomHangHoaWhereUniqueInput | TbNhomHangHoaWhereUniqueInput[]
    delete?: TbNhomHangHoaWhereUniqueInput | TbNhomHangHoaWhereUniqueInput[]
    connect?: TbNhomHangHoaWhereUniqueInput | TbNhomHangHoaWhereUniqueInput[]
    update?: TbNhomHangHoaUpdateWithWhereUniqueWithoutKhachSanInput | TbNhomHangHoaUpdateWithWhereUniqueWithoutKhachSanInput[]
    updateMany?: TbNhomHangHoaUpdateManyWithWhereWithoutKhachSanInput | TbNhomHangHoaUpdateManyWithWhereWithoutKhachSanInput[]
    deleteMany?: TbNhomHangHoaScalarWhereInput | TbNhomHangHoaScalarWhereInput[]
  }

  export type TbNhomDichVuUncheckedUpdateManyWithoutKhachSanNestedInput = {
    create?: XOR<TbNhomDichVuCreateWithoutKhachSanInput, TbNhomDichVuUncheckedCreateWithoutKhachSanInput> | TbNhomDichVuCreateWithoutKhachSanInput[] | TbNhomDichVuUncheckedCreateWithoutKhachSanInput[]
    connectOrCreate?: TbNhomDichVuCreateOrConnectWithoutKhachSanInput | TbNhomDichVuCreateOrConnectWithoutKhachSanInput[]
    upsert?: TbNhomDichVuUpsertWithWhereUniqueWithoutKhachSanInput | TbNhomDichVuUpsertWithWhereUniqueWithoutKhachSanInput[]
    createMany?: TbNhomDichVuCreateManyKhachSanInputEnvelope
    set?: TbNhomDichVuWhereUniqueInput | TbNhomDichVuWhereUniqueInput[]
    disconnect?: TbNhomDichVuWhereUniqueInput | TbNhomDichVuWhereUniqueInput[]
    delete?: TbNhomDichVuWhereUniqueInput | TbNhomDichVuWhereUniqueInput[]
    connect?: TbNhomDichVuWhereUniqueInput | TbNhomDichVuWhereUniqueInput[]
    update?: TbNhomDichVuUpdateWithWhereUniqueWithoutKhachSanInput | TbNhomDichVuUpdateWithWhereUniqueWithoutKhachSanInput[]
    updateMany?: TbNhomDichVuUpdateManyWithWhereWithoutKhachSanInput | TbNhomDichVuUpdateManyWithWhereWithoutKhachSanInput[]
    deleteMany?: TbNhomDichVuScalarWhereInput | TbNhomDichVuScalarWhereInput[]
  }

  export type TbCacLinkAnhLoaiPhongCreateNestedManyWithoutLoaiPhongInput = {
    create?: XOR<TbCacLinkAnhLoaiPhongCreateWithoutLoaiPhongInput, TbCacLinkAnhLoaiPhongUncheckedCreateWithoutLoaiPhongInput> | TbCacLinkAnhLoaiPhongCreateWithoutLoaiPhongInput[] | TbCacLinkAnhLoaiPhongUncheckedCreateWithoutLoaiPhongInput[]
    connectOrCreate?: TbCacLinkAnhLoaiPhongCreateOrConnectWithoutLoaiPhongInput | TbCacLinkAnhLoaiPhongCreateOrConnectWithoutLoaiPhongInput[]
    createMany?: TbCacLinkAnhLoaiPhongCreateManyLoaiPhongInputEnvelope
    connect?: TbCacLinkAnhLoaiPhongWhereUniqueInput | TbCacLinkAnhLoaiPhongWhereUniqueInput[]
  }

  export type TbPhongCreateNestedManyWithoutLoaiPhongInput = {
    create?: XOR<TbPhongCreateWithoutLoaiPhongInput, TbPhongUncheckedCreateWithoutLoaiPhongInput> | TbPhongCreateWithoutLoaiPhongInput[] | TbPhongUncheckedCreateWithoutLoaiPhongInput[]
    connectOrCreate?: TbPhongCreateOrConnectWithoutLoaiPhongInput | TbPhongCreateOrConnectWithoutLoaiPhongInput[]
    createMany?: TbPhongCreateManyLoaiPhongInputEnvelope
    connect?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
  }

  export type TbCacLinkAnhLoaiPhongUncheckedCreateNestedManyWithoutLoaiPhongInput = {
    create?: XOR<TbCacLinkAnhLoaiPhongCreateWithoutLoaiPhongInput, TbCacLinkAnhLoaiPhongUncheckedCreateWithoutLoaiPhongInput> | TbCacLinkAnhLoaiPhongCreateWithoutLoaiPhongInput[] | TbCacLinkAnhLoaiPhongUncheckedCreateWithoutLoaiPhongInput[]
    connectOrCreate?: TbCacLinkAnhLoaiPhongCreateOrConnectWithoutLoaiPhongInput | TbCacLinkAnhLoaiPhongCreateOrConnectWithoutLoaiPhongInput[]
    createMany?: TbCacLinkAnhLoaiPhongCreateManyLoaiPhongInputEnvelope
    connect?: TbCacLinkAnhLoaiPhongWhereUniqueInput | TbCacLinkAnhLoaiPhongWhereUniqueInput[]
  }

  export type TbPhongUncheckedCreateNestedManyWithoutLoaiPhongInput = {
    create?: XOR<TbPhongCreateWithoutLoaiPhongInput, TbPhongUncheckedCreateWithoutLoaiPhongInput> | TbPhongCreateWithoutLoaiPhongInput[] | TbPhongUncheckedCreateWithoutLoaiPhongInput[]
    connectOrCreate?: TbPhongCreateOrConnectWithoutLoaiPhongInput | TbPhongCreateOrConnectWithoutLoaiPhongInput[]
    createMany?: TbPhongCreateManyLoaiPhongInputEnvelope
    connect?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
  }

  export type TbCacLinkAnhLoaiPhongUpdateManyWithoutLoaiPhongNestedInput = {
    create?: XOR<TbCacLinkAnhLoaiPhongCreateWithoutLoaiPhongInput, TbCacLinkAnhLoaiPhongUncheckedCreateWithoutLoaiPhongInput> | TbCacLinkAnhLoaiPhongCreateWithoutLoaiPhongInput[] | TbCacLinkAnhLoaiPhongUncheckedCreateWithoutLoaiPhongInput[]
    connectOrCreate?: TbCacLinkAnhLoaiPhongCreateOrConnectWithoutLoaiPhongInput | TbCacLinkAnhLoaiPhongCreateOrConnectWithoutLoaiPhongInput[]
    upsert?: TbCacLinkAnhLoaiPhongUpsertWithWhereUniqueWithoutLoaiPhongInput | TbCacLinkAnhLoaiPhongUpsertWithWhereUniqueWithoutLoaiPhongInput[]
    createMany?: TbCacLinkAnhLoaiPhongCreateManyLoaiPhongInputEnvelope
    set?: TbCacLinkAnhLoaiPhongWhereUniqueInput | TbCacLinkAnhLoaiPhongWhereUniqueInput[]
    disconnect?: TbCacLinkAnhLoaiPhongWhereUniqueInput | TbCacLinkAnhLoaiPhongWhereUniqueInput[]
    delete?: TbCacLinkAnhLoaiPhongWhereUniqueInput | TbCacLinkAnhLoaiPhongWhereUniqueInput[]
    connect?: TbCacLinkAnhLoaiPhongWhereUniqueInput | TbCacLinkAnhLoaiPhongWhereUniqueInput[]
    update?: TbCacLinkAnhLoaiPhongUpdateWithWhereUniqueWithoutLoaiPhongInput | TbCacLinkAnhLoaiPhongUpdateWithWhereUniqueWithoutLoaiPhongInput[]
    updateMany?: TbCacLinkAnhLoaiPhongUpdateManyWithWhereWithoutLoaiPhongInput | TbCacLinkAnhLoaiPhongUpdateManyWithWhereWithoutLoaiPhongInput[]
    deleteMany?: TbCacLinkAnhLoaiPhongScalarWhereInput | TbCacLinkAnhLoaiPhongScalarWhereInput[]
  }

  export type TbPhongUpdateManyWithoutLoaiPhongNestedInput = {
    create?: XOR<TbPhongCreateWithoutLoaiPhongInput, TbPhongUncheckedCreateWithoutLoaiPhongInput> | TbPhongCreateWithoutLoaiPhongInput[] | TbPhongUncheckedCreateWithoutLoaiPhongInput[]
    connectOrCreate?: TbPhongCreateOrConnectWithoutLoaiPhongInput | TbPhongCreateOrConnectWithoutLoaiPhongInput[]
    upsert?: TbPhongUpsertWithWhereUniqueWithoutLoaiPhongInput | TbPhongUpsertWithWhereUniqueWithoutLoaiPhongInput[]
    createMany?: TbPhongCreateManyLoaiPhongInputEnvelope
    set?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    disconnect?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    delete?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    connect?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    update?: TbPhongUpdateWithWhereUniqueWithoutLoaiPhongInput | TbPhongUpdateWithWhereUniqueWithoutLoaiPhongInput[]
    updateMany?: TbPhongUpdateManyWithWhereWithoutLoaiPhongInput | TbPhongUpdateManyWithWhereWithoutLoaiPhongInput[]
    deleteMany?: TbPhongScalarWhereInput | TbPhongScalarWhereInput[]
  }

  export type TbCacLinkAnhLoaiPhongUncheckedUpdateManyWithoutLoaiPhongNestedInput = {
    create?: XOR<TbCacLinkAnhLoaiPhongCreateWithoutLoaiPhongInput, TbCacLinkAnhLoaiPhongUncheckedCreateWithoutLoaiPhongInput> | TbCacLinkAnhLoaiPhongCreateWithoutLoaiPhongInput[] | TbCacLinkAnhLoaiPhongUncheckedCreateWithoutLoaiPhongInput[]
    connectOrCreate?: TbCacLinkAnhLoaiPhongCreateOrConnectWithoutLoaiPhongInput | TbCacLinkAnhLoaiPhongCreateOrConnectWithoutLoaiPhongInput[]
    upsert?: TbCacLinkAnhLoaiPhongUpsertWithWhereUniqueWithoutLoaiPhongInput | TbCacLinkAnhLoaiPhongUpsertWithWhereUniqueWithoutLoaiPhongInput[]
    createMany?: TbCacLinkAnhLoaiPhongCreateManyLoaiPhongInputEnvelope
    set?: TbCacLinkAnhLoaiPhongWhereUniqueInput | TbCacLinkAnhLoaiPhongWhereUniqueInput[]
    disconnect?: TbCacLinkAnhLoaiPhongWhereUniqueInput | TbCacLinkAnhLoaiPhongWhereUniqueInput[]
    delete?: TbCacLinkAnhLoaiPhongWhereUniqueInput | TbCacLinkAnhLoaiPhongWhereUniqueInput[]
    connect?: TbCacLinkAnhLoaiPhongWhereUniqueInput | TbCacLinkAnhLoaiPhongWhereUniqueInput[]
    update?: TbCacLinkAnhLoaiPhongUpdateWithWhereUniqueWithoutLoaiPhongInput | TbCacLinkAnhLoaiPhongUpdateWithWhereUniqueWithoutLoaiPhongInput[]
    updateMany?: TbCacLinkAnhLoaiPhongUpdateManyWithWhereWithoutLoaiPhongInput | TbCacLinkAnhLoaiPhongUpdateManyWithWhereWithoutLoaiPhongInput[]
    deleteMany?: TbCacLinkAnhLoaiPhongScalarWhereInput | TbCacLinkAnhLoaiPhongScalarWhereInput[]
  }

  export type TbPhongUncheckedUpdateManyWithoutLoaiPhongNestedInput = {
    create?: XOR<TbPhongCreateWithoutLoaiPhongInput, TbPhongUncheckedCreateWithoutLoaiPhongInput> | TbPhongCreateWithoutLoaiPhongInput[] | TbPhongUncheckedCreateWithoutLoaiPhongInput[]
    connectOrCreate?: TbPhongCreateOrConnectWithoutLoaiPhongInput | TbPhongCreateOrConnectWithoutLoaiPhongInput[]
    upsert?: TbPhongUpsertWithWhereUniqueWithoutLoaiPhongInput | TbPhongUpsertWithWhereUniqueWithoutLoaiPhongInput[]
    createMany?: TbPhongCreateManyLoaiPhongInputEnvelope
    set?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    disconnect?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    delete?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    connect?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    update?: TbPhongUpdateWithWhereUniqueWithoutLoaiPhongInput | TbPhongUpdateWithWhereUniqueWithoutLoaiPhongInput[]
    updateMany?: TbPhongUpdateManyWithWhereWithoutLoaiPhongInput | TbPhongUpdateManyWithWhereWithoutLoaiPhongInput[]
    deleteMany?: TbPhongScalarWhereInput | TbPhongScalarWhereInput[]
  }

  export type TbLoaiPhongCreateNestedOneWithoutCacLinkAnhLoaiPhongInput = {
    create?: XOR<TbLoaiPhongCreateWithoutCacLinkAnhLoaiPhongInput, TbLoaiPhongUncheckedCreateWithoutCacLinkAnhLoaiPhongInput>
    connectOrCreate?: TbLoaiPhongCreateOrConnectWithoutCacLinkAnhLoaiPhongInput
    connect?: TbLoaiPhongWhereUniqueInput
  }

  export type TbLoaiPhongUpdateOneRequiredWithoutCacLinkAnhLoaiPhongNestedInput = {
    create?: XOR<TbLoaiPhongCreateWithoutCacLinkAnhLoaiPhongInput, TbLoaiPhongUncheckedCreateWithoutCacLinkAnhLoaiPhongInput>
    connectOrCreate?: TbLoaiPhongCreateOrConnectWithoutCacLinkAnhLoaiPhongInput
    upsert?: TbLoaiPhongUpsertWithoutCacLinkAnhLoaiPhongInput
    connect?: TbLoaiPhongWhereUniqueInput
    update?: XOR<XOR<TbLoaiPhongUpdateToOneWithWhereWithoutCacLinkAnhLoaiPhongInput, TbLoaiPhongUpdateWithoutCacLinkAnhLoaiPhongInput>, TbLoaiPhongUncheckedUpdateWithoutCacLinkAnhLoaiPhongInput>
  }

  export type TbDichVuCreateNestedOneWithoutCacLinkAnhDichVuInput = {
    create?: XOR<TbDichVuCreateWithoutCacLinkAnhDichVuInput, TbDichVuUncheckedCreateWithoutCacLinkAnhDichVuInput>
    connectOrCreate?: TbDichVuCreateOrConnectWithoutCacLinkAnhDichVuInput
    connect?: TbDichVuWhereUniqueInput
  }

  export type TbDichVuUpdateOneRequiredWithoutCacLinkAnhDichVuNestedInput = {
    create?: XOR<TbDichVuCreateWithoutCacLinkAnhDichVuInput, TbDichVuUncheckedCreateWithoutCacLinkAnhDichVuInput>
    connectOrCreate?: TbDichVuCreateOrConnectWithoutCacLinkAnhDichVuInput
    upsert?: TbDichVuUpsertWithoutCacLinkAnhDichVuInput
    connect?: TbDichVuWhereUniqueInput
    update?: XOR<XOR<TbDichVuUpdateToOneWithWhereWithoutCacLinkAnhDichVuInput, TbDichVuUpdateWithoutCacLinkAnhDichVuInput>, TbDichVuUncheckedUpdateWithoutCacLinkAnhDichVuInput>
  }

  export type TbHangHoaCreateNestedOneWithoutCacLinkAnhHangHoaInput = {
    create?: XOR<TbHangHoaCreateWithoutCacLinkAnhHangHoaInput, TbHangHoaUncheckedCreateWithoutCacLinkAnhHangHoaInput>
    connectOrCreate?: TbHangHoaCreateOrConnectWithoutCacLinkAnhHangHoaInput
    connect?: TbHangHoaWhereUniqueInput
  }

  export type TbHangHoaUpdateOneRequiredWithoutCacLinkAnhHangHoaNestedInput = {
    create?: XOR<TbHangHoaCreateWithoutCacLinkAnhHangHoaInput, TbHangHoaUncheckedCreateWithoutCacLinkAnhHangHoaInput>
    connectOrCreate?: TbHangHoaCreateOrConnectWithoutCacLinkAnhHangHoaInput
    upsert?: TbHangHoaUpsertWithoutCacLinkAnhHangHoaInput
    connect?: TbHangHoaWhereUniqueInput
    update?: XOR<XOR<TbHangHoaUpdateToOneWithWhereWithoutCacLinkAnhHangHoaInput, TbHangHoaUpdateWithoutCacLinkAnhHangHoaInput>, TbHangHoaUncheckedUpdateWithoutCacLinkAnhHangHoaInput>
  }

  export type TbPhongCreateNestedOneWithoutCacLinkAnhPhongInput = {
    create?: XOR<TbPhongCreateWithoutCacLinkAnhPhongInput, TbPhongUncheckedCreateWithoutCacLinkAnhPhongInput>
    connectOrCreate?: TbPhongCreateOrConnectWithoutCacLinkAnhPhongInput
    connect?: TbPhongWhereUniqueInput
  }

  export type TbPhongUpdateOneRequiredWithoutCacLinkAnhPhongNestedInput = {
    create?: XOR<TbPhongCreateWithoutCacLinkAnhPhongInput, TbPhongUncheckedCreateWithoutCacLinkAnhPhongInput>
    connectOrCreate?: TbPhongCreateOrConnectWithoutCacLinkAnhPhongInput
    upsert?: TbPhongUpsertWithoutCacLinkAnhPhongInput
    connect?: TbPhongWhereUniqueInput
    update?: XOR<XOR<TbPhongUpdateToOneWithWhereWithoutCacLinkAnhPhongInput, TbPhongUpdateWithoutCacLinkAnhPhongInput>, TbPhongUncheckedUpdateWithoutCacLinkAnhPhongInput>
  }

  export type TbPhieuNhapCreateNestedManyWithoutNhaCungCapInput = {
    create?: XOR<TbPhieuNhapCreateWithoutNhaCungCapInput, TbPhieuNhapUncheckedCreateWithoutNhaCungCapInput> | TbPhieuNhapCreateWithoutNhaCungCapInput[] | TbPhieuNhapUncheckedCreateWithoutNhaCungCapInput[]
    connectOrCreate?: TbPhieuNhapCreateOrConnectWithoutNhaCungCapInput | TbPhieuNhapCreateOrConnectWithoutNhaCungCapInput[]
    createMany?: TbPhieuNhapCreateManyNhaCungCapInputEnvelope
    connect?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
  }

  export type TbPhieuNhapUncheckedCreateNestedManyWithoutNhaCungCapInput = {
    create?: XOR<TbPhieuNhapCreateWithoutNhaCungCapInput, TbPhieuNhapUncheckedCreateWithoutNhaCungCapInput> | TbPhieuNhapCreateWithoutNhaCungCapInput[] | TbPhieuNhapUncheckedCreateWithoutNhaCungCapInput[]
    connectOrCreate?: TbPhieuNhapCreateOrConnectWithoutNhaCungCapInput | TbPhieuNhapCreateOrConnectWithoutNhaCungCapInput[]
    createMany?: TbPhieuNhapCreateManyNhaCungCapInputEnvelope
    connect?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
  }

  export type TbPhieuNhapUpdateManyWithoutNhaCungCapNestedInput = {
    create?: XOR<TbPhieuNhapCreateWithoutNhaCungCapInput, TbPhieuNhapUncheckedCreateWithoutNhaCungCapInput> | TbPhieuNhapCreateWithoutNhaCungCapInput[] | TbPhieuNhapUncheckedCreateWithoutNhaCungCapInput[]
    connectOrCreate?: TbPhieuNhapCreateOrConnectWithoutNhaCungCapInput | TbPhieuNhapCreateOrConnectWithoutNhaCungCapInput[]
    upsert?: TbPhieuNhapUpsertWithWhereUniqueWithoutNhaCungCapInput | TbPhieuNhapUpsertWithWhereUniqueWithoutNhaCungCapInput[]
    createMany?: TbPhieuNhapCreateManyNhaCungCapInputEnvelope
    set?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    disconnect?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    delete?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    connect?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    update?: TbPhieuNhapUpdateWithWhereUniqueWithoutNhaCungCapInput | TbPhieuNhapUpdateWithWhereUniqueWithoutNhaCungCapInput[]
    updateMany?: TbPhieuNhapUpdateManyWithWhereWithoutNhaCungCapInput | TbPhieuNhapUpdateManyWithWhereWithoutNhaCungCapInput[]
    deleteMany?: TbPhieuNhapScalarWhereInput | TbPhieuNhapScalarWhereInput[]
  }

  export type TbPhieuNhapUncheckedUpdateManyWithoutNhaCungCapNestedInput = {
    create?: XOR<TbPhieuNhapCreateWithoutNhaCungCapInput, TbPhieuNhapUncheckedCreateWithoutNhaCungCapInput> | TbPhieuNhapCreateWithoutNhaCungCapInput[] | TbPhieuNhapUncheckedCreateWithoutNhaCungCapInput[]
    connectOrCreate?: TbPhieuNhapCreateOrConnectWithoutNhaCungCapInput | TbPhieuNhapCreateOrConnectWithoutNhaCungCapInput[]
    upsert?: TbPhieuNhapUpsertWithWhereUniqueWithoutNhaCungCapInput | TbPhieuNhapUpsertWithWhereUniqueWithoutNhaCungCapInput[]
    createMany?: TbPhieuNhapCreateManyNhaCungCapInputEnvelope
    set?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    disconnect?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    delete?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    connect?: TbPhieuNhapWhereUniqueInput | TbPhieuNhapWhereUniqueInput[]
    update?: TbPhieuNhapUpdateWithWhereUniqueWithoutNhaCungCapInput | TbPhieuNhapUpdateWithWhereUniqueWithoutNhaCungCapInput[]
    updateMany?: TbPhieuNhapUpdateManyWithWhereWithoutNhaCungCapInput | TbPhieuNhapUpdateManyWithWhereWithoutNhaCungCapInput[]
    deleteMany?: TbPhieuNhapScalarWhereInput | TbPhieuNhapScalarWhereInput[]
  }

  export type TbNhomKhuVucPhongCreateNestedOneWithoutPhongInput = {
    create?: XOR<TbNhomKhuVucPhongCreateWithoutPhongInput, TbNhomKhuVucPhongUncheckedCreateWithoutPhongInput>
    connectOrCreate?: TbNhomKhuVucPhongCreateOrConnectWithoutPhongInput
    connect?: TbNhomKhuVucPhongWhereUniqueInput
  }

  export type TbLoaiPhongCreateNestedOneWithoutPhongInput = {
    create?: XOR<TbLoaiPhongCreateWithoutPhongInput, TbLoaiPhongUncheckedCreateWithoutPhongInput>
    connectOrCreate?: TbLoaiPhongCreateOrConnectWithoutPhongInput
    connect?: TbLoaiPhongWhereUniqueInput
  }

  export type TbDatChoCreateNestedManyWithoutPhongInput = {
    create?: XOR<TbDatChoCreateWithoutPhongInput, TbDatChoUncheckedCreateWithoutPhongInput> | TbDatChoCreateWithoutPhongInput[] | TbDatChoUncheckedCreateWithoutPhongInput[]
    connectOrCreate?: TbDatChoCreateOrConnectWithoutPhongInput | TbDatChoCreateOrConnectWithoutPhongInput[]
    createMany?: TbDatChoCreateManyPhongInputEnvelope
    connect?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
  }

  export type TbCacLinkAnhPhongCreateNestedManyWithoutPhongInput = {
    create?: XOR<TbCacLinkAnhPhongCreateWithoutPhongInput, TbCacLinkAnhPhongUncheckedCreateWithoutPhongInput> | TbCacLinkAnhPhongCreateWithoutPhongInput[] | TbCacLinkAnhPhongUncheckedCreateWithoutPhongInput[]
    connectOrCreate?: TbCacLinkAnhPhongCreateOrConnectWithoutPhongInput | TbCacLinkAnhPhongCreateOrConnectWithoutPhongInput[]
    createMany?: TbCacLinkAnhPhongCreateManyPhongInputEnvelope
    connect?: TbCacLinkAnhPhongWhereUniqueInput | TbCacLinkAnhPhongWhereUniqueInput[]
  }

  export type TbDatChoUncheckedCreateNestedManyWithoutPhongInput = {
    create?: XOR<TbDatChoCreateWithoutPhongInput, TbDatChoUncheckedCreateWithoutPhongInput> | TbDatChoCreateWithoutPhongInput[] | TbDatChoUncheckedCreateWithoutPhongInput[]
    connectOrCreate?: TbDatChoCreateOrConnectWithoutPhongInput | TbDatChoCreateOrConnectWithoutPhongInput[]
    createMany?: TbDatChoCreateManyPhongInputEnvelope
    connect?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
  }

  export type TbCacLinkAnhPhongUncheckedCreateNestedManyWithoutPhongInput = {
    create?: XOR<TbCacLinkAnhPhongCreateWithoutPhongInput, TbCacLinkAnhPhongUncheckedCreateWithoutPhongInput> | TbCacLinkAnhPhongCreateWithoutPhongInput[] | TbCacLinkAnhPhongUncheckedCreateWithoutPhongInput[]
    connectOrCreate?: TbCacLinkAnhPhongCreateOrConnectWithoutPhongInput | TbCacLinkAnhPhongCreateOrConnectWithoutPhongInput[]
    createMany?: TbCacLinkAnhPhongCreateManyPhongInputEnvelope
    connect?: TbCacLinkAnhPhongWhereUniqueInput | TbCacLinkAnhPhongWhereUniqueInput[]
  }

  export type Enumtbphong_StatusFieldUpdateOperationsInput = {
    set?: $Enums.tbphong_Status
  }

  export type Enumtbdatcho_StatusFieldUpdateOperationsInput = {
    set?: $Enums.tbdatcho_Status
  }

  export type TbNhomKhuVucPhongUpdateOneRequiredWithoutPhongNestedInput = {
    create?: XOR<TbNhomKhuVucPhongCreateWithoutPhongInput, TbNhomKhuVucPhongUncheckedCreateWithoutPhongInput>
    connectOrCreate?: TbNhomKhuVucPhongCreateOrConnectWithoutPhongInput
    upsert?: TbNhomKhuVucPhongUpsertWithoutPhongInput
    connect?: TbNhomKhuVucPhongWhereUniqueInput
    update?: XOR<XOR<TbNhomKhuVucPhongUpdateToOneWithWhereWithoutPhongInput, TbNhomKhuVucPhongUpdateWithoutPhongInput>, TbNhomKhuVucPhongUncheckedUpdateWithoutPhongInput>
  }

  export type TbLoaiPhongUpdateOneRequiredWithoutPhongNestedInput = {
    create?: XOR<TbLoaiPhongCreateWithoutPhongInput, TbLoaiPhongUncheckedCreateWithoutPhongInput>
    connectOrCreate?: TbLoaiPhongCreateOrConnectWithoutPhongInput
    upsert?: TbLoaiPhongUpsertWithoutPhongInput
    connect?: TbLoaiPhongWhereUniqueInput
    update?: XOR<XOR<TbLoaiPhongUpdateToOneWithWhereWithoutPhongInput, TbLoaiPhongUpdateWithoutPhongInput>, TbLoaiPhongUncheckedUpdateWithoutPhongInput>
  }

  export type TbDatChoUpdateManyWithoutPhongNestedInput = {
    create?: XOR<TbDatChoCreateWithoutPhongInput, TbDatChoUncheckedCreateWithoutPhongInput> | TbDatChoCreateWithoutPhongInput[] | TbDatChoUncheckedCreateWithoutPhongInput[]
    connectOrCreate?: TbDatChoCreateOrConnectWithoutPhongInput | TbDatChoCreateOrConnectWithoutPhongInput[]
    upsert?: TbDatChoUpsertWithWhereUniqueWithoutPhongInput | TbDatChoUpsertWithWhereUniqueWithoutPhongInput[]
    createMany?: TbDatChoCreateManyPhongInputEnvelope
    set?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    disconnect?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    delete?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    connect?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    update?: TbDatChoUpdateWithWhereUniqueWithoutPhongInput | TbDatChoUpdateWithWhereUniqueWithoutPhongInput[]
    updateMany?: TbDatChoUpdateManyWithWhereWithoutPhongInput | TbDatChoUpdateManyWithWhereWithoutPhongInput[]
    deleteMany?: TbDatChoScalarWhereInput | TbDatChoScalarWhereInput[]
  }

  export type TbCacLinkAnhPhongUpdateManyWithoutPhongNestedInput = {
    create?: XOR<TbCacLinkAnhPhongCreateWithoutPhongInput, TbCacLinkAnhPhongUncheckedCreateWithoutPhongInput> | TbCacLinkAnhPhongCreateWithoutPhongInput[] | TbCacLinkAnhPhongUncheckedCreateWithoutPhongInput[]
    connectOrCreate?: TbCacLinkAnhPhongCreateOrConnectWithoutPhongInput | TbCacLinkAnhPhongCreateOrConnectWithoutPhongInput[]
    upsert?: TbCacLinkAnhPhongUpsertWithWhereUniqueWithoutPhongInput | TbCacLinkAnhPhongUpsertWithWhereUniqueWithoutPhongInput[]
    createMany?: TbCacLinkAnhPhongCreateManyPhongInputEnvelope
    set?: TbCacLinkAnhPhongWhereUniqueInput | TbCacLinkAnhPhongWhereUniqueInput[]
    disconnect?: TbCacLinkAnhPhongWhereUniqueInput | TbCacLinkAnhPhongWhereUniqueInput[]
    delete?: TbCacLinkAnhPhongWhereUniqueInput | TbCacLinkAnhPhongWhereUniqueInput[]
    connect?: TbCacLinkAnhPhongWhereUniqueInput | TbCacLinkAnhPhongWhereUniqueInput[]
    update?: TbCacLinkAnhPhongUpdateWithWhereUniqueWithoutPhongInput | TbCacLinkAnhPhongUpdateWithWhereUniqueWithoutPhongInput[]
    updateMany?: TbCacLinkAnhPhongUpdateManyWithWhereWithoutPhongInput | TbCacLinkAnhPhongUpdateManyWithWhereWithoutPhongInput[]
    deleteMany?: TbCacLinkAnhPhongScalarWhereInput | TbCacLinkAnhPhongScalarWhereInput[]
  }

  export type TbDatChoUncheckedUpdateManyWithoutPhongNestedInput = {
    create?: XOR<TbDatChoCreateWithoutPhongInput, TbDatChoUncheckedCreateWithoutPhongInput> | TbDatChoCreateWithoutPhongInput[] | TbDatChoUncheckedCreateWithoutPhongInput[]
    connectOrCreate?: TbDatChoCreateOrConnectWithoutPhongInput | TbDatChoCreateOrConnectWithoutPhongInput[]
    upsert?: TbDatChoUpsertWithWhereUniqueWithoutPhongInput | TbDatChoUpsertWithWhereUniqueWithoutPhongInput[]
    createMany?: TbDatChoCreateManyPhongInputEnvelope
    set?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    disconnect?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    delete?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    connect?: TbDatChoWhereUniqueInput | TbDatChoWhereUniqueInput[]
    update?: TbDatChoUpdateWithWhereUniqueWithoutPhongInput | TbDatChoUpdateWithWhereUniqueWithoutPhongInput[]
    updateMany?: TbDatChoUpdateManyWithWhereWithoutPhongInput | TbDatChoUpdateManyWithWhereWithoutPhongInput[]
    deleteMany?: TbDatChoScalarWhereInput | TbDatChoScalarWhereInput[]
  }

  export type TbCacLinkAnhPhongUncheckedUpdateManyWithoutPhongNestedInput = {
    create?: XOR<TbCacLinkAnhPhongCreateWithoutPhongInput, TbCacLinkAnhPhongUncheckedCreateWithoutPhongInput> | TbCacLinkAnhPhongCreateWithoutPhongInput[] | TbCacLinkAnhPhongUncheckedCreateWithoutPhongInput[]
    connectOrCreate?: TbCacLinkAnhPhongCreateOrConnectWithoutPhongInput | TbCacLinkAnhPhongCreateOrConnectWithoutPhongInput[]
    upsert?: TbCacLinkAnhPhongUpsertWithWhereUniqueWithoutPhongInput | TbCacLinkAnhPhongUpsertWithWhereUniqueWithoutPhongInput[]
    createMany?: TbCacLinkAnhPhongCreateManyPhongInputEnvelope
    set?: TbCacLinkAnhPhongWhereUniqueInput | TbCacLinkAnhPhongWhereUniqueInput[]
    disconnect?: TbCacLinkAnhPhongWhereUniqueInput | TbCacLinkAnhPhongWhereUniqueInput[]
    delete?: TbCacLinkAnhPhongWhereUniqueInput | TbCacLinkAnhPhongWhereUniqueInput[]
    connect?: TbCacLinkAnhPhongWhereUniqueInput | TbCacLinkAnhPhongWhereUniqueInput[]
    update?: TbCacLinkAnhPhongUpdateWithWhereUniqueWithoutPhongInput | TbCacLinkAnhPhongUpdateWithWhereUniqueWithoutPhongInput[]
    updateMany?: TbCacLinkAnhPhongUpdateManyWithWhereWithoutPhongInput | TbCacLinkAnhPhongUpdateManyWithWhereWithoutPhongInput[]
    deleteMany?: TbCacLinkAnhPhongScalarWhereInput | TbCacLinkAnhPhongScalarWhereInput[]
  }

  export type TbPhongCreateNestedManyWithoutNhomKhuVucPhongInput = {
    create?: XOR<TbPhongCreateWithoutNhomKhuVucPhongInput, TbPhongUncheckedCreateWithoutNhomKhuVucPhongInput> | TbPhongCreateWithoutNhomKhuVucPhongInput[] | TbPhongUncheckedCreateWithoutNhomKhuVucPhongInput[]
    connectOrCreate?: TbPhongCreateOrConnectWithoutNhomKhuVucPhongInput | TbPhongCreateOrConnectWithoutNhomKhuVucPhongInput[]
    createMany?: TbPhongCreateManyNhomKhuVucPhongInputEnvelope
    connect?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
  }

  export type TbKhachSanCreateNestedOneWithoutNhomKhuVucPhongInput = {
    create?: XOR<TbKhachSanCreateWithoutNhomKhuVucPhongInput, TbKhachSanUncheckedCreateWithoutNhomKhuVucPhongInput>
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutNhomKhuVucPhongInput
    connect?: TbKhachSanWhereUniqueInput
  }

  export type TbPhongUncheckedCreateNestedManyWithoutNhomKhuVucPhongInput = {
    create?: XOR<TbPhongCreateWithoutNhomKhuVucPhongInput, TbPhongUncheckedCreateWithoutNhomKhuVucPhongInput> | TbPhongCreateWithoutNhomKhuVucPhongInput[] | TbPhongUncheckedCreateWithoutNhomKhuVucPhongInput[]
    connectOrCreate?: TbPhongCreateOrConnectWithoutNhomKhuVucPhongInput | TbPhongCreateOrConnectWithoutNhomKhuVucPhongInput[]
    createMany?: TbPhongCreateManyNhomKhuVucPhongInputEnvelope
    connect?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
  }

  export type TbPhongUpdateManyWithoutNhomKhuVucPhongNestedInput = {
    create?: XOR<TbPhongCreateWithoutNhomKhuVucPhongInput, TbPhongUncheckedCreateWithoutNhomKhuVucPhongInput> | TbPhongCreateWithoutNhomKhuVucPhongInput[] | TbPhongUncheckedCreateWithoutNhomKhuVucPhongInput[]
    connectOrCreate?: TbPhongCreateOrConnectWithoutNhomKhuVucPhongInput | TbPhongCreateOrConnectWithoutNhomKhuVucPhongInput[]
    upsert?: TbPhongUpsertWithWhereUniqueWithoutNhomKhuVucPhongInput | TbPhongUpsertWithWhereUniqueWithoutNhomKhuVucPhongInput[]
    createMany?: TbPhongCreateManyNhomKhuVucPhongInputEnvelope
    set?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    disconnect?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    delete?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    connect?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    update?: TbPhongUpdateWithWhereUniqueWithoutNhomKhuVucPhongInput | TbPhongUpdateWithWhereUniqueWithoutNhomKhuVucPhongInput[]
    updateMany?: TbPhongUpdateManyWithWhereWithoutNhomKhuVucPhongInput | TbPhongUpdateManyWithWhereWithoutNhomKhuVucPhongInput[]
    deleteMany?: TbPhongScalarWhereInput | TbPhongScalarWhereInput[]
  }

  export type TbKhachSanUpdateOneRequiredWithoutNhomKhuVucPhongNestedInput = {
    create?: XOR<TbKhachSanCreateWithoutNhomKhuVucPhongInput, TbKhachSanUncheckedCreateWithoutNhomKhuVucPhongInput>
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutNhomKhuVucPhongInput
    upsert?: TbKhachSanUpsertWithoutNhomKhuVucPhongInput
    connect?: TbKhachSanWhereUniqueInput
    update?: XOR<XOR<TbKhachSanUpdateToOneWithWhereWithoutNhomKhuVucPhongInput, TbKhachSanUpdateWithoutNhomKhuVucPhongInput>, TbKhachSanUncheckedUpdateWithoutNhomKhuVucPhongInput>
  }

  export type TbPhongUncheckedUpdateManyWithoutNhomKhuVucPhongNestedInput = {
    create?: XOR<TbPhongCreateWithoutNhomKhuVucPhongInput, TbPhongUncheckedCreateWithoutNhomKhuVucPhongInput> | TbPhongCreateWithoutNhomKhuVucPhongInput[] | TbPhongUncheckedCreateWithoutNhomKhuVucPhongInput[]
    connectOrCreate?: TbPhongCreateOrConnectWithoutNhomKhuVucPhongInput | TbPhongCreateOrConnectWithoutNhomKhuVucPhongInput[]
    upsert?: TbPhongUpsertWithWhereUniqueWithoutNhomKhuVucPhongInput | TbPhongUpsertWithWhereUniqueWithoutNhomKhuVucPhongInput[]
    createMany?: TbPhongCreateManyNhomKhuVucPhongInputEnvelope
    set?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    disconnect?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    delete?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    connect?: TbPhongWhereUniqueInput | TbPhongWhereUniqueInput[]
    update?: TbPhongUpdateWithWhereUniqueWithoutNhomKhuVucPhongInput | TbPhongUpdateWithWhereUniqueWithoutNhomKhuVucPhongInput[]
    updateMany?: TbPhongUpdateManyWithWhereWithoutNhomKhuVucPhongInput | TbPhongUpdateManyWithWhereWithoutNhomKhuVucPhongInput[]
    deleteMany?: TbPhongScalarWhereInput | TbPhongScalarWhereInput[]
  }

  export type AvatarsCreateNestedOneWithoutUserInput = {
    create?: XOR<AvatarsCreateWithoutUserInput, AvatarsUncheckedCreateWithoutUserInput>
    connectOrCreate?: AvatarsCreateOrConnectWithoutUserInput
    connect?: AvatarsWhereUniqueInput
  }

  export type TbChiNhanhCreateNestedManyWithoutTaiKhoanAdminInput = {
    create?: XOR<TbChiNhanhCreateWithoutTaiKhoanAdminInput, TbChiNhanhUncheckedCreateWithoutTaiKhoanAdminInput> | TbChiNhanhCreateWithoutTaiKhoanAdminInput[] | TbChiNhanhUncheckedCreateWithoutTaiKhoanAdminInput[]
    connectOrCreate?: TbChiNhanhCreateOrConnectWithoutTaiKhoanAdminInput | TbChiNhanhCreateOrConnectWithoutTaiKhoanAdminInput[]
    createMany?: TbChiNhanhCreateManyTaiKhoanAdminInputEnvelope
    connect?: TbChiNhanhWhereUniqueInput | TbChiNhanhWhereUniqueInput[]
  }

  export type AvatarsUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<AvatarsCreateWithoutUserInput, AvatarsUncheckedCreateWithoutUserInput>
    connectOrCreate?: AvatarsCreateOrConnectWithoutUserInput
    connect?: AvatarsWhereUniqueInput
  }

  export type TbChiNhanhUncheckedCreateNestedManyWithoutTaiKhoanAdminInput = {
    create?: XOR<TbChiNhanhCreateWithoutTaiKhoanAdminInput, TbChiNhanhUncheckedCreateWithoutTaiKhoanAdminInput> | TbChiNhanhCreateWithoutTaiKhoanAdminInput[] | TbChiNhanhUncheckedCreateWithoutTaiKhoanAdminInput[]
    connectOrCreate?: TbChiNhanhCreateOrConnectWithoutTaiKhoanAdminInput | TbChiNhanhCreateOrConnectWithoutTaiKhoanAdminInput[]
    createMany?: TbChiNhanhCreateManyTaiKhoanAdminInputEnvelope
    connect?: TbChiNhanhWhereUniqueInput | TbChiNhanhWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type Enumtbtaikhoan_VaiTroFieldUpdateOperationsInput = {
    set?: $Enums.tbtaikhoan_VaiTro
  }

  export type AvatarsUpdateOneWithoutUserNestedInput = {
    create?: XOR<AvatarsCreateWithoutUserInput, AvatarsUncheckedCreateWithoutUserInput>
    connectOrCreate?: AvatarsCreateOrConnectWithoutUserInput
    upsert?: AvatarsUpsertWithoutUserInput
    disconnect?: AvatarsWhereInput | boolean
    delete?: AvatarsWhereInput | boolean
    connect?: AvatarsWhereUniqueInput
    update?: XOR<XOR<AvatarsUpdateToOneWithWhereWithoutUserInput, AvatarsUpdateWithoutUserInput>, AvatarsUncheckedUpdateWithoutUserInput>
  }

  export type TbChiNhanhUpdateManyWithoutTaiKhoanAdminNestedInput = {
    create?: XOR<TbChiNhanhCreateWithoutTaiKhoanAdminInput, TbChiNhanhUncheckedCreateWithoutTaiKhoanAdminInput> | TbChiNhanhCreateWithoutTaiKhoanAdminInput[] | TbChiNhanhUncheckedCreateWithoutTaiKhoanAdminInput[]
    connectOrCreate?: TbChiNhanhCreateOrConnectWithoutTaiKhoanAdminInput | TbChiNhanhCreateOrConnectWithoutTaiKhoanAdminInput[]
    upsert?: TbChiNhanhUpsertWithWhereUniqueWithoutTaiKhoanAdminInput | TbChiNhanhUpsertWithWhereUniqueWithoutTaiKhoanAdminInput[]
    createMany?: TbChiNhanhCreateManyTaiKhoanAdminInputEnvelope
    set?: TbChiNhanhWhereUniqueInput | TbChiNhanhWhereUniqueInput[]
    disconnect?: TbChiNhanhWhereUniqueInput | TbChiNhanhWhereUniqueInput[]
    delete?: TbChiNhanhWhereUniqueInput | TbChiNhanhWhereUniqueInput[]
    connect?: TbChiNhanhWhereUniqueInput | TbChiNhanhWhereUniqueInput[]
    update?: TbChiNhanhUpdateWithWhereUniqueWithoutTaiKhoanAdminInput | TbChiNhanhUpdateWithWhereUniqueWithoutTaiKhoanAdminInput[]
    updateMany?: TbChiNhanhUpdateManyWithWhereWithoutTaiKhoanAdminInput | TbChiNhanhUpdateManyWithWhereWithoutTaiKhoanAdminInput[]
    deleteMany?: TbChiNhanhScalarWhereInput | TbChiNhanhScalarWhereInput[]
  }

  export type AvatarsUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<AvatarsCreateWithoutUserInput, AvatarsUncheckedCreateWithoutUserInput>
    connectOrCreate?: AvatarsCreateOrConnectWithoutUserInput
    upsert?: AvatarsUpsertWithoutUserInput
    disconnect?: AvatarsWhereInput | boolean
    delete?: AvatarsWhereInput | boolean
    connect?: AvatarsWhereUniqueInput
    update?: XOR<XOR<AvatarsUpdateToOneWithWhereWithoutUserInput, AvatarsUpdateWithoutUserInput>, AvatarsUncheckedUpdateWithoutUserInput>
  }

  export type TbChiNhanhUncheckedUpdateManyWithoutTaiKhoanAdminNestedInput = {
    create?: XOR<TbChiNhanhCreateWithoutTaiKhoanAdminInput, TbChiNhanhUncheckedCreateWithoutTaiKhoanAdminInput> | TbChiNhanhCreateWithoutTaiKhoanAdminInput[] | TbChiNhanhUncheckedCreateWithoutTaiKhoanAdminInput[]
    connectOrCreate?: TbChiNhanhCreateOrConnectWithoutTaiKhoanAdminInput | TbChiNhanhCreateOrConnectWithoutTaiKhoanAdminInput[]
    upsert?: TbChiNhanhUpsertWithWhereUniqueWithoutTaiKhoanAdminInput | TbChiNhanhUpsertWithWhereUniqueWithoutTaiKhoanAdminInput[]
    createMany?: TbChiNhanhCreateManyTaiKhoanAdminInputEnvelope
    set?: TbChiNhanhWhereUniqueInput | TbChiNhanhWhereUniqueInput[]
    disconnect?: TbChiNhanhWhereUniqueInput | TbChiNhanhWhereUniqueInput[]
    delete?: TbChiNhanhWhereUniqueInput | TbChiNhanhWhereUniqueInput[]
    connect?: TbChiNhanhWhereUniqueInput | TbChiNhanhWhereUniqueInput[]
    update?: TbChiNhanhUpdateWithWhereUniqueWithoutTaiKhoanAdminInput | TbChiNhanhUpdateWithWhereUniqueWithoutTaiKhoanAdminInput[]
    updateMany?: TbChiNhanhUpdateManyWithWhereWithoutTaiKhoanAdminInput | TbChiNhanhUpdateManyWithWhereWithoutTaiKhoanAdminInput[]
    deleteMany?: TbChiNhanhScalarWhereInput | TbChiNhanhScalarWhereInput[]
  }

  export type SubAvatarsCreateNestedOneWithoutSub_userInput = {
    create?: XOR<SubAvatarsCreateWithoutSub_userInput, SubAvatarsUncheckedCreateWithoutSub_userInput>
    connectOrCreate?: SubAvatarsCreateOrConnectWithoutSub_userInput
    connect?: SubAvatarsWhereUniqueInput
  }

  export type TbHoaDonCreateNestedManyWithoutTaiKhoanSubInput = {
    create?: XOR<TbHoaDonCreateWithoutTaiKhoanSubInput, TbHoaDonUncheckedCreateWithoutTaiKhoanSubInput> | TbHoaDonCreateWithoutTaiKhoanSubInput[] | TbHoaDonUncheckedCreateWithoutTaiKhoanSubInput[]
    connectOrCreate?: TbHoaDonCreateOrConnectWithoutTaiKhoanSubInput | TbHoaDonCreateOrConnectWithoutTaiKhoanSubInput[]
    createMany?: TbHoaDonCreateManyTaiKhoanSubInputEnvelope
    connect?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
  }

  export type TbKhachSanCreateNestedOneWithoutTaiKhoanSubInput = {
    create?: XOR<TbKhachSanCreateWithoutTaiKhoanSubInput, TbKhachSanUncheckedCreateWithoutTaiKhoanSubInput>
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutTaiKhoanSubInput
    connect?: TbKhachSanWhereUniqueInput
  }

  export type SubAvatarsUncheckedCreateNestedOneWithoutSub_userInput = {
    create?: XOR<SubAvatarsCreateWithoutSub_userInput, SubAvatarsUncheckedCreateWithoutSub_userInput>
    connectOrCreate?: SubAvatarsCreateOrConnectWithoutSub_userInput
    connect?: SubAvatarsWhereUniqueInput
  }

  export type TbHoaDonUncheckedCreateNestedManyWithoutTaiKhoanSubInput = {
    create?: XOR<TbHoaDonCreateWithoutTaiKhoanSubInput, TbHoaDonUncheckedCreateWithoutTaiKhoanSubInput> | TbHoaDonCreateWithoutTaiKhoanSubInput[] | TbHoaDonUncheckedCreateWithoutTaiKhoanSubInput[]
    connectOrCreate?: TbHoaDonCreateOrConnectWithoutTaiKhoanSubInput | TbHoaDonCreateOrConnectWithoutTaiKhoanSubInput[]
    createMany?: TbHoaDonCreateManyTaiKhoanSubInputEnvelope
    connect?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
  }

  export type Enumtbtaikhoancon_VaiTroFieldUpdateOperationsInput = {
    set?: $Enums.tbtaikhoancon_VaiTro
  }

  export type SubAvatarsUpdateOneWithoutSub_userNestedInput = {
    create?: XOR<SubAvatarsCreateWithoutSub_userInput, SubAvatarsUncheckedCreateWithoutSub_userInput>
    connectOrCreate?: SubAvatarsCreateOrConnectWithoutSub_userInput
    upsert?: SubAvatarsUpsertWithoutSub_userInput
    disconnect?: SubAvatarsWhereInput | boolean
    delete?: SubAvatarsWhereInput | boolean
    connect?: SubAvatarsWhereUniqueInput
    update?: XOR<XOR<SubAvatarsUpdateToOneWithWhereWithoutSub_userInput, SubAvatarsUpdateWithoutSub_userInput>, SubAvatarsUncheckedUpdateWithoutSub_userInput>
  }

  export type TbHoaDonUpdateManyWithoutTaiKhoanSubNestedInput = {
    create?: XOR<TbHoaDonCreateWithoutTaiKhoanSubInput, TbHoaDonUncheckedCreateWithoutTaiKhoanSubInput> | TbHoaDonCreateWithoutTaiKhoanSubInput[] | TbHoaDonUncheckedCreateWithoutTaiKhoanSubInput[]
    connectOrCreate?: TbHoaDonCreateOrConnectWithoutTaiKhoanSubInput | TbHoaDonCreateOrConnectWithoutTaiKhoanSubInput[]
    upsert?: TbHoaDonUpsertWithWhereUniqueWithoutTaiKhoanSubInput | TbHoaDonUpsertWithWhereUniqueWithoutTaiKhoanSubInput[]
    createMany?: TbHoaDonCreateManyTaiKhoanSubInputEnvelope
    set?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    disconnect?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    delete?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    connect?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    update?: TbHoaDonUpdateWithWhereUniqueWithoutTaiKhoanSubInput | TbHoaDonUpdateWithWhereUniqueWithoutTaiKhoanSubInput[]
    updateMany?: TbHoaDonUpdateManyWithWhereWithoutTaiKhoanSubInput | TbHoaDonUpdateManyWithWhereWithoutTaiKhoanSubInput[]
    deleteMany?: TbHoaDonScalarWhereInput | TbHoaDonScalarWhereInput[]
  }

  export type TbKhachSanUpdateOneWithoutTaiKhoanSubNestedInput = {
    create?: XOR<TbKhachSanCreateWithoutTaiKhoanSubInput, TbKhachSanUncheckedCreateWithoutTaiKhoanSubInput>
    connectOrCreate?: TbKhachSanCreateOrConnectWithoutTaiKhoanSubInput
    upsert?: TbKhachSanUpsertWithoutTaiKhoanSubInput
    disconnect?: TbKhachSanWhereInput | boolean
    delete?: TbKhachSanWhereInput | boolean
    connect?: TbKhachSanWhereUniqueInput
    update?: XOR<XOR<TbKhachSanUpdateToOneWithWhereWithoutTaiKhoanSubInput, TbKhachSanUpdateWithoutTaiKhoanSubInput>, TbKhachSanUncheckedUpdateWithoutTaiKhoanSubInput>
  }

  export type SubAvatarsUncheckedUpdateOneWithoutSub_userNestedInput = {
    create?: XOR<SubAvatarsCreateWithoutSub_userInput, SubAvatarsUncheckedCreateWithoutSub_userInput>
    connectOrCreate?: SubAvatarsCreateOrConnectWithoutSub_userInput
    upsert?: SubAvatarsUpsertWithoutSub_userInput
    disconnect?: SubAvatarsWhereInput | boolean
    delete?: SubAvatarsWhereInput | boolean
    connect?: SubAvatarsWhereUniqueInput
    update?: XOR<XOR<SubAvatarsUpdateToOneWithWhereWithoutSub_userInput, SubAvatarsUpdateWithoutSub_userInput>, SubAvatarsUncheckedUpdateWithoutSub_userInput>
  }

  export type TbHoaDonUncheckedUpdateManyWithoutTaiKhoanSubNestedInput = {
    create?: XOR<TbHoaDonCreateWithoutTaiKhoanSubInput, TbHoaDonUncheckedCreateWithoutTaiKhoanSubInput> | TbHoaDonCreateWithoutTaiKhoanSubInput[] | TbHoaDonUncheckedCreateWithoutTaiKhoanSubInput[]
    connectOrCreate?: TbHoaDonCreateOrConnectWithoutTaiKhoanSubInput | TbHoaDonCreateOrConnectWithoutTaiKhoanSubInput[]
    upsert?: TbHoaDonUpsertWithWhereUniqueWithoutTaiKhoanSubInput | TbHoaDonUpsertWithWhereUniqueWithoutTaiKhoanSubInput[]
    createMany?: TbHoaDonCreateManyTaiKhoanSubInputEnvelope
    set?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    disconnect?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    delete?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    connect?: TbHoaDonWhereUniqueInput | TbHoaDonWhereUniqueInput[]
    update?: TbHoaDonUpdateWithWhereUniqueWithoutTaiKhoanSubInput | TbHoaDonUpdateWithWhereUniqueWithoutTaiKhoanSubInput[]
    updateMany?: TbHoaDonUpdateManyWithWhereWithoutTaiKhoanSubInput | TbHoaDonUpdateManyWithWhereWithoutTaiKhoanSubInput[]
    deleteMany?: TbHoaDonScalarWhereInput | TbHoaDonScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAvatarInput = {
    create?: XOR<UserCreateWithoutAvatarInput, UserUncheckedCreateWithoutAvatarInput>
    connectOrCreate?: UserCreateOrConnectWithoutAvatarInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutAvatarNestedInput = {
    create?: XOR<UserCreateWithoutAvatarInput, UserUncheckedCreateWithoutAvatarInput>
    connectOrCreate?: UserCreateOrConnectWithoutAvatarInput
    upsert?: UserUpsertWithoutAvatarInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAvatarInput, UserUpdateWithoutAvatarInput>, UserUncheckedUpdateWithoutAvatarInput>
  }

  export type SubUserCreateNestedOneWithoutSubAvatarInput = {
    create?: XOR<SubUserCreateWithoutSubAvatarInput, SubUserUncheckedCreateWithoutSubAvatarInput>
    connectOrCreate?: SubUserCreateOrConnectWithoutSubAvatarInput
    connect?: SubUserWhereUniqueInput
  }

  export type SubUserUpdateOneRequiredWithoutSubAvatarNestedInput = {
    create?: XOR<SubUserCreateWithoutSubAvatarInput, SubUserUncheckedCreateWithoutSubAvatarInput>
    connectOrCreate?: SubUserCreateOrConnectWithoutSubAvatarInput
    upsert?: SubUserUpsertWithoutSubAvatarInput
    connect?: SubUserWhereUniqueInput
    update?: XOR<XOR<SubUserUpdateToOneWithWhereWithoutSubAvatarInput, SubUserUpdateWithoutSubAvatarInput>, SubUserUncheckedUpdateWithoutSubAvatarInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumloaikhach_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.loaikhach_Status | Enumloaikhach_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.loaikhach_Status[]
    notIn?: $Enums.loaikhach_Status[]
    not?: NestedEnumloaikhach_StatusFilter<$PrismaModel> | $Enums.loaikhach_Status
  }

  export type NestedEnumthongbao_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.thongbao_Status | Enumthongbao_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.thongbao_Status[]
    notIn?: $Enums.thongbao_Status[]
    not?: NestedEnumthongbao_StatusFilter<$PrismaModel> | $Enums.thongbao_Status
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumloaikhach_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.loaikhach_Status | Enumloaikhach_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.loaikhach_Status[]
    notIn?: $Enums.loaikhach_Status[]
    not?: NestedEnumloaikhach_StatusWithAggregatesFilter<$PrismaModel> | $Enums.loaikhach_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumloaikhach_StatusFilter<$PrismaModel>
    _max?: NestedEnumloaikhach_StatusFilter<$PrismaModel>
  }

  export type NestedEnumthongbao_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.thongbao_Status | Enumthongbao_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.thongbao_Status[]
    notIn?: $Enums.thongbao_Status[]
    not?: NestedEnumthongbao_StatusWithAggregatesFilter<$PrismaModel> | $Enums.thongbao_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumthongbao_StatusFilter<$PrismaModel>
    _max?: NestedEnumthongbao_StatusFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumtbphieunhap_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.tbphieunhap_Status | Enumtbphieunhap_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbphieunhap_Status[]
    notIn?: $Enums.tbphieunhap_Status[]
    not?: NestedEnumtbphieunhap_StatusFilter<$PrismaModel> | $Enums.tbphieunhap_Status
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumtbphieunhap_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbphieunhap_Status | Enumtbphieunhap_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbphieunhap_Status[]
    notIn?: $Enums.tbphieunhap_Status[]
    not?: NestedEnumtbphieunhap_StatusWithAggregatesFilter<$PrismaModel> | $Enums.tbphieunhap_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtbphieunhap_StatusFilter<$PrismaModel>
    _max?: NestedEnumtbphieunhap_StatusFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumtbhoadon_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.tbhoadon_Status | Enumtbhoadon_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbhoadon_Status[]
    notIn?: $Enums.tbhoadon_Status[]
    not?: NestedEnumtbhoadon_StatusFilter<$PrismaModel> | $Enums.tbhoadon_Status
  }

  export type NestedEnumtbhoadon_PhuongThucThanhToanNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.tbhoadon_PhuongThucThanhToan | Enumtbhoadon_PhuongThucThanhToanFieldRefInput<$PrismaModel> | null
    in?: $Enums.tbhoadon_PhuongThucThanhToan[] | null
    notIn?: $Enums.tbhoadon_PhuongThucThanhToan[] | null
    not?: NestedEnumtbhoadon_PhuongThucThanhToanNullableFilter<$PrismaModel> | $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumtbhoadon_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbhoadon_Status | Enumtbhoadon_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbhoadon_Status[]
    notIn?: $Enums.tbhoadon_Status[]
    not?: NestedEnumtbhoadon_StatusWithAggregatesFilter<$PrismaModel> | $Enums.tbhoadon_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtbhoadon_StatusFilter<$PrismaModel>
    _max?: NestedEnumtbhoadon_StatusFilter<$PrismaModel>
  }

  export type NestedEnumtbhoadon_PhuongThucThanhToanNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbhoadon_PhuongThucThanhToan | Enumtbhoadon_PhuongThucThanhToanFieldRefInput<$PrismaModel> | null
    in?: $Enums.tbhoadon_PhuongThucThanhToan[] | null
    notIn?: $Enums.tbhoadon_PhuongThucThanhToan[] | null
    not?: NestedEnumtbhoadon_PhuongThucThanhToanNullableWithAggregatesFilter<$PrismaModel> | $Enums.tbhoadon_PhuongThucThanhToan | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtbhoadon_PhuongThucThanhToanNullableFilter<$PrismaModel>
    _max?: NestedEnumtbhoadon_PhuongThucThanhToanNullableFilter<$PrismaModel>
  }

  export type NestedEnumtbphong_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.tbphong_Status | Enumtbphong_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbphong_Status[]
    notIn?: $Enums.tbphong_Status[]
    not?: NestedEnumtbphong_StatusFilter<$PrismaModel> | $Enums.tbphong_Status
  }

  export type NestedEnumtbdatcho_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.tbdatcho_Status | Enumtbdatcho_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbdatcho_Status[]
    notIn?: $Enums.tbdatcho_Status[]
    not?: NestedEnumtbdatcho_StatusFilter<$PrismaModel> | $Enums.tbdatcho_Status
  }

  export type NestedEnumtbphong_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbphong_Status | Enumtbphong_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbphong_Status[]
    notIn?: $Enums.tbphong_Status[]
    not?: NestedEnumtbphong_StatusWithAggregatesFilter<$PrismaModel> | $Enums.tbphong_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtbphong_StatusFilter<$PrismaModel>
    _max?: NestedEnumtbphong_StatusFilter<$PrismaModel>
  }

  export type NestedEnumtbdatcho_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbdatcho_Status | Enumtbdatcho_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.tbdatcho_Status[]
    notIn?: $Enums.tbdatcho_Status[]
    not?: NestedEnumtbdatcho_StatusWithAggregatesFilter<$PrismaModel> | $Enums.tbdatcho_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtbdatcho_StatusFilter<$PrismaModel>
    _max?: NestedEnumtbdatcho_StatusFilter<$PrismaModel>
  }

  export type NestedEnumtbtaikhoan_VaiTroFilter<$PrismaModel = never> = {
    equals?: $Enums.tbtaikhoan_VaiTro | Enumtbtaikhoan_VaiTroFieldRefInput<$PrismaModel>
    in?: $Enums.tbtaikhoan_VaiTro[]
    notIn?: $Enums.tbtaikhoan_VaiTro[]
    not?: NestedEnumtbtaikhoan_VaiTroFilter<$PrismaModel> | $Enums.tbtaikhoan_VaiTro
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumtbtaikhoan_VaiTroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbtaikhoan_VaiTro | Enumtbtaikhoan_VaiTroFieldRefInput<$PrismaModel>
    in?: $Enums.tbtaikhoan_VaiTro[]
    notIn?: $Enums.tbtaikhoan_VaiTro[]
    not?: NestedEnumtbtaikhoan_VaiTroWithAggregatesFilter<$PrismaModel> | $Enums.tbtaikhoan_VaiTro
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtbtaikhoan_VaiTroFilter<$PrismaModel>
    _max?: NestedEnumtbtaikhoan_VaiTroFilter<$PrismaModel>
  }

  export type NestedEnumtbtaikhoancon_VaiTroFilter<$PrismaModel = never> = {
    equals?: $Enums.tbtaikhoancon_VaiTro | Enumtbtaikhoancon_VaiTroFieldRefInput<$PrismaModel>
    in?: $Enums.tbtaikhoancon_VaiTro[]
    notIn?: $Enums.tbtaikhoancon_VaiTro[]
    not?: NestedEnumtbtaikhoancon_VaiTroFilter<$PrismaModel> | $Enums.tbtaikhoancon_VaiTro
  }

  export type NestedEnumtbtaikhoancon_VaiTroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tbtaikhoancon_VaiTro | Enumtbtaikhoancon_VaiTroFieldRefInput<$PrismaModel>
    in?: $Enums.tbtaikhoancon_VaiTro[]
    notIn?: $Enums.tbtaikhoancon_VaiTro[]
    not?: NestedEnumtbtaikhoancon_VaiTroWithAggregatesFilter<$PrismaModel> | $Enums.tbtaikhoancon_VaiTro
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtbtaikhoancon_VaiTroFilter<$PrismaModel>
    _max?: NestedEnumtbtaikhoancon_VaiTroFilter<$PrismaModel>
  }

  export type TbKhachSanCreateWithoutChiNhanhInput = {
    id?: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserCreateNestedManyWithoutKhachSanInput
    HoaDon?: TbHoaDonCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuCreateNestedManyWithoutKhachSanInput
  }

  export type TbKhachSanUncheckedCreateWithoutChiNhanhInput = {
    id?: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserUncheckedCreateNestedManyWithoutKhachSanInput
    HoaDon?: TbHoaDonUncheckedCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapUncheckedCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaUncheckedCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuUncheckedCreateNestedManyWithoutKhachSanInput
  }

  export type TbKhachSanCreateOrConnectWithoutChiNhanhInput = {
    where: TbKhachSanWhereUniqueInput
    create: XOR<TbKhachSanCreateWithoutChiNhanhInput, TbKhachSanUncheckedCreateWithoutChiNhanhInput>
  }

  export type TbKhachSanCreateManyChiNhanhInputEnvelope = {
    data: TbKhachSanCreateManyChiNhanhInput | TbKhachSanCreateManyChiNhanhInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutChiNhanhInput = {
    id?: string
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.tbtaikhoan_VaiTro
    avatar?: AvatarsCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutChiNhanhInput = {
    id?: string
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.tbtaikhoan_VaiTro
    avatar?: AvatarsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutChiNhanhInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChiNhanhInput, UserUncheckedCreateWithoutChiNhanhInput>
  }

  export type TbKhachSanUpsertWithWhereUniqueWithoutChiNhanhInput = {
    where: TbKhachSanWhereUniqueInput
    update: XOR<TbKhachSanUpdateWithoutChiNhanhInput, TbKhachSanUncheckedUpdateWithoutChiNhanhInput>
    create: XOR<TbKhachSanCreateWithoutChiNhanhInput, TbKhachSanUncheckedCreateWithoutChiNhanhInput>
  }

  export type TbKhachSanUpdateWithWhereUniqueWithoutChiNhanhInput = {
    where: TbKhachSanWhereUniqueInput
    data: XOR<TbKhachSanUpdateWithoutChiNhanhInput, TbKhachSanUncheckedUpdateWithoutChiNhanhInput>
  }

  export type TbKhachSanUpdateManyWithWhereWithoutChiNhanhInput = {
    where: TbKhachSanScalarWhereInput
    data: XOR<TbKhachSanUpdateManyMutationInput, TbKhachSanUncheckedUpdateManyWithoutChiNhanhInput>
  }

  export type TbKhachSanScalarWhereInput = {
    AND?: TbKhachSanScalarWhereInput | TbKhachSanScalarWhereInput[]
    OR?: TbKhachSanScalarWhereInput[]
    NOT?: TbKhachSanScalarWhereInput | TbKhachSanScalarWhereInput[]
    id?: StringFilter<"TbKhachSan"> | string
    MaChiNhanh?: StringFilter<"TbKhachSan"> | string
    TenKhachSan?: StringFilter<"TbKhachSan"> | string
    DiaChiKhachSan?: StringNullableFilter<"TbKhachSan"> | string | null
    SDTKhachSan?: StringNullableFilter<"TbKhachSan"> | string | null
    EmailKhachSan?: StringNullableFilter<"TbKhachSan"> | string | null
  }

  export type UserUpsertWithoutChiNhanhInput = {
    update: XOR<UserUpdateWithoutChiNhanhInput, UserUncheckedUpdateWithoutChiNhanhInput>
    create: XOR<UserCreateWithoutChiNhanhInput, UserUncheckedCreateWithoutChiNhanhInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChiNhanhInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChiNhanhInput, UserUncheckedUpdateWithoutChiNhanhInput>
  }

  export type UserUpdateWithoutChiNhanhInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoan_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoan_VaiTro
    avatar?: AvatarsUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutChiNhanhInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoan_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoan_VaiTro
    avatar?: AvatarsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type TbDatChoCreateWithoutChiTietDichVuDatChoInput = {
    id?: string
    NgayDatCho?: Date | string
    NgayNhanPhong: Date | string
    NgayTraPhong: Date | string
    SLNguoiLonDiKem?: number
    SLTreEmDiKem?: number
    LoaiKhach?: $Enums.loaikhach_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    KhachHang: TbKhachHangCreateNestedOneWithoutDatChoInput
    Phong: TbPhongCreateNestedOneWithoutDatChoInput
  }

  export type TbDatChoUncheckedCreateWithoutChiTietDichVuDatChoInput = {
    id?: string
    MaKH: string
    MaPhong: string
    NgayDatCho?: Date | string
    NgayNhanPhong: Date | string
    NgayTraPhong: Date | string
    SLNguoiLonDiKem?: number
    SLTreEmDiKem?: number
    LoaiKhach?: $Enums.loaikhach_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbDatChoCreateOrConnectWithoutChiTietDichVuDatChoInput = {
    where: TbDatChoWhereUniqueInput
    create: XOR<TbDatChoCreateWithoutChiTietDichVuDatChoInput, TbDatChoUncheckedCreateWithoutChiTietDichVuDatChoInput>
  }

  export type TbDichVuCreateWithoutChiTietDichVuDatChoInput = {
    id?: string
    TenDichVu: string
    DonViTinh?: string | null
    GiaVon: Decimal | DecimalJsLike | number | string
    GiaBan: Decimal | DecimalJsLike | number | string
    ThoiLuong: number
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    NhomDichVu: TbNhomDichVuCreateNestedOneWithoutDichVuInput
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuCreateNestedManyWithoutDichVuInput
  }

  export type TbDichVuUncheckedCreateWithoutChiTietDichVuDatChoInput = {
    id?: string
    MaNhomDichVu: string
    TenDichVu: string
    DonViTinh?: string | null
    GiaVon: Decimal | DecimalJsLike | number | string
    GiaBan: Decimal | DecimalJsLike | number | string
    ThoiLuong: number
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuUncheckedCreateNestedManyWithoutDichVuInput
  }

  export type TbDichVuCreateOrConnectWithoutChiTietDichVuDatChoInput = {
    where: TbDichVuWhereUniqueInput
    create: XOR<TbDichVuCreateWithoutChiTietDichVuDatChoInput, TbDichVuUncheckedCreateWithoutChiTietDichVuDatChoInput>
  }

  export type TbHoaDonCreateWithoutChiTietDichVuDatChoInput = {
    id?: string
    TongHoaDon?: Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: Date | string | null
    GhiChu?: string | null
    Status?: $Enums.tbhoadon_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    PhuongThucThanhToan?: $Enums.tbhoadon_PhuongThucThanhToan | null
    KhachSan: TbKhachSanCreateNestedOneWithoutHoaDonInput
    TaiKhoanSub?: SubUserCreateNestedOneWithoutHoaDonInput
  }

  export type TbHoaDonUncheckedCreateWithoutChiTietDichVuDatChoInput = {
    id?: string
    MaTaiKhoanSub?: string | null
    MaKhachSan: string
    TongHoaDon?: Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: Date | string | null
    GhiChu?: string | null
    Status?: $Enums.tbhoadon_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    PhuongThucThanhToan?: $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type TbHoaDonCreateOrConnectWithoutChiTietDichVuDatChoInput = {
    where: TbHoaDonWhereUniqueInput
    create: XOR<TbHoaDonCreateWithoutChiTietDichVuDatChoInput, TbHoaDonUncheckedCreateWithoutChiTietDichVuDatChoInput>
  }

  export type TbDatChoUpsertWithoutChiTietDichVuDatChoInput = {
    update: XOR<TbDatChoUpdateWithoutChiTietDichVuDatChoInput, TbDatChoUncheckedUpdateWithoutChiTietDichVuDatChoInput>
    create: XOR<TbDatChoCreateWithoutChiTietDichVuDatChoInput, TbDatChoUncheckedCreateWithoutChiTietDichVuDatChoInput>
    where?: TbDatChoWhereInput
  }

  export type TbDatChoUpdateToOneWithWhereWithoutChiTietDichVuDatChoInput = {
    where?: TbDatChoWhereInput
    data: XOR<TbDatChoUpdateWithoutChiTietDichVuDatChoInput, TbDatChoUncheckedUpdateWithoutChiTietDichVuDatChoInput>
  }

  export type TbDatChoUpdateWithoutChiTietDichVuDatChoInput = {
    id?: StringFieldUpdateOperationsInput | string
    NgayDatCho?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayNhanPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayTraPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    SLNguoiLonDiKem?: IntFieldUpdateOperationsInput | number
    SLTreEmDiKem?: IntFieldUpdateOperationsInput | number
    LoaiKhach?: Enumloaikhach_StatusFieldUpdateOperationsInput | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    KhachHang?: TbKhachHangUpdateOneRequiredWithoutDatChoNestedInput
    Phong?: TbPhongUpdateOneRequiredWithoutDatChoNestedInput
  }

  export type TbDatChoUncheckedUpdateWithoutChiTietDichVuDatChoInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKH?: StringFieldUpdateOperationsInput | string
    MaPhong?: StringFieldUpdateOperationsInput | string
    NgayDatCho?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayNhanPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayTraPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    SLNguoiLonDiKem?: IntFieldUpdateOperationsInput | number
    SLTreEmDiKem?: IntFieldUpdateOperationsInput | number
    LoaiKhach?: Enumloaikhach_StatusFieldUpdateOperationsInput | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbDichVuUpsertWithoutChiTietDichVuDatChoInput = {
    update: XOR<TbDichVuUpdateWithoutChiTietDichVuDatChoInput, TbDichVuUncheckedUpdateWithoutChiTietDichVuDatChoInput>
    create: XOR<TbDichVuCreateWithoutChiTietDichVuDatChoInput, TbDichVuUncheckedCreateWithoutChiTietDichVuDatChoInput>
    where?: TbDichVuWhereInput
  }

  export type TbDichVuUpdateToOneWithWhereWithoutChiTietDichVuDatChoInput = {
    where?: TbDichVuWhereInput
    data: XOR<TbDichVuUpdateWithoutChiTietDichVuDatChoInput, TbDichVuUncheckedUpdateWithoutChiTietDichVuDatChoInput>
  }

  export type TbDichVuUpdateWithoutChiTietDichVuDatChoInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenDichVu?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaVon?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFieldUpdateOperationsInput | number
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NhomDichVu?: TbNhomDichVuUpdateOneRequiredWithoutDichVuNestedInput
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuUpdateManyWithoutDichVuNestedInput
  }

  export type TbDichVuUncheckedUpdateWithoutChiTietDichVuDatChoInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaNhomDichVu?: StringFieldUpdateOperationsInput | string
    TenDichVu?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaVon?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFieldUpdateOperationsInput | number
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuUncheckedUpdateManyWithoutDichVuNestedInput
  }

  export type TbHoaDonUpsertWithoutChiTietDichVuDatChoInput = {
    update: XOR<TbHoaDonUpdateWithoutChiTietDichVuDatChoInput, TbHoaDonUncheckedUpdateWithoutChiTietDichVuDatChoInput>
    create: XOR<TbHoaDonCreateWithoutChiTietDichVuDatChoInput, TbHoaDonUncheckedCreateWithoutChiTietDichVuDatChoInput>
    where?: TbHoaDonWhereInput
  }

  export type TbHoaDonUpdateToOneWithWhereWithoutChiTietDichVuDatChoInput = {
    where?: TbHoaDonWhereInput
    data: XOR<TbHoaDonUpdateWithoutChiTietDichVuDatChoInput, TbHoaDonUncheckedUpdateWithoutChiTietDichVuDatChoInput>
  }

  export type TbHoaDonUpdateWithoutChiTietDichVuDatChoInput = {
    id?: StringFieldUpdateOperationsInput | string
    TongHoaDon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbhoadon_StatusFieldUpdateOperationsInput | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PhuongThucThanhToan?: NullableEnumtbhoadon_PhuongThucThanhToanFieldUpdateOperationsInput | $Enums.tbhoadon_PhuongThucThanhToan | null
    KhachSan?: TbKhachSanUpdateOneRequiredWithoutHoaDonNestedInput
    TaiKhoanSub?: SubUserUpdateOneWithoutHoaDonNestedInput
  }

  export type TbHoaDonUncheckedUpdateWithoutChiTietDichVuDatChoInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaTaiKhoanSub?: NullableStringFieldUpdateOperationsInput | string | null
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TongHoaDon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbhoadon_StatusFieldUpdateOperationsInput | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PhuongThucThanhToan?: NullableEnumtbhoadon_PhuongThucThanhToanFieldUpdateOperationsInput | $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type TbChiTietDichVuDatChoCreateWithoutDatChoInput = {
    id?: string
    MoTa?: string | null
    createAt?: Date | string
    DichVu?: TbDichVuCreateNestedOneWithoutChiTietDichVuDatChoInput
    HoaDon?: TbHoaDonCreateNestedOneWithoutChiTietDichVuDatChoInput
  }

  export type TbChiTietDichVuDatChoUncheckedCreateWithoutDatChoInput = {
    id?: string
    MaDichVu?: string | null
    MaHoaDon?: string | null
    MoTa?: string | null
    createAt?: Date | string
  }

  export type TbChiTietDichVuDatChoCreateOrConnectWithoutDatChoInput = {
    where: TbChiTietDichVuDatChoWhereUniqueInput
    create: XOR<TbChiTietDichVuDatChoCreateWithoutDatChoInput, TbChiTietDichVuDatChoUncheckedCreateWithoutDatChoInput>
  }

  export type TbChiTietDichVuDatChoCreateManyDatChoInputEnvelope = {
    data: TbChiTietDichVuDatChoCreateManyDatChoInput | TbChiTietDichVuDatChoCreateManyDatChoInput[]
    skipDuplicates?: boolean
  }

  export type TbKhachHangCreateWithoutDatChoInput = {
    id?: string
    TenKH?: string | null
    SDTKH?: string | null
    EmailKH: string
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbKhachHangUncheckedCreateWithoutDatChoInput = {
    id?: string
    TenKH?: string | null
    SDTKH?: string | null
    EmailKH: string
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbKhachHangCreateOrConnectWithoutDatChoInput = {
    where: TbKhachHangWhereUniqueInput
    create: XOR<TbKhachHangCreateWithoutDatChoInput, TbKhachHangUncheckedCreateWithoutDatChoInput>
  }

  export type TbPhongCreateWithoutDatChoInput = {
    id?: string
    TenPhong: string
    GhiChu?: string | null
    Status?: $Enums.tbphong_Status
    StatusDatCho?: $Enums.tbdatcho_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    NhomKhuVucPhong: TbNhomKhuVucPhongCreateNestedOneWithoutPhongInput
    LoaiPhong: TbLoaiPhongCreateNestedOneWithoutPhongInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongCreateNestedManyWithoutPhongInput
  }

  export type TbPhongUncheckedCreateWithoutDatChoInput = {
    id?: string
    MaLoaiPhong: string
    MaNhomKhuVucPhong: string
    TenPhong: string
    GhiChu?: string | null
    Status?: $Enums.tbphong_Status
    StatusDatCho?: $Enums.tbdatcho_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    CacLinkAnhPhong?: TbCacLinkAnhPhongUncheckedCreateNestedManyWithoutPhongInput
  }

  export type TbPhongCreateOrConnectWithoutDatChoInput = {
    where: TbPhongWhereUniqueInput
    create: XOR<TbPhongCreateWithoutDatChoInput, TbPhongUncheckedCreateWithoutDatChoInput>
  }

  export type TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutDatChoInput = {
    where: TbChiTietDichVuDatChoWhereUniqueInput
    update: XOR<TbChiTietDichVuDatChoUpdateWithoutDatChoInput, TbChiTietDichVuDatChoUncheckedUpdateWithoutDatChoInput>
    create: XOR<TbChiTietDichVuDatChoCreateWithoutDatChoInput, TbChiTietDichVuDatChoUncheckedCreateWithoutDatChoInput>
  }

  export type TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutDatChoInput = {
    where: TbChiTietDichVuDatChoWhereUniqueInput
    data: XOR<TbChiTietDichVuDatChoUpdateWithoutDatChoInput, TbChiTietDichVuDatChoUncheckedUpdateWithoutDatChoInput>
  }

  export type TbChiTietDichVuDatChoUpdateManyWithWhereWithoutDatChoInput = {
    where: TbChiTietDichVuDatChoScalarWhereInput
    data: XOR<TbChiTietDichVuDatChoUpdateManyMutationInput, TbChiTietDichVuDatChoUncheckedUpdateManyWithoutDatChoInput>
  }

  export type TbChiTietDichVuDatChoScalarWhereInput = {
    AND?: TbChiTietDichVuDatChoScalarWhereInput | TbChiTietDichVuDatChoScalarWhereInput[]
    OR?: TbChiTietDichVuDatChoScalarWhereInput[]
    NOT?: TbChiTietDichVuDatChoScalarWhereInput | TbChiTietDichVuDatChoScalarWhereInput[]
    id?: StringFilter<"TbChiTietDichVuDatCho"> | string
    MaDatCho?: StringFilter<"TbChiTietDichVuDatCho"> | string
    MaDichVu?: StringNullableFilter<"TbChiTietDichVuDatCho"> | string | null
    MaHoaDon?: StringNullableFilter<"TbChiTietDichVuDatCho"> | string | null
    MoTa?: StringNullableFilter<"TbChiTietDichVuDatCho"> | string | null
    createAt?: DateTimeFilter<"TbChiTietDichVuDatCho"> | Date | string
  }

  export type TbKhachHangUpsertWithoutDatChoInput = {
    update: XOR<TbKhachHangUpdateWithoutDatChoInput, TbKhachHangUncheckedUpdateWithoutDatChoInput>
    create: XOR<TbKhachHangCreateWithoutDatChoInput, TbKhachHangUncheckedCreateWithoutDatChoInput>
    where?: TbKhachHangWhereInput
  }

  export type TbKhachHangUpdateToOneWithWhereWithoutDatChoInput = {
    where?: TbKhachHangWhereInput
    data: XOR<TbKhachHangUpdateWithoutDatChoInput, TbKhachHangUncheckedUpdateWithoutDatChoInput>
  }

  export type TbKhachHangUpdateWithoutDatChoInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKH?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKH?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKH?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbKhachHangUncheckedUpdateWithoutDatChoInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKH?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKH?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKH?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbPhongUpsertWithoutDatChoInput = {
    update: XOR<TbPhongUpdateWithoutDatChoInput, TbPhongUncheckedUpdateWithoutDatChoInput>
    create: XOR<TbPhongCreateWithoutDatChoInput, TbPhongUncheckedCreateWithoutDatChoInput>
    where?: TbPhongWhereInput
  }

  export type TbPhongUpdateToOneWithWhereWithoutDatChoInput = {
    where?: TbPhongWhereInput
    data: XOR<TbPhongUpdateWithoutDatChoInput, TbPhongUncheckedUpdateWithoutDatChoInput>
  }

  export type TbPhongUpdateWithoutDatChoInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NhomKhuVucPhong?: TbNhomKhuVucPhongUpdateOneRequiredWithoutPhongNestedInput
    LoaiPhong?: TbLoaiPhongUpdateOneRequiredWithoutPhongNestedInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongUpdateManyWithoutPhongNestedInput
  }

  export type TbPhongUncheckedUpdateWithoutDatChoInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaLoaiPhong?: StringFieldUpdateOperationsInput | string
    MaNhomKhuVucPhong?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CacLinkAnhPhong?: TbCacLinkAnhPhongUncheckedUpdateManyWithoutPhongNestedInput
  }

  export type TbNhomDichVuCreateWithoutDichVuInput = {
    id?: string
    TenNhomDichVu: string
    KhachSan: TbKhachSanCreateNestedOneWithoutNhomDichVuInput
  }

  export type TbNhomDichVuUncheckedCreateWithoutDichVuInput = {
    id?: string
    MaKhachSan: string
    TenNhomDichVu: string
  }

  export type TbNhomDichVuCreateOrConnectWithoutDichVuInput = {
    where: TbNhomDichVuWhereUniqueInput
    create: XOR<TbNhomDichVuCreateWithoutDichVuInput, TbNhomDichVuUncheckedCreateWithoutDichVuInput>
  }

  export type TbChiTietDichVuDatChoCreateWithoutDichVuInput = {
    id?: string
    MoTa?: string | null
    createAt?: Date | string
    DatCho: TbDatChoCreateNestedOneWithoutChiTietDichVuDatChoInput
    HoaDon?: TbHoaDonCreateNestedOneWithoutChiTietDichVuDatChoInput
  }

  export type TbChiTietDichVuDatChoUncheckedCreateWithoutDichVuInput = {
    id?: string
    MaDatCho: string
    MaHoaDon?: string | null
    MoTa?: string | null
    createAt?: Date | string
  }

  export type TbChiTietDichVuDatChoCreateOrConnectWithoutDichVuInput = {
    where: TbChiTietDichVuDatChoWhereUniqueInput
    create: XOR<TbChiTietDichVuDatChoCreateWithoutDichVuInput, TbChiTietDichVuDatChoUncheckedCreateWithoutDichVuInput>
  }

  export type TbChiTietDichVuDatChoCreateManyDichVuInputEnvelope = {
    data: TbChiTietDichVuDatChoCreateManyDichVuInput | TbChiTietDichVuDatChoCreateManyDichVuInput[]
    skipDuplicates?: boolean
  }

  export type TbCacLinkAnhDichVuCreateWithoutDichVuInput = {
    id?: string
    LinkAnh: string
  }

  export type TbCacLinkAnhDichVuUncheckedCreateWithoutDichVuInput = {
    id?: string
    LinkAnh: string
  }

  export type TbCacLinkAnhDichVuCreateOrConnectWithoutDichVuInput = {
    where: TbCacLinkAnhDichVuWhereUniqueInput
    create: XOR<TbCacLinkAnhDichVuCreateWithoutDichVuInput, TbCacLinkAnhDichVuUncheckedCreateWithoutDichVuInput>
  }

  export type TbCacLinkAnhDichVuCreateManyDichVuInputEnvelope = {
    data: TbCacLinkAnhDichVuCreateManyDichVuInput | TbCacLinkAnhDichVuCreateManyDichVuInput[]
    skipDuplicates?: boolean
  }

  export type TbNhomDichVuUpsertWithoutDichVuInput = {
    update: XOR<TbNhomDichVuUpdateWithoutDichVuInput, TbNhomDichVuUncheckedUpdateWithoutDichVuInput>
    create: XOR<TbNhomDichVuCreateWithoutDichVuInput, TbNhomDichVuUncheckedCreateWithoutDichVuInput>
    where?: TbNhomDichVuWhereInput
  }

  export type TbNhomDichVuUpdateToOneWithWhereWithoutDichVuInput = {
    where?: TbNhomDichVuWhereInput
    data: XOR<TbNhomDichVuUpdateWithoutDichVuInput, TbNhomDichVuUncheckedUpdateWithoutDichVuInput>
  }

  export type TbNhomDichVuUpdateWithoutDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomDichVu?: StringFieldUpdateOperationsInput | string
    KhachSan?: TbKhachSanUpdateOneRequiredWithoutNhomDichVuNestedInput
  }

  export type TbNhomDichVuUncheckedUpdateWithoutDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenNhomDichVu?: StringFieldUpdateOperationsInput | string
  }

  export type TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutDichVuInput = {
    where: TbChiTietDichVuDatChoWhereUniqueInput
    update: XOR<TbChiTietDichVuDatChoUpdateWithoutDichVuInput, TbChiTietDichVuDatChoUncheckedUpdateWithoutDichVuInput>
    create: XOR<TbChiTietDichVuDatChoCreateWithoutDichVuInput, TbChiTietDichVuDatChoUncheckedCreateWithoutDichVuInput>
  }

  export type TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutDichVuInput = {
    where: TbChiTietDichVuDatChoWhereUniqueInput
    data: XOR<TbChiTietDichVuDatChoUpdateWithoutDichVuInput, TbChiTietDichVuDatChoUncheckedUpdateWithoutDichVuInput>
  }

  export type TbChiTietDichVuDatChoUpdateManyWithWhereWithoutDichVuInput = {
    where: TbChiTietDichVuDatChoScalarWhereInput
    data: XOR<TbChiTietDichVuDatChoUpdateManyMutationInput, TbChiTietDichVuDatChoUncheckedUpdateManyWithoutDichVuInput>
  }

  export type TbCacLinkAnhDichVuUpsertWithWhereUniqueWithoutDichVuInput = {
    where: TbCacLinkAnhDichVuWhereUniqueInput
    update: XOR<TbCacLinkAnhDichVuUpdateWithoutDichVuInput, TbCacLinkAnhDichVuUncheckedUpdateWithoutDichVuInput>
    create: XOR<TbCacLinkAnhDichVuCreateWithoutDichVuInput, TbCacLinkAnhDichVuUncheckedCreateWithoutDichVuInput>
  }

  export type TbCacLinkAnhDichVuUpdateWithWhereUniqueWithoutDichVuInput = {
    where: TbCacLinkAnhDichVuWhereUniqueInput
    data: XOR<TbCacLinkAnhDichVuUpdateWithoutDichVuInput, TbCacLinkAnhDichVuUncheckedUpdateWithoutDichVuInput>
  }

  export type TbCacLinkAnhDichVuUpdateManyWithWhereWithoutDichVuInput = {
    where: TbCacLinkAnhDichVuScalarWhereInput
    data: XOR<TbCacLinkAnhDichVuUpdateManyMutationInput, TbCacLinkAnhDichVuUncheckedUpdateManyWithoutDichVuInput>
  }

  export type TbCacLinkAnhDichVuScalarWhereInput = {
    AND?: TbCacLinkAnhDichVuScalarWhereInput | TbCacLinkAnhDichVuScalarWhereInput[]
    OR?: TbCacLinkAnhDichVuScalarWhereInput[]
    NOT?: TbCacLinkAnhDichVuScalarWhereInput | TbCacLinkAnhDichVuScalarWhereInput[]
    id?: StringFilter<"TbCacLinkAnhDichVu"> | string
    MaDichVu?: StringFilter<"TbCacLinkAnhDichVu"> | string
    LinkAnh?: StringFilter<"TbCacLinkAnhDichVu"> | string
  }

  export type TbDichVuCreateWithoutNhomDichVuInput = {
    id?: string
    TenDichVu: string
    DonViTinh?: string | null
    GiaVon: Decimal | DecimalJsLike | number | string
    GiaBan: Decimal | DecimalJsLike | number | string
    ThoiLuong: number
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoCreateNestedManyWithoutDichVuInput
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuCreateNestedManyWithoutDichVuInput
  }

  export type TbDichVuUncheckedCreateWithoutNhomDichVuInput = {
    id?: string
    TenDichVu: string
    DonViTinh?: string | null
    GiaVon: Decimal | DecimalJsLike | number | string
    GiaBan: Decimal | DecimalJsLike | number | string
    ThoiLuong: number
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedCreateNestedManyWithoutDichVuInput
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuUncheckedCreateNestedManyWithoutDichVuInput
  }

  export type TbDichVuCreateOrConnectWithoutNhomDichVuInput = {
    where: TbDichVuWhereUniqueInput
    create: XOR<TbDichVuCreateWithoutNhomDichVuInput, TbDichVuUncheckedCreateWithoutNhomDichVuInput>
  }

  export type TbDichVuCreateManyNhomDichVuInputEnvelope = {
    data: TbDichVuCreateManyNhomDichVuInput | TbDichVuCreateManyNhomDichVuInput[]
    skipDuplicates?: boolean
  }

  export type TbKhachSanCreateWithoutNhomDichVuInput = {
    id?: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserCreateNestedManyWithoutKhachSanInput
    HoaDon?: TbHoaDonCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaCreateNestedManyWithoutKhachSanInput
    ChiNhanh: TbChiNhanhCreateNestedOneWithoutKhachSanInput
  }

  export type TbKhachSanUncheckedCreateWithoutNhomDichVuInput = {
    id?: string
    MaChiNhanh: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserUncheckedCreateNestedManyWithoutKhachSanInput
    HoaDon?: TbHoaDonUncheckedCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapUncheckedCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaUncheckedCreateNestedManyWithoutKhachSanInput
  }

  export type TbKhachSanCreateOrConnectWithoutNhomDichVuInput = {
    where: TbKhachSanWhereUniqueInput
    create: XOR<TbKhachSanCreateWithoutNhomDichVuInput, TbKhachSanUncheckedCreateWithoutNhomDichVuInput>
  }

  export type TbDichVuUpsertWithWhereUniqueWithoutNhomDichVuInput = {
    where: TbDichVuWhereUniqueInput
    update: XOR<TbDichVuUpdateWithoutNhomDichVuInput, TbDichVuUncheckedUpdateWithoutNhomDichVuInput>
    create: XOR<TbDichVuCreateWithoutNhomDichVuInput, TbDichVuUncheckedCreateWithoutNhomDichVuInput>
  }

  export type TbDichVuUpdateWithWhereUniqueWithoutNhomDichVuInput = {
    where: TbDichVuWhereUniqueInput
    data: XOR<TbDichVuUpdateWithoutNhomDichVuInput, TbDichVuUncheckedUpdateWithoutNhomDichVuInput>
  }

  export type TbDichVuUpdateManyWithWhereWithoutNhomDichVuInput = {
    where: TbDichVuScalarWhereInput
    data: XOR<TbDichVuUpdateManyMutationInput, TbDichVuUncheckedUpdateManyWithoutNhomDichVuInput>
  }

  export type TbDichVuScalarWhereInput = {
    AND?: TbDichVuScalarWhereInput | TbDichVuScalarWhereInput[]
    OR?: TbDichVuScalarWhereInput[]
    NOT?: TbDichVuScalarWhereInput | TbDichVuScalarWhereInput[]
    id?: StringFilter<"TbDichVu"> | string
    MaNhomDichVu?: StringFilter<"TbDichVu"> | string
    TenDichVu?: StringFilter<"TbDichVu"> | string
    DonViTinh?: StringNullableFilter<"TbDichVu"> | string | null
    GiaVon?: DecimalFilter<"TbDichVu"> | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFilter<"TbDichVu"> | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFilter<"TbDichVu"> | number
    StatusThongBao?: Enumthongbao_StatusFilter<"TbDichVu"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbDichVu"> | Date | string
    updateAt?: DateTimeFilter<"TbDichVu"> | Date | string
  }

  export type TbKhachSanUpsertWithoutNhomDichVuInput = {
    update: XOR<TbKhachSanUpdateWithoutNhomDichVuInput, TbKhachSanUncheckedUpdateWithoutNhomDichVuInput>
    create: XOR<TbKhachSanCreateWithoutNhomDichVuInput, TbKhachSanUncheckedCreateWithoutNhomDichVuInput>
    where?: TbKhachSanWhereInput
  }

  export type TbKhachSanUpdateToOneWithWhereWithoutNhomDichVuInput = {
    where?: TbKhachSanWhereInput
    data: XOR<TbKhachSanUpdateWithoutNhomDichVuInput, TbKhachSanUncheckedUpdateWithoutNhomDichVuInput>
  }

  export type TbKhachSanUpdateWithoutNhomDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUpdateManyWithoutKhachSanNestedInput
    HoaDon?: TbHoaDonUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUpdateManyWithoutKhachSanNestedInput
    ChiNhanh?: TbChiNhanhUpdateOneRequiredWithoutKhachSanNestedInput
  }

  export type TbKhachSanUncheckedUpdateWithoutNhomDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaChiNhanh?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUncheckedUpdateManyWithoutKhachSanNestedInput
    HoaDon?: TbHoaDonUncheckedUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUncheckedUpdateManyWithoutKhachSanNestedInput
  }

  export type TbNhomHangHoaCreateWithoutHangHoaInput = {
    id?: string
    TenNhomHangHoa: string
    KhachSan: TbKhachSanCreateNestedOneWithoutNhomHangHoaInput
  }

  export type TbNhomHangHoaUncheckedCreateWithoutHangHoaInput = {
    id?: string
    MaKhachSan: string
    TenNhomHangHoa: string
  }

  export type TbNhomHangHoaCreateOrConnectWithoutHangHoaInput = {
    where: TbNhomHangHoaWhereUniqueInput
    create: XOR<TbNhomHangHoaCreateWithoutHangHoaInput, TbNhomHangHoaUncheckedCreateWithoutHangHoaInput>
  }

  export type TbCacLinkAnhHangHoaCreateWithoutHangHoaInput = {
    id?: string
    LinkAnh: string
  }

  export type TbCacLinkAnhHangHoaUncheckedCreateWithoutHangHoaInput = {
    id?: string
    LinkAnh: string
  }

  export type TbCacLinkAnhHangHoaCreateOrConnectWithoutHangHoaInput = {
    where: TbCacLinkAnhHangHoaWhereUniqueInput
    create: XOR<TbCacLinkAnhHangHoaCreateWithoutHangHoaInput, TbCacLinkAnhHangHoaUncheckedCreateWithoutHangHoaInput>
  }

  export type TbCacLinkAnhHangHoaCreateManyHangHoaInputEnvelope = {
    data: TbCacLinkAnhHangHoaCreateManyHangHoaInput | TbCacLinkAnhHangHoaCreateManyHangHoaInput[]
    skipDuplicates?: boolean
  }

  export type TbChiTietNoiDungNhapCreateWithoutHangHoaInput = {
    id?: string
    ThanhTien: Decimal | DecimalJsLike | number | string
    SLNhap: number
    GiamGia?: Decimal | DecimalJsLike | number | string | null
    createAt?: Date | string
    updateAt?: Date | string
    PhieuNhap: TbPhieuNhapCreateNestedOneWithoutChiTietNoiDungNhapInput
  }

  export type TbChiTietNoiDungNhapUncheckedCreateWithoutHangHoaInput = {
    id?: string
    MaPhieuNhap: string
    ThanhTien: Decimal | DecimalJsLike | number | string
    SLNhap: number
    GiamGia?: Decimal | DecimalJsLike | number | string | null
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbChiTietNoiDungNhapCreateOrConnectWithoutHangHoaInput = {
    where: TbChiTietNoiDungNhapWhereUniqueInput
    create: XOR<TbChiTietNoiDungNhapCreateWithoutHangHoaInput, TbChiTietNoiDungNhapUncheckedCreateWithoutHangHoaInput>
  }

  export type TbChiTietNoiDungNhapCreateManyHangHoaInputEnvelope = {
    data: TbChiTietNoiDungNhapCreateManyHangHoaInput | TbChiTietNoiDungNhapCreateManyHangHoaInput[]
    skipDuplicates?: boolean
  }

  export type TbNhomHangHoaUpsertWithoutHangHoaInput = {
    update: XOR<TbNhomHangHoaUpdateWithoutHangHoaInput, TbNhomHangHoaUncheckedUpdateWithoutHangHoaInput>
    create: XOR<TbNhomHangHoaCreateWithoutHangHoaInput, TbNhomHangHoaUncheckedCreateWithoutHangHoaInput>
    where?: TbNhomHangHoaWhereInput
  }

  export type TbNhomHangHoaUpdateToOneWithWhereWithoutHangHoaInput = {
    where?: TbNhomHangHoaWhereInput
    data: XOR<TbNhomHangHoaUpdateWithoutHangHoaInput, TbNhomHangHoaUncheckedUpdateWithoutHangHoaInput>
  }

  export type TbNhomHangHoaUpdateWithoutHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomHangHoa?: StringFieldUpdateOperationsInput | string
    KhachSan?: TbKhachSanUpdateOneRequiredWithoutNhomHangHoaNestedInput
  }

  export type TbNhomHangHoaUncheckedUpdateWithoutHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenNhomHangHoa?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhHangHoaUpsertWithWhereUniqueWithoutHangHoaInput = {
    where: TbCacLinkAnhHangHoaWhereUniqueInput
    update: XOR<TbCacLinkAnhHangHoaUpdateWithoutHangHoaInput, TbCacLinkAnhHangHoaUncheckedUpdateWithoutHangHoaInput>
    create: XOR<TbCacLinkAnhHangHoaCreateWithoutHangHoaInput, TbCacLinkAnhHangHoaUncheckedCreateWithoutHangHoaInput>
  }

  export type TbCacLinkAnhHangHoaUpdateWithWhereUniqueWithoutHangHoaInput = {
    where: TbCacLinkAnhHangHoaWhereUniqueInput
    data: XOR<TbCacLinkAnhHangHoaUpdateWithoutHangHoaInput, TbCacLinkAnhHangHoaUncheckedUpdateWithoutHangHoaInput>
  }

  export type TbCacLinkAnhHangHoaUpdateManyWithWhereWithoutHangHoaInput = {
    where: TbCacLinkAnhHangHoaScalarWhereInput
    data: XOR<TbCacLinkAnhHangHoaUpdateManyMutationInput, TbCacLinkAnhHangHoaUncheckedUpdateManyWithoutHangHoaInput>
  }

  export type TbCacLinkAnhHangHoaScalarWhereInput = {
    AND?: TbCacLinkAnhHangHoaScalarWhereInput | TbCacLinkAnhHangHoaScalarWhereInput[]
    OR?: TbCacLinkAnhHangHoaScalarWhereInput[]
    NOT?: TbCacLinkAnhHangHoaScalarWhereInput | TbCacLinkAnhHangHoaScalarWhereInput[]
    id?: StringFilter<"TbCacLinkAnhHangHoa"> | string
    MaHangHoa?: StringFilter<"TbCacLinkAnhHangHoa"> | string
    LinkAnh?: StringFilter<"TbCacLinkAnhHangHoa"> | string
  }

  export type TbChiTietNoiDungNhapUpsertWithWhereUniqueWithoutHangHoaInput = {
    where: TbChiTietNoiDungNhapWhereUniqueInput
    update: XOR<TbChiTietNoiDungNhapUpdateWithoutHangHoaInput, TbChiTietNoiDungNhapUncheckedUpdateWithoutHangHoaInput>
    create: XOR<TbChiTietNoiDungNhapCreateWithoutHangHoaInput, TbChiTietNoiDungNhapUncheckedCreateWithoutHangHoaInput>
  }

  export type TbChiTietNoiDungNhapUpdateWithWhereUniqueWithoutHangHoaInput = {
    where: TbChiTietNoiDungNhapWhereUniqueInput
    data: XOR<TbChiTietNoiDungNhapUpdateWithoutHangHoaInput, TbChiTietNoiDungNhapUncheckedUpdateWithoutHangHoaInput>
  }

  export type TbChiTietNoiDungNhapUpdateManyWithWhereWithoutHangHoaInput = {
    where: TbChiTietNoiDungNhapScalarWhereInput
    data: XOR<TbChiTietNoiDungNhapUpdateManyMutationInput, TbChiTietNoiDungNhapUncheckedUpdateManyWithoutHangHoaInput>
  }

  export type TbChiTietNoiDungNhapScalarWhereInput = {
    AND?: TbChiTietNoiDungNhapScalarWhereInput | TbChiTietNoiDungNhapScalarWhereInput[]
    OR?: TbChiTietNoiDungNhapScalarWhereInput[]
    NOT?: TbChiTietNoiDungNhapScalarWhereInput | TbChiTietNoiDungNhapScalarWhereInput[]
    id?: StringFilter<"TbChiTietNoiDungNhap"> | string
    MaHangHoa?: StringFilter<"TbChiTietNoiDungNhap"> | string
    MaPhieuNhap?: StringFilter<"TbChiTietNoiDungNhap"> | string
    ThanhTien?: DecimalFilter<"TbChiTietNoiDungNhap"> | Decimal | DecimalJsLike | number | string
    SLNhap?: IntFilter<"TbChiTietNoiDungNhap"> | number
    GiamGia?: DecimalNullableFilter<"TbChiTietNoiDungNhap"> | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeFilter<"TbChiTietNoiDungNhap"> | Date | string
    updateAt?: DateTimeFilter<"TbChiTietNoiDungNhap"> | Date | string
  }

  export type TbNhaCungCapCreateWithoutPhieuNhapInput = {
    id?: string
    TenNhaCungCap: string
    SDTNhaCungCap: string
    EmailNhaCungCap: string
  }

  export type TbNhaCungCapUncheckedCreateWithoutPhieuNhapInput = {
    id?: string
    TenNhaCungCap: string
    SDTNhaCungCap: string
    EmailNhaCungCap: string
  }

  export type TbNhaCungCapCreateOrConnectWithoutPhieuNhapInput = {
    where: TbNhaCungCapWhereUniqueInput
    create: XOR<TbNhaCungCapCreateWithoutPhieuNhapInput, TbNhaCungCapUncheckedCreateWithoutPhieuNhapInput>
  }

  export type TbKhachSanCreateWithoutPhieuNhapInput = {
    id?: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserCreateNestedManyWithoutKhachSanInput
    HoaDon?: TbHoaDonCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuCreateNestedManyWithoutKhachSanInput
    ChiNhanh: TbChiNhanhCreateNestedOneWithoutKhachSanInput
  }

  export type TbKhachSanUncheckedCreateWithoutPhieuNhapInput = {
    id?: string
    MaChiNhanh: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserUncheckedCreateNestedManyWithoutKhachSanInput
    HoaDon?: TbHoaDonUncheckedCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaUncheckedCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuUncheckedCreateNestedManyWithoutKhachSanInput
  }

  export type TbKhachSanCreateOrConnectWithoutPhieuNhapInput = {
    where: TbKhachSanWhereUniqueInput
    create: XOR<TbKhachSanCreateWithoutPhieuNhapInput, TbKhachSanUncheckedCreateWithoutPhieuNhapInput>
  }

  export type TbChiTietNoiDungNhapCreateWithoutPhieuNhapInput = {
    id?: string
    ThanhTien: Decimal | DecimalJsLike | number | string
    SLNhap: number
    GiamGia?: Decimal | DecimalJsLike | number | string | null
    createAt?: Date | string
    updateAt?: Date | string
    HangHoa: TbHangHoaCreateNestedOneWithoutChiTietNoiDungNhapInput
  }

  export type TbChiTietNoiDungNhapUncheckedCreateWithoutPhieuNhapInput = {
    id?: string
    MaHangHoa: string
    ThanhTien: Decimal | DecimalJsLike | number | string
    SLNhap: number
    GiamGia?: Decimal | DecimalJsLike | number | string | null
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbChiTietNoiDungNhapCreateOrConnectWithoutPhieuNhapInput = {
    where: TbChiTietNoiDungNhapWhereUniqueInput
    create: XOR<TbChiTietNoiDungNhapCreateWithoutPhieuNhapInput, TbChiTietNoiDungNhapUncheckedCreateWithoutPhieuNhapInput>
  }

  export type TbChiTietNoiDungNhapCreateManyPhieuNhapInputEnvelope = {
    data: TbChiTietNoiDungNhapCreateManyPhieuNhapInput | TbChiTietNoiDungNhapCreateManyPhieuNhapInput[]
    skipDuplicates?: boolean
  }

  export type TbNhaCungCapUpsertWithoutPhieuNhapInput = {
    update: XOR<TbNhaCungCapUpdateWithoutPhieuNhapInput, TbNhaCungCapUncheckedUpdateWithoutPhieuNhapInput>
    create: XOR<TbNhaCungCapCreateWithoutPhieuNhapInput, TbNhaCungCapUncheckedCreateWithoutPhieuNhapInput>
    where?: TbNhaCungCapWhereInput
  }

  export type TbNhaCungCapUpdateToOneWithWhereWithoutPhieuNhapInput = {
    where?: TbNhaCungCapWhereInput
    data: XOR<TbNhaCungCapUpdateWithoutPhieuNhapInput, TbNhaCungCapUncheckedUpdateWithoutPhieuNhapInput>
  }

  export type TbNhaCungCapUpdateWithoutPhieuNhapInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhaCungCap?: StringFieldUpdateOperationsInput | string
    SDTNhaCungCap?: StringFieldUpdateOperationsInput | string
    EmailNhaCungCap?: StringFieldUpdateOperationsInput | string
  }

  export type TbNhaCungCapUncheckedUpdateWithoutPhieuNhapInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhaCungCap?: StringFieldUpdateOperationsInput | string
    SDTNhaCungCap?: StringFieldUpdateOperationsInput | string
    EmailNhaCungCap?: StringFieldUpdateOperationsInput | string
  }

  export type TbKhachSanUpsertWithoutPhieuNhapInput = {
    update: XOR<TbKhachSanUpdateWithoutPhieuNhapInput, TbKhachSanUncheckedUpdateWithoutPhieuNhapInput>
    create: XOR<TbKhachSanCreateWithoutPhieuNhapInput, TbKhachSanUncheckedCreateWithoutPhieuNhapInput>
    where?: TbKhachSanWhereInput
  }

  export type TbKhachSanUpdateToOneWithWhereWithoutPhieuNhapInput = {
    where?: TbKhachSanWhereInput
    data: XOR<TbKhachSanUpdateWithoutPhieuNhapInput, TbKhachSanUncheckedUpdateWithoutPhieuNhapInput>
  }

  export type TbKhachSanUpdateWithoutPhieuNhapInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUpdateManyWithoutKhachSanNestedInput
    HoaDon?: TbHoaDonUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUpdateManyWithoutKhachSanNestedInput
    ChiNhanh?: TbChiNhanhUpdateOneRequiredWithoutKhachSanNestedInput
  }

  export type TbKhachSanUncheckedUpdateWithoutPhieuNhapInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaChiNhanh?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUncheckedUpdateManyWithoutKhachSanNestedInput
    HoaDon?: TbHoaDonUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUncheckedUpdateManyWithoutKhachSanNestedInput
  }

  export type TbChiTietNoiDungNhapUpsertWithWhereUniqueWithoutPhieuNhapInput = {
    where: TbChiTietNoiDungNhapWhereUniqueInput
    update: XOR<TbChiTietNoiDungNhapUpdateWithoutPhieuNhapInput, TbChiTietNoiDungNhapUncheckedUpdateWithoutPhieuNhapInput>
    create: XOR<TbChiTietNoiDungNhapCreateWithoutPhieuNhapInput, TbChiTietNoiDungNhapUncheckedCreateWithoutPhieuNhapInput>
  }

  export type TbChiTietNoiDungNhapUpdateWithWhereUniqueWithoutPhieuNhapInput = {
    where: TbChiTietNoiDungNhapWhereUniqueInput
    data: XOR<TbChiTietNoiDungNhapUpdateWithoutPhieuNhapInput, TbChiTietNoiDungNhapUncheckedUpdateWithoutPhieuNhapInput>
  }

  export type TbChiTietNoiDungNhapUpdateManyWithWhereWithoutPhieuNhapInput = {
    where: TbChiTietNoiDungNhapScalarWhereInput
    data: XOR<TbChiTietNoiDungNhapUpdateManyMutationInput, TbChiTietNoiDungNhapUncheckedUpdateManyWithoutPhieuNhapInput>
  }

  export type TbHangHoaCreateWithoutChiTietNoiDungNhapInput = {
    id?: string
    TenHangHoa: string
    DonViTinh?: string | null
    GiaGocHangHoa: Decimal | DecimalJsLike | number | string
    GiaBanHangHoa: Decimal | DecimalJsLike | number | string
    SLTonKho: number
    DinhMucTonItNhat?: number | null
    DinhMucTonNhieuNhat?: number | null
    TrongLuong?: string | null
    MoTa?: string | null
    GhiChu?: string | null
    ViTri?: string | null
    StatusThongBao?: $Enums.thongbao_Status
    NhomHangHoa: TbNhomHangHoaCreateNestedOneWithoutHangHoaInput
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaCreateNestedManyWithoutHangHoaInput
  }

  export type TbHangHoaUncheckedCreateWithoutChiTietNoiDungNhapInput = {
    id?: string
    MaNhomHangHoa: string
    TenHangHoa: string
    DonViTinh?: string | null
    GiaGocHangHoa: Decimal | DecimalJsLike | number | string
    GiaBanHangHoa: Decimal | DecimalJsLike | number | string
    SLTonKho: number
    DinhMucTonItNhat?: number | null
    DinhMucTonNhieuNhat?: number | null
    TrongLuong?: string | null
    MoTa?: string | null
    GhiChu?: string | null
    ViTri?: string | null
    StatusThongBao?: $Enums.thongbao_Status
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaUncheckedCreateNestedManyWithoutHangHoaInput
  }

  export type TbHangHoaCreateOrConnectWithoutChiTietNoiDungNhapInput = {
    where: TbHangHoaWhereUniqueInput
    create: XOR<TbHangHoaCreateWithoutChiTietNoiDungNhapInput, TbHangHoaUncheckedCreateWithoutChiTietNoiDungNhapInput>
  }

  export type TbPhieuNhapCreateWithoutChiTietNoiDungNhapInput = {
    id?: string
    CacKhoanChiPhiPhatSinhHangHoa?: Decimal | DecimalJsLike | number | string | null
    TongTienCanTra: Decimal | DecimalJsLike | number | string
    TienDaTra: Decimal | DecimalJsLike | number | string
    Status?: $Enums.tbphieunhap_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    NhaCungCap?: TbNhaCungCapCreateNestedOneWithoutPhieuNhapInput
    KhachSan: TbKhachSanCreateNestedOneWithoutPhieuNhapInput
  }

  export type TbPhieuNhapUncheckedCreateWithoutChiTietNoiDungNhapInput = {
    id?: string
    MaKhachSan: string
    MaNhaCungCap?: string | null
    CacKhoanChiPhiPhatSinhHangHoa?: Decimal | DecimalJsLike | number | string | null
    TongTienCanTra: Decimal | DecimalJsLike | number | string
    TienDaTra: Decimal | DecimalJsLike | number | string
    Status?: $Enums.tbphieunhap_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbPhieuNhapCreateOrConnectWithoutChiTietNoiDungNhapInput = {
    where: TbPhieuNhapWhereUniqueInput
    create: XOR<TbPhieuNhapCreateWithoutChiTietNoiDungNhapInput, TbPhieuNhapUncheckedCreateWithoutChiTietNoiDungNhapInput>
  }

  export type TbHangHoaUpsertWithoutChiTietNoiDungNhapInput = {
    update: XOR<TbHangHoaUpdateWithoutChiTietNoiDungNhapInput, TbHangHoaUncheckedUpdateWithoutChiTietNoiDungNhapInput>
    create: XOR<TbHangHoaCreateWithoutChiTietNoiDungNhapInput, TbHangHoaUncheckedCreateWithoutChiTietNoiDungNhapInput>
    where?: TbHangHoaWhereInput
  }

  export type TbHangHoaUpdateToOneWithWhereWithoutChiTietNoiDungNhapInput = {
    where?: TbHangHoaWhereInput
    data: XOR<TbHangHoaUpdateWithoutChiTietNoiDungNhapInput, TbHangHoaUncheckedUpdateWithoutChiTietNoiDungNhapInput>
  }

  export type TbHangHoaUpdateWithoutChiTietNoiDungNhapInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenHangHoa?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaGocHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFieldUpdateOperationsInput | number
    DinhMucTonItNhat?: NullableIntFieldUpdateOperationsInput | number | null
    DinhMucTonNhieuNhat?: NullableIntFieldUpdateOperationsInput | number | null
    TrongLuong?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    ViTri?: NullableStringFieldUpdateOperationsInput | string | null
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    NhomHangHoa?: TbNhomHangHoaUpdateOneRequiredWithoutHangHoaNestedInput
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaUpdateManyWithoutHangHoaNestedInput
  }

  export type TbHangHoaUncheckedUpdateWithoutChiTietNoiDungNhapInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaNhomHangHoa?: StringFieldUpdateOperationsInput | string
    TenHangHoa?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaGocHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFieldUpdateOperationsInput | number
    DinhMucTonItNhat?: NullableIntFieldUpdateOperationsInput | number | null
    DinhMucTonNhieuNhat?: NullableIntFieldUpdateOperationsInput | number | null
    TrongLuong?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    ViTri?: NullableStringFieldUpdateOperationsInput | string | null
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaUncheckedUpdateManyWithoutHangHoaNestedInput
  }

  export type TbPhieuNhapUpsertWithoutChiTietNoiDungNhapInput = {
    update: XOR<TbPhieuNhapUpdateWithoutChiTietNoiDungNhapInput, TbPhieuNhapUncheckedUpdateWithoutChiTietNoiDungNhapInput>
    create: XOR<TbPhieuNhapCreateWithoutChiTietNoiDungNhapInput, TbPhieuNhapUncheckedCreateWithoutChiTietNoiDungNhapInput>
    where?: TbPhieuNhapWhereInput
  }

  export type TbPhieuNhapUpdateToOneWithWhereWithoutChiTietNoiDungNhapInput = {
    where?: TbPhieuNhapWhereInput
    data: XOR<TbPhieuNhapUpdateWithoutChiTietNoiDungNhapInput, TbPhieuNhapUncheckedUpdateWithoutChiTietNoiDungNhapInput>
  }

  export type TbPhieuNhapUpdateWithoutChiTietNoiDungNhapInput = {
    id?: StringFieldUpdateOperationsInput | string
    CacKhoanChiPhiPhatSinhHangHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFieldUpdateOperationsInput | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NhaCungCap?: TbNhaCungCapUpdateOneWithoutPhieuNhapNestedInput
    KhachSan?: TbKhachSanUpdateOneRequiredWithoutPhieuNhapNestedInput
  }

  export type TbPhieuNhapUncheckedUpdateWithoutChiTietNoiDungNhapInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    MaNhaCungCap?: NullableStringFieldUpdateOperationsInput | string | null
    CacKhoanChiPhiPhatSinhHangHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFieldUpdateOperationsInput | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbHangHoaCreateWithoutNhomHangHoaInput = {
    id?: string
    TenHangHoa: string
    DonViTinh?: string | null
    GiaGocHangHoa: Decimal | DecimalJsLike | number | string
    GiaBanHangHoa: Decimal | DecimalJsLike | number | string
    SLTonKho: number
    DinhMucTonItNhat?: number | null
    DinhMucTonNhieuNhat?: number | null
    TrongLuong?: string | null
    MoTa?: string | null
    GhiChu?: string | null
    ViTri?: string | null
    StatusThongBao?: $Enums.thongbao_Status
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaCreateNestedManyWithoutHangHoaInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapCreateNestedManyWithoutHangHoaInput
  }

  export type TbHangHoaUncheckedCreateWithoutNhomHangHoaInput = {
    id?: string
    TenHangHoa: string
    DonViTinh?: string | null
    GiaGocHangHoa: Decimal | DecimalJsLike | number | string
    GiaBanHangHoa: Decimal | DecimalJsLike | number | string
    SLTonKho: number
    DinhMucTonItNhat?: number | null
    DinhMucTonNhieuNhat?: number | null
    TrongLuong?: string | null
    MoTa?: string | null
    GhiChu?: string | null
    ViTri?: string | null
    StatusThongBao?: $Enums.thongbao_Status
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaUncheckedCreateNestedManyWithoutHangHoaInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUncheckedCreateNestedManyWithoutHangHoaInput
  }

  export type TbHangHoaCreateOrConnectWithoutNhomHangHoaInput = {
    where: TbHangHoaWhereUniqueInput
    create: XOR<TbHangHoaCreateWithoutNhomHangHoaInput, TbHangHoaUncheckedCreateWithoutNhomHangHoaInput>
  }

  export type TbHangHoaCreateManyNhomHangHoaInputEnvelope = {
    data: TbHangHoaCreateManyNhomHangHoaInput | TbHangHoaCreateManyNhomHangHoaInput[]
    skipDuplicates?: boolean
  }

  export type TbKhachSanCreateWithoutNhomHangHoaInput = {
    id?: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserCreateNestedManyWithoutKhachSanInput
    HoaDon?: TbHoaDonCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuCreateNestedManyWithoutKhachSanInput
    ChiNhanh: TbChiNhanhCreateNestedOneWithoutKhachSanInput
  }

  export type TbKhachSanUncheckedCreateWithoutNhomHangHoaInput = {
    id?: string
    MaChiNhanh: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserUncheckedCreateNestedManyWithoutKhachSanInput
    HoaDon?: TbHoaDonUncheckedCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapUncheckedCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuUncheckedCreateNestedManyWithoutKhachSanInput
  }

  export type TbKhachSanCreateOrConnectWithoutNhomHangHoaInput = {
    where: TbKhachSanWhereUniqueInput
    create: XOR<TbKhachSanCreateWithoutNhomHangHoaInput, TbKhachSanUncheckedCreateWithoutNhomHangHoaInput>
  }

  export type TbHangHoaUpsertWithWhereUniqueWithoutNhomHangHoaInput = {
    where: TbHangHoaWhereUniqueInput
    update: XOR<TbHangHoaUpdateWithoutNhomHangHoaInput, TbHangHoaUncheckedUpdateWithoutNhomHangHoaInput>
    create: XOR<TbHangHoaCreateWithoutNhomHangHoaInput, TbHangHoaUncheckedCreateWithoutNhomHangHoaInput>
  }

  export type TbHangHoaUpdateWithWhereUniqueWithoutNhomHangHoaInput = {
    where: TbHangHoaWhereUniqueInput
    data: XOR<TbHangHoaUpdateWithoutNhomHangHoaInput, TbHangHoaUncheckedUpdateWithoutNhomHangHoaInput>
  }

  export type TbHangHoaUpdateManyWithWhereWithoutNhomHangHoaInput = {
    where: TbHangHoaScalarWhereInput
    data: XOR<TbHangHoaUpdateManyMutationInput, TbHangHoaUncheckedUpdateManyWithoutNhomHangHoaInput>
  }

  export type TbHangHoaScalarWhereInput = {
    AND?: TbHangHoaScalarWhereInput | TbHangHoaScalarWhereInput[]
    OR?: TbHangHoaScalarWhereInput[]
    NOT?: TbHangHoaScalarWhereInput | TbHangHoaScalarWhereInput[]
    id?: StringFilter<"TbHangHoa"> | string
    MaNhomHangHoa?: StringFilter<"TbHangHoa"> | string
    TenHangHoa?: StringFilter<"TbHangHoa"> | string
    DonViTinh?: StringNullableFilter<"TbHangHoa"> | string | null
    GiaGocHangHoa?: DecimalFilter<"TbHangHoa"> | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFilter<"TbHangHoa"> | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFilter<"TbHangHoa"> | number
    DinhMucTonItNhat?: IntNullableFilter<"TbHangHoa"> | number | null
    DinhMucTonNhieuNhat?: IntNullableFilter<"TbHangHoa"> | number | null
    TrongLuong?: StringNullableFilter<"TbHangHoa"> | string | null
    MoTa?: StringNullableFilter<"TbHangHoa"> | string | null
    GhiChu?: StringNullableFilter<"TbHangHoa"> | string | null
    ViTri?: StringNullableFilter<"TbHangHoa"> | string | null
    StatusThongBao?: Enumthongbao_StatusFilter<"TbHangHoa"> | $Enums.thongbao_Status
  }

  export type TbKhachSanUpsertWithoutNhomHangHoaInput = {
    update: XOR<TbKhachSanUpdateWithoutNhomHangHoaInput, TbKhachSanUncheckedUpdateWithoutNhomHangHoaInput>
    create: XOR<TbKhachSanCreateWithoutNhomHangHoaInput, TbKhachSanUncheckedCreateWithoutNhomHangHoaInput>
    where?: TbKhachSanWhereInput
  }

  export type TbKhachSanUpdateToOneWithWhereWithoutNhomHangHoaInput = {
    where?: TbKhachSanWhereInput
    data: XOR<TbKhachSanUpdateWithoutNhomHangHoaInput, TbKhachSanUncheckedUpdateWithoutNhomHangHoaInput>
  }

  export type TbKhachSanUpdateWithoutNhomHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUpdateManyWithoutKhachSanNestedInput
    HoaDon?: TbHoaDonUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUpdateManyWithoutKhachSanNestedInput
    ChiNhanh?: TbChiNhanhUpdateOneRequiredWithoutKhachSanNestedInput
  }

  export type TbKhachSanUncheckedUpdateWithoutNhomHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaChiNhanh?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUncheckedUpdateManyWithoutKhachSanNestedInput
    HoaDon?: TbHoaDonUncheckedUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUncheckedUpdateManyWithoutKhachSanNestedInput
  }

  export type TbChiTietDichVuDatChoCreateWithoutHoaDonInput = {
    id?: string
    MoTa?: string | null
    createAt?: Date | string
    DatCho: TbDatChoCreateNestedOneWithoutChiTietDichVuDatChoInput
    DichVu?: TbDichVuCreateNestedOneWithoutChiTietDichVuDatChoInput
  }

  export type TbChiTietDichVuDatChoUncheckedCreateWithoutHoaDonInput = {
    id?: string
    MaDatCho: string
    MaDichVu?: string | null
    MoTa?: string | null
    createAt?: Date | string
  }

  export type TbChiTietDichVuDatChoCreateOrConnectWithoutHoaDonInput = {
    where: TbChiTietDichVuDatChoWhereUniqueInput
    create: XOR<TbChiTietDichVuDatChoCreateWithoutHoaDonInput, TbChiTietDichVuDatChoUncheckedCreateWithoutHoaDonInput>
  }

  export type TbChiTietDichVuDatChoCreateManyHoaDonInputEnvelope = {
    data: TbChiTietDichVuDatChoCreateManyHoaDonInput | TbChiTietDichVuDatChoCreateManyHoaDonInput[]
    skipDuplicates?: boolean
  }

  export type TbKhachSanCreateWithoutHoaDonInput = {
    id?: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuCreateNestedManyWithoutKhachSanInput
    ChiNhanh: TbChiNhanhCreateNestedOneWithoutKhachSanInput
  }

  export type TbKhachSanUncheckedCreateWithoutHoaDonInput = {
    id?: string
    MaChiNhanh: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserUncheckedCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapUncheckedCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaUncheckedCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuUncheckedCreateNestedManyWithoutKhachSanInput
  }

  export type TbKhachSanCreateOrConnectWithoutHoaDonInput = {
    where: TbKhachSanWhereUniqueInput
    create: XOR<TbKhachSanCreateWithoutHoaDonInput, TbKhachSanUncheckedCreateWithoutHoaDonInput>
  }

  export type SubUserCreateWithoutHoaDonInput = {
    id?: string
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role: $Enums.tbtaikhoancon_VaiTro
    subAvatar?: SubAvatarsCreateNestedOneWithoutSub_userInput
    KhachSan?: TbKhachSanCreateNestedOneWithoutTaiKhoanSubInput
  }

  export type SubUserUncheckedCreateWithoutHoaDonInput = {
    id?: string
    MaKhachSan?: string | null
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role: $Enums.tbtaikhoancon_VaiTro
    subAvatar?: SubAvatarsUncheckedCreateNestedOneWithoutSub_userInput
  }

  export type SubUserCreateOrConnectWithoutHoaDonInput = {
    where: SubUserWhereUniqueInput
    create: XOR<SubUserCreateWithoutHoaDonInput, SubUserUncheckedCreateWithoutHoaDonInput>
  }

  export type TbChiTietDichVuDatChoUpsertWithWhereUniqueWithoutHoaDonInput = {
    where: TbChiTietDichVuDatChoWhereUniqueInput
    update: XOR<TbChiTietDichVuDatChoUpdateWithoutHoaDonInput, TbChiTietDichVuDatChoUncheckedUpdateWithoutHoaDonInput>
    create: XOR<TbChiTietDichVuDatChoCreateWithoutHoaDonInput, TbChiTietDichVuDatChoUncheckedCreateWithoutHoaDonInput>
  }

  export type TbChiTietDichVuDatChoUpdateWithWhereUniqueWithoutHoaDonInput = {
    where: TbChiTietDichVuDatChoWhereUniqueInput
    data: XOR<TbChiTietDichVuDatChoUpdateWithoutHoaDonInput, TbChiTietDichVuDatChoUncheckedUpdateWithoutHoaDonInput>
  }

  export type TbChiTietDichVuDatChoUpdateManyWithWhereWithoutHoaDonInput = {
    where: TbChiTietDichVuDatChoScalarWhereInput
    data: XOR<TbChiTietDichVuDatChoUpdateManyMutationInput, TbChiTietDichVuDatChoUncheckedUpdateManyWithoutHoaDonInput>
  }

  export type TbKhachSanUpsertWithoutHoaDonInput = {
    update: XOR<TbKhachSanUpdateWithoutHoaDonInput, TbKhachSanUncheckedUpdateWithoutHoaDonInput>
    create: XOR<TbKhachSanCreateWithoutHoaDonInput, TbKhachSanUncheckedCreateWithoutHoaDonInput>
    where?: TbKhachSanWhereInput
  }

  export type TbKhachSanUpdateToOneWithWhereWithoutHoaDonInput = {
    where?: TbKhachSanWhereInput
    data: XOR<TbKhachSanUpdateWithoutHoaDonInput, TbKhachSanUncheckedUpdateWithoutHoaDonInput>
  }

  export type TbKhachSanUpdateWithoutHoaDonInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUpdateManyWithoutKhachSanNestedInput
    ChiNhanh?: TbChiNhanhUpdateOneRequiredWithoutKhachSanNestedInput
  }

  export type TbKhachSanUncheckedUpdateWithoutHoaDonInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaChiNhanh?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUncheckedUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUncheckedUpdateManyWithoutKhachSanNestedInput
  }

  export type SubUserUpsertWithoutHoaDonInput = {
    update: XOR<SubUserUpdateWithoutHoaDonInput, SubUserUncheckedUpdateWithoutHoaDonInput>
    create: XOR<SubUserCreateWithoutHoaDonInput, SubUserUncheckedCreateWithoutHoaDonInput>
    where?: SubUserWhereInput
  }

  export type SubUserUpdateToOneWithWhereWithoutHoaDonInput = {
    where?: SubUserWhereInput
    data: XOR<SubUserUpdateWithoutHoaDonInput, SubUserUncheckedUpdateWithoutHoaDonInput>
  }

  export type SubUserUpdateWithoutHoaDonInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoancon_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoancon_VaiTro
    subAvatar?: SubAvatarsUpdateOneWithoutSub_userNestedInput
    KhachSan?: TbKhachSanUpdateOneWithoutTaiKhoanSubNestedInput
  }

  export type SubUserUncheckedUpdateWithoutHoaDonInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoancon_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoancon_VaiTro
    subAvatar?: SubAvatarsUncheckedUpdateOneWithoutSub_userNestedInput
  }

  export type TbDatChoCreateWithoutKhachHangInput = {
    id?: string
    NgayDatCho?: Date | string
    NgayNhanPhong: Date | string
    NgayTraPhong: Date | string
    SLNguoiLonDiKem?: number
    SLTreEmDiKem?: number
    LoaiKhach?: $Enums.loaikhach_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoCreateNestedManyWithoutDatChoInput
    Phong: TbPhongCreateNestedOneWithoutDatChoInput
  }

  export type TbDatChoUncheckedCreateWithoutKhachHangInput = {
    id?: string
    MaPhong: string
    NgayDatCho?: Date | string
    NgayNhanPhong: Date | string
    NgayTraPhong: Date | string
    SLNguoiLonDiKem?: number
    SLTreEmDiKem?: number
    LoaiKhach?: $Enums.loaikhach_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedCreateNestedManyWithoutDatChoInput
  }

  export type TbDatChoCreateOrConnectWithoutKhachHangInput = {
    where: TbDatChoWhereUniqueInput
    create: XOR<TbDatChoCreateWithoutKhachHangInput, TbDatChoUncheckedCreateWithoutKhachHangInput>
  }

  export type TbDatChoCreateManyKhachHangInputEnvelope = {
    data: TbDatChoCreateManyKhachHangInput | TbDatChoCreateManyKhachHangInput[]
    skipDuplicates?: boolean
  }

  export type TbDatChoUpsertWithWhereUniqueWithoutKhachHangInput = {
    where: TbDatChoWhereUniqueInput
    update: XOR<TbDatChoUpdateWithoutKhachHangInput, TbDatChoUncheckedUpdateWithoutKhachHangInput>
    create: XOR<TbDatChoCreateWithoutKhachHangInput, TbDatChoUncheckedCreateWithoutKhachHangInput>
  }

  export type TbDatChoUpdateWithWhereUniqueWithoutKhachHangInput = {
    where: TbDatChoWhereUniqueInput
    data: XOR<TbDatChoUpdateWithoutKhachHangInput, TbDatChoUncheckedUpdateWithoutKhachHangInput>
  }

  export type TbDatChoUpdateManyWithWhereWithoutKhachHangInput = {
    where: TbDatChoScalarWhereInput
    data: XOR<TbDatChoUpdateManyMutationInput, TbDatChoUncheckedUpdateManyWithoutKhachHangInput>
  }

  export type TbDatChoScalarWhereInput = {
    AND?: TbDatChoScalarWhereInput | TbDatChoScalarWhereInput[]
    OR?: TbDatChoScalarWhereInput[]
    NOT?: TbDatChoScalarWhereInput | TbDatChoScalarWhereInput[]
    id?: StringFilter<"TbDatCho"> | string
    MaKH?: StringFilter<"TbDatCho"> | string
    MaPhong?: StringFilter<"TbDatCho"> | string
    NgayDatCho?: DateTimeFilter<"TbDatCho"> | Date | string
    NgayNhanPhong?: DateTimeFilter<"TbDatCho"> | Date | string
    NgayTraPhong?: DateTimeFilter<"TbDatCho"> | Date | string
    SLNguoiLonDiKem?: IntFilter<"TbDatCho"> | number
    SLTreEmDiKem?: IntFilter<"TbDatCho"> | number
    LoaiKhach?: Enumloaikhach_StatusFilter<"TbDatCho"> | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFilter<"TbDatCho"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbDatCho"> | Date | string
    updateAt?: DateTimeFilter<"TbDatCho"> | Date | string
  }

  export type SubUserCreateWithoutKhachSanInput = {
    id?: string
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role: $Enums.tbtaikhoancon_VaiTro
    subAvatar?: SubAvatarsCreateNestedOneWithoutSub_userInput
    HoaDon?: TbHoaDonCreateNestedManyWithoutTaiKhoanSubInput
  }

  export type SubUserUncheckedCreateWithoutKhachSanInput = {
    id?: string
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role: $Enums.tbtaikhoancon_VaiTro
    subAvatar?: SubAvatarsUncheckedCreateNestedOneWithoutSub_userInput
    HoaDon?: TbHoaDonUncheckedCreateNestedManyWithoutTaiKhoanSubInput
  }

  export type SubUserCreateOrConnectWithoutKhachSanInput = {
    where: SubUserWhereUniqueInput
    create: XOR<SubUserCreateWithoutKhachSanInput, SubUserUncheckedCreateWithoutKhachSanInput>
  }

  export type SubUserCreateManyKhachSanInputEnvelope = {
    data: SubUserCreateManyKhachSanInput | SubUserCreateManyKhachSanInput[]
    skipDuplicates?: boolean
  }

  export type TbHoaDonCreateWithoutKhachSanInput = {
    id?: string
    TongHoaDon?: Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: Date | string | null
    GhiChu?: string | null
    Status?: $Enums.tbhoadon_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    PhuongThucThanhToan?: $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoCreateNestedManyWithoutHoaDonInput
    TaiKhoanSub?: SubUserCreateNestedOneWithoutHoaDonInput
  }

  export type TbHoaDonUncheckedCreateWithoutKhachSanInput = {
    id?: string
    MaTaiKhoanSub?: string | null
    TongHoaDon?: Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: Date | string | null
    GhiChu?: string | null
    Status?: $Enums.tbhoadon_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    PhuongThucThanhToan?: $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedCreateNestedManyWithoutHoaDonInput
  }

  export type TbHoaDonCreateOrConnectWithoutKhachSanInput = {
    where: TbHoaDonWhereUniqueInput
    create: XOR<TbHoaDonCreateWithoutKhachSanInput, TbHoaDonUncheckedCreateWithoutKhachSanInput>
  }

  export type TbHoaDonCreateManyKhachSanInputEnvelope = {
    data: TbHoaDonCreateManyKhachSanInput | TbHoaDonCreateManyKhachSanInput[]
    skipDuplicates?: boolean
  }

  export type TbPhieuNhapCreateWithoutKhachSanInput = {
    id?: string
    CacKhoanChiPhiPhatSinhHangHoa?: Decimal | DecimalJsLike | number | string | null
    TongTienCanTra: Decimal | DecimalJsLike | number | string
    TienDaTra: Decimal | DecimalJsLike | number | string
    Status?: $Enums.tbphieunhap_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    NhaCungCap?: TbNhaCungCapCreateNestedOneWithoutPhieuNhapInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapCreateNestedManyWithoutPhieuNhapInput
  }

  export type TbPhieuNhapUncheckedCreateWithoutKhachSanInput = {
    id?: string
    MaNhaCungCap?: string | null
    CacKhoanChiPhiPhatSinhHangHoa?: Decimal | DecimalJsLike | number | string | null
    TongTienCanTra: Decimal | DecimalJsLike | number | string
    TienDaTra: Decimal | DecimalJsLike | number | string
    Status?: $Enums.tbphieunhap_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUncheckedCreateNestedManyWithoutPhieuNhapInput
  }

  export type TbPhieuNhapCreateOrConnectWithoutKhachSanInput = {
    where: TbPhieuNhapWhereUniqueInput
    create: XOR<TbPhieuNhapCreateWithoutKhachSanInput, TbPhieuNhapUncheckedCreateWithoutKhachSanInput>
  }

  export type TbPhieuNhapCreateManyKhachSanInputEnvelope = {
    data: TbPhieuNhapCreateManyKhachSanInput | TbPhieuNhapCreateManyKhachSanInput[]
    skipDuplicates?: boolean
  }

  export type TbNhomKhuVucPhongCreateWithoutKhachSanInput = {
    id?: string
    TenNhomKhuVuc: string
    GhiChu?: string | null
    Phong?: TbPhongCreateNestedManyWithoutNhomKhuVucPhongInput
  }

  export type TbNhomKhuVucPhongUncheckedCreateWithoutKhachSanInput = {
    id?: string
    TenNhomKhuVuc: string
    GhiChu?: string | null
    Phong?: TbPhongUncheckedCreateNestedManyWithoutNhomKhuVucPhongInput
  }

  export type TbNhomKhuVucPhongCreateOrConnectWithoutKhachSanInput = {
    where: TbNhomKhuVucPhongWhereUniqueInput
    create: XOR<TbNhomKhuVucPhongCreateWithoutKhachSanInput, TbNhomKhuVucPhongUncheckedCreateWithoutKhachSanInput>
  }

  export type TbNhomKhuVucPhongCreateManyKhachSanInputEnvelope = {
    data: TbNhomKhuVucPhongCreateManyKhachSanInput | TbNhomKhuVucPhongCreateManyKhachSanInput[]
    skipDuplicates?: boolean
  }

  export type TbNhomHangHoaCreateWithoutKhachSanInput = {
    id?: string
    TenNhomHangHoa: string
    HangHoa?: TbHangHoaCreateNestedManyWithoutNhomHangHoaInput
  }

  export type TbNhomHangHoaUncheckedCreateWithoutKhachSanInput = {
    id?: string
    TenNhomHangHoa: string
    HangHoa?: TbHangHoaUncheckedCreateNestedManyWithoutNhomHangHoaInput
  }

  export type TbNhomHangHoaCreateOrConnectWithoutKhachSanInput = {
    where: TbNhomHangHoaWhereUniqueInput
    create: XOR<TbNhomHangHoaCreateWithoutKhachSanInput, TbNhomHangHoaUncheckedCreateWithoutKhachSanInput>
  }

  export type TbNhomHangHoaCreateManyKhachSanInputEnvelope = {
    data: TbNhomHangHoaCreateManyKhachSanInput | TbNhomHangHoaCreateManyKhachSanInput[]
    skipDuplicates?: boolean
  }

  export type TbNhomDichVuCreateWithoutKhachSanInput = {
    id?: string
    TenNhomDichVu: string
    DichVu?: TbDichVuCreateNestedManyWithoutNhomDichVuInput
  }

  export type TbNhomDichVuUncheckedCreateWithoutKhachSanInput = {
    id?: string
    TenNhomDichVu: string
    DichVu?: TbDichVuUncheckedCreateNestedManyWithoutNhomDichVuInput
  }

  export type TbNhomDichVuCreateOrConnectWithoutKhachSanInput = {
    where: TbNhomDichVuWhereUniqueInput
    create: XOR<TbNhomDichVuCreateWithoutKhachSanInput, TbNhomDichVuUncheckedCreateWithoutKhachSanInput>
  }

  export type TbNhomDichVuCreateManyKhachSanInputEnvelope = {
    data: TbNhomDichVuCreateManyKhachSanInput | TbNhomDichVuCreateManyKhachSanInput[]
    skipDuplicates?: boolean
  }

  export type TbChiNhanhCreateWithoutKhachSanInput = {
    id?: string
    TenChiNhanh: string
    SDTChiNhanh?: string | null
    DiaChiChiNhanh?: string | null
    TaiKhoanAdmin: UserCreateNestedOneWithoutChiNhanhInput
  }

  export type TbChiNhanhUncheckedCreateWithoutKhachSanInput = {
    id?: string
    MaAdmin: string
    TenChiNhanh: string
    SDTChiNhanh?: string | null
    DiaChiChiNhanh?: string | null
  }

  export type TbChiNhanhCreateOrConnectWithoutKhachSanInput = {
    where: TbChiNhanhWhereUniqueInput
    create: XOR<TbChiNhanhCreateWithoutKhachSanInput, TbChiNhanhUncheckedCreateWithoutKhachSanInput>
  }

  export type SubUserUpsertWithWhereUniqueWithoutKhachSanInput = {
    where: SubUserWhereUniqueInput
    update: XOR<SubUserUpdateWithoutKhachSanInput, SubUserUncheckedUpdateWithoutKhachSanInput>
    create: XOR<SubUserCreateWithoutKhachSanInput, SubUserUncheckedCreateWithoutKhachSanInput>
  }

  export type SubUserUpdateWithWhereUniqueWithoutKhachSanInput = {
    where: SubUserWhereUniqueInput
    data: XOR<SubUserUpdateWithoutKhachSanInput, SubUserUncheckedUpdateWithoutKhachSanInput>
  }

  export type SubUserUpdateManyWithWhereWithoutKhachSanInput = {
    where: SubUserScalarWhereInput
    data: XOR<SubUserUpdateManyMutationInput, SubUserUncheckedUpdateManyWithoutKhachSanInput>
  }

  export type SubUserScalarWhereInput = {
    AND?: SubUserScalarWhereInput | SubUserScalarWhereInput[]
    OR?: SubUserScalarWhereInput[]
    NOT?: SubUserScalarWhereInput | SubUserScalarWhereInput[]
    id?: StringFilter<"SubUser"> | string
    MaKhachSan?: StringNullableFilter<"SubUser"> | string | null
    name?: StringFilter<"SubUser"> | string
    phone_number?: FloatNullableFilter<"SubUser"> | number | null
    address?: StringNullableFilter<"SubUser"> | string | null
    password?: StringFilter<"SubUser"> | string
    email?: StringFilter<"SubUser"> | string
    createdAt?: DateTimeFilter<"SubUser"> | Date | string
    updatedAt?: DateTimeFilter<"SubUser"> | Date | string
    role?: Enumtbtaikhoancon_VaiTroFilter<"SubUser"> | $Enums.tbtaikhoancon_VaiTro
  }

  export type TbHoaDonUpsertWithWhereUniqueWithoutKhachSanInput = {
    where: TbHoaDonWhereUniqueInput
    update: XOR<TbHoaDonUpdateWithoutKhachSanInput, TbHoaDonUncheckedUpdateWithoutKhachSanInput>
    create: XOR<TbHoaDonCreateWithoutKhachSanInput, TbHoaDonUncheckedCreateWithoutKhachSanInput>
  }

  export type TbHoaDonUpdateWithWhereUniqueWithoutKhachSanInput = {
    where: TbHoaDonWhereUniqueInput
    data: XOR<TbHoaDonUpdateWithoutKhachSanInput, TbHoaDonUncheckedUpdateWithoutKhachSanInput>
  }

  export type TbHoaDonUpdateManyWithWhereWithoutKhachSanInput = {
    where: TbHoaDonScalarWhereInput
    data: XOR<TbHoaDonUpdateManyMutationInput, TbHoaDonUncheckedUpdateManyWithoutKhachSanInput>
  }

  export type TbHoaDonScalarWhereInput = {
    AND?: TbHoaDonScalarWhereInput | TbHoaDonScalarWhereInput[]
    OR?: TbHoaDonScalarWhereInput[]
    NOT?: TbHoaDonScalarWhereInput | TbHoaDonScalarWhereInput[]
    id?: StringFilter<"TbHoaDon"> | string
    MaTaiKhoanSub?: StringNullableFilter<"TbHoaDon"> | string | null
    MaKhachSan?: StringFilter<"TbHoaDon"> | string
    TongHoaDon?: DecimalNullableFilter<"TbHoaDon"> | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: DecimalNullableFilter<"TbHoaDon"> | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: DateTimeNullableFilter<"TbHoaDon"> | Date | string | null
    GhiChu?: StringNullableFilter<"TbHoaDon"> | string | null
    Status?: Enumtbhoadon_StatusFilter<"TbHoaDon"> | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFilter<"TbHoaDon"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbHoaDon"> | Date | string
    updateAt?: DateTimeFilter<"TbHoaDon"> | Date | string
    PhuongThucThanhToan?: Enumtbhoadon_PhuongThucThanhToanNullableFilter<"TbHoaDon"> | $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type TbPhieuNhapUpsertWithWhereUniqueWithoutKhachSanInput = {
    where: TbPhieuNhapWhereUniqueInput
    update: XOR<TbPhieuNhapUpdateWithoutKhachSanInput, TbPhieuNhapUncheckedUpdateWithoutKhachSanInput>
    create: XOR<TbPhieuNhapCreateWithoutKhachSanInput, TbPhieuNhapUncheckedCreateWithoutKhachSanInput>
  }

  export type TbPhieuNhapUpdateWithWhereUniqueWithoutKhachSanInput = {
    where: TbPhieuNhapWhereUniqueInput
    data: XOR<TbPhieuNhapUpdateWithoutKhachSanInput, TbPhieuNhapUncheckedUpdateWithoutKhachSanInput>
  }

  export type TbPhieuNhapUpdateManyWithWhereWithoutKhachSanInput = {
    where: TbPhieuNhapScalarWhereInput
    data: XOR<TbPhieuNhapUpdateManyMutationInput, TbPhieuNhapUncheckedUpdateManyWithoutKhachSanInput>
  }

  export type TbPhieuNhapScalarWhereInput = {
    AND?: TbPhieuNhapScalarWhereInput | TbPhieuNhapScalarWhereInput[]
    OR?: TbPhieuNhapScalarWhereInput[]
    NOT?: TbPhieuNhapScalarWhereInput | TbPhieuNhapScalarWhereInput[]
    id?: StringFilter<"TbPhieuNhap"> | string
    MaKhachSan?: StringFilter<"TbPhieuNhap"> | string
    MaNhaCungCap?: StringNullableFilter<"TbPhieuNhap"> | string | null
    CacKhoanChiPhiPhatSinhHangHoa?: DecimalNullableFilter<"TbPhieuNhap"> | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFilter<"TbPhieuNhap"> | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFilter<"TbPhieuNhap"> | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFilter<"TbPhieuNhap"> | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFilter<"TbPhieuNhap"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbPhieuNhap"> | Date | string
    updateAt?: DateTimeFilter<"TbPhieuNhap"> | Date | string
  }

  export type TbNhomKhuVucPhongUpsertWithWhereUniqueWithoutKhachSanInput = {
    where: TbNhomKhuVucPhongWhereUniqueInput
    update: XOR<TbNhomKhuVucPhongUpdateWithoutKhachSanInput, TbNhomKhuVucPhongUncheckedUpdateWithoutKhachSanInput>
    create: XOR<TbNhomKhuVucPhongCreateWithoutKhachSanInput, TbNhomKhuVucPhongUncheckedCreateWithoutKhachSanInput>
  }

  export type TbNhomKhuVucPhongUpdateWithWhereUniqueWithoutKhachSanInput = {
    where: TbNhomKhuVucPhongWhereUniqueInput
    data: XOR<TbNhomKhuVucPhongUpdateWithoutKhachSanInput, TbNhomKhuVucPhongUncheckedUpdateWithoutKhachSanInput>
  }

  export type TbNhomKhuVucPhongUpdateManyWithWhereWithoutKhachSanInput = {
    where: TbNhomKhuVucPhongScalarWhereInput
    data: XOR<TbNhomKhuVucPhongUpdateManyMutationInput, TbNhomKhuVucPhongUncheckedUpdateManyWithoutKhachSanInput>
  }

  export type TbNhomKhuVucPhongScalarWhereInput = {
    AND?: TbNhomKhuVucPhongScalarWhereInput | TbNhomKhuVucPhongScalarWhereInput[]
    OR?: TbNhomKhuVucPhongScalarWhereInput[]
    NOT?: TbNhomKhuVucPhongScalarWhereInput | TbNhomKhuVucPhongScalarWhereInput[]
    id?: StringFilter<"TbNhomKhuVucPhong"> | string
    MaKhachSan?: StringFilter<"TbNhomKhuVucPhong"> | string
    TenNhomKhuVuc?: StringFilter<"TbNhomKhuVucPhong"> | string
    GhiChu?: StringNullableFilter<"TbNhomKhuVucPhong"> | string | null
  }

  export type TbNhomHangHoaUpsertWithWhereUniqueWithoutKhachSanInput = {
    where: TbNhomHangHoaWhereUniqueInput
    update: XOR<TbNhomHangHoaUpdateWithoutKhachSanInput, TbNhomHangHoaUncheckedUpdateWithoutKhachSanInput>
    create: XOR<TbNhomHangHoaCreateWithoutKhachSanInput, TbNhomHangHoaUncheckedCreateWithoutKhachSanInput>
  }

  export type TbNhomHangHoaUpdateWithWhereUniqueWithoutKhachSanInput = {
    where: TbNhomHangHoaWhereUniqueInput
    data: XOR<TbNhomHangHoaUpdateWithoutKhachSanInput, TbNhomHangHoaUncheckedUpdateWithoutKhachSanInput>
  }

  export type TbNhomHangHoaUpdateManyWithWhereWithoutKhachSanInput = {
    where: TbNhomHangHoaScalarWhereInput
    data: XOR<TbNhomHangHoaUpdateManyMutationInput, TbNhomHangHoaUncheckedUpdateManyWithoutKhachSanInput>
  }

  export type TbNhomHangHoaScalarWhereInput = {
    AND?: TbNhomHangHoaScalarWhereInput | TbNhomHangHoaScalarWhereInput[]
    OR?: TbNhomHangHoaScalarWhereInput[]
    NOT?: TbNhomHangHoaScalarWhereInput | TbNhomHangHoaScalarWhereInput[]
    id?: StringFilter<"TbNhomHangHoa"> | string
    MaKhachSan?: StringFilter<"TbNhomHangHoa"> | string
    TenNhomHangHoa?: StringFilter<"TbNhomHangHoa"> | string
  }

  export type TbNhomDichVuUpsertWithWhereUniqueWithoutKhachSanInput = {
    where: TbNhomDichVuWhereUniqueInput
    update: XOR<TbNhomDichVuUpdateWithoutKhachSanInput, TbNhomDichVuUncheckedUpdateWithoutKhachSanInput>
    create: XOR<TbNhomDichVuCreateWithoutKhachSanInput, TbNhomDichVuUncheckedCreateWithoutKhachSanInput>
  }

  export type TbNhomDichVuUpdateWithWhereUniqueWithoutKhachSanInput = {
    where: TbNhomDichVuWhereUniqueInput
    data: XOR<TbNhomDichVuUpdateWithoutKhachSanInput, TbNhomDichVuUncheckedUpdateWithoutKhachSanInput>
  }

  export type TbNhomDichVuUpdateManyWithWhereWithoutKhachSanInput = {
    where: TbNhomDichVuScalarWhereInput
    data: XOR<TbNhomDichVuUpdateManyMutationInput, TbNhomDichVuUncheckedUpdateManyWithoutKhachSanInput>
  }

  export type TbNhomDichVuScalarWhereInput = {
    AND?: TbNhomDichVuScalarWhereInput | TbNhomDichVuScalarWhereInput[]
    OR?: TbNhomDichVuScalarWhereInput[]
    NOT?: TbNhomDichVuScalarWhereInput | TbNhomDichVuScalarWhereInput[]
    id?: StringFilter<"TbNhomDichVu"> | string
    MaKhachSan?: StringFilter<"TbNhomDichVu"> | string
    TenNhomDichVu?: StringFilter<"TbNhomDichVu"> | string
  }

  export type TbChiNhanhUpsertWithoutKhachSanInput = {
    update: XOR<TbChiNhanhUpdateWithoutKhachSanInput, TbChiNhanhUncheckedUpdateWithoutKhachSanInput>
    create: XOR<TbChiNhanhCreateWithoutKhachSanInput, TbChiNhanhUncheckedCreateWithoutKhachSanInput>
    where?: TbChiNhanhWhereInput
  }

  export type TbChiNhanhUpdateToOneWithWhereWithoutKhachSanInput = {
    where?: TbChiNhanhWhereInput
    data: XOR<TbChiNhanhUpdateWithoutKhachSanInput, TbChiNhanhUncheckedUpdateWithoutKhachSanInput>
  }

  export type TbChiNhanhUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenChiNhanh?: StringFieldUpdateOperationsInput | string
    SDTChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    DiaChiChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanAdmin?: UserUpdateOneRequiredWithoutChiNhanhNestedInput
  }

  export type TbChiNhanhUncheckedUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaAdmin?: StringFieldUpdateOperationsInput | string
    TenChiNhanh?: StringFieldUpdateOperationsInput | string
    SDTChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    DiaChiChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TbCacLinkAnhLoaiPhongCreateWithoutLoaiPhongInput = {
    id?: string
    LinkAnh: string
  }

  export type TbCacLinkAnhLoaiPhongUncheckedCreateWithoutLoaiPhongInput = {
    id?: string
    LinkAnh: string
  }

  export type TbCacLinkAnhLoaiPhongCreateOrConnectWithoutLoaiPhongInput = {
    where: TbCacLinkAnhLoaiPhongWhereUniqueInput
    create: XOR<TbCacLinkAnhLoaiPhongCreateWithoutLoaiPhongInput, TbCacLinkAnhLoaiPhongUncheckedCreateWithoutLoaiPhongInput>
  }

  export type TbCacLinkAnhLoaiPhongCreateManyLoaiPhongInputEnvelope = {
    data: TbCacLinkAnhLoaiPhongCreateManyLoaiPhongInput | TbCacLinkAnhLoaiPhongCreateManyLoaiPhongInput[]
    skipDuplicates?: boolean
  }

  export type TbPhongCreateWithoutLoaiPhongInput = {
    id?: string
    TenPhong: string
    GhiChu?: string | null
    Status?: $Enums.tbphong_Status
    StatusDatCho?: $Enums.tbdatcho_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    NhomKhuVucPhong: TbNhomKhuVucPhongCreateNestedOneWithoutPhongInput
    DatCho?: TbDatChoCreateNestedManyWithoutPhongInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongCreateNestedManyWithoutPhongInput
  }

  export type TbPhongUncheckedCreateWithoutLoaiPhongInput = {
    id?: string
    MaNhomKhuVucPhong: string
    TenPhong: string
    GhiChu?: string | null
    Status?: $Enums.tbphong_Status
    StatusDatCho?: $Enums.tbdatcho_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    DatCho?: TbDatChoUncheckedCreateNestedManyWithoutPhongInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongUncheckedCreateNestedManyWithoutPhongInput
  }

  export type TbPhongCreateOrConnectWithoutLoaiPhongInput = {
    where: TbPhongWhereUniqueInput
    create: XOR<TbPhongCreateWithoutLoaiPhongInput, TbPhongUncheckedCreateWithoutLoaiPhongInput>
  }

  export type TbPhongCreateManyLoaiPhongInputEnvelope = {
    data: TbPhongCreateManyLoaiPhongInput | TbPhongCreateManyLoaiPhongInput[]
    skipDuplicates?: boolean
  }

  export type TbCacLinkAnhLoaiPhongUpsertWithWhereUniqueWithoutLoaiPhongInput = {
    where: TbCacLinkAnhLoaiPhongWhereUniqueInput
    update: XOR<TbCacLinkAnhLoaiPhongUpdateWithoutLoaiPhongInput, TbCacLinkAnhLoaiPhongUncheckedUpdateWithoutLoaiPhongInput>
    create: XOR<TbCacLinkAnhLoaiPhongCreateWithoutLoaiPhongInput, TbCacLinkAnhLoaiPhongUncheckedCreateWithoutLoaiPhongInput>
  }

  export type TbCacLinkAnhLoaiPhongUpdateWithWhereUniqueWithoutLoaiPhongInput = {
    where: TbCacLinkAnhLoaiPhongWhereUniqueInput
    data: XOR<TbCacLinkAnhLoaiPhongUpdateWithoutLoaiPhongInput, TbCacLinkAnhLoaiPhongUncheckedUpdateWithoutLoaiPhongInput>
  }

  export type TbCacLinkAnhLoaiPhongUpdateManyWithWhereWithoutLoaiPhongInput = {
    where: TbCacLinkAnhLoaiPhongScalarWhereInput
    data: XOR<TbCacLinkAnhLoaiPhongUpdateManyMutationInput, TbCacLinkAnhLoaiPhongUncheckedUpdateManyWithoutLoaiPhongInput>
  }

  export type TbCacLinkAnhLoaiPhongScalarWhereInput = {
    AND?: TbCacLinkAnhLoaiPhongScalarWhereInput | TbCacLinkAnhLoaiPhongScalarWhereInput[]
    OR?: TbCacLinkAnhLoaiPhongScalarWhereInput[]
    NOT?: TbCacLinkAnhLoaiPhongScalarWhereInput | TbCacLinkAnhLoaiPhongScalarWhereInput[]
    id?: StringFilter<"TbCacLinkAnhLoaiPhong"> | string
    MaLoaiPhong?: StringFilter<"TbCacLinkAnhLoaiPhong"> | string
    LinkAnh?: StringFilter<"TbCacLinkAnhLoaiPhong"> | string
  }

  export type TbPhongUpsertWithWhereUniqueWithoutLoaiPhongInput = {
    where: TbPhongWhereUniqueInput
    update: XOR<TbPhongUpdateWithoutLoaiPhongInput, TbPhongUncheckedUpdateWithoutLoaiPhongInput>
    create: XOR<TbPhongCreateWithoutLoaiPhongInput, TbPhongUncheckedCreateWithoutLoaiPhongInput>
  }

  export type TbPhongUpdateWithWhereUniqueWithoutLoaiPhongInput = {
    where: TbPhongWhereUniqueInput
    data: XOR<TbPhongUpdateWithoutLoaiPhongInput, TbPhongUncheckedUpdateWithoutLoaiPhongInput>
  }

  export type TbPhongUpdateManyWithWhereWithoutLoaiPhongInput = {
    where: TbPhongScalarWhereInput
    data: XOR<TbPhongUpdateManyMutationInput, TbPhongUncheckedUpdateManyWithoutLoaiPhongInput>
  }

  export type TbPhongScalarWhereInput = {
    AND?: TbPhongScalarWhereInput | TbPhongScalarWhereInput[]
    OR?: TbPhongScalarWhereInput[]
    NOT?: TbPhongScalarWhereInput | TbPhongScalarWhereInput[]
    id?: StringFilter<"TbPhong"> | string
    MaLoaiPhong?: StringFilter<"TbPhong"> | string
    MaNhomKhuVucPhong?: StringFilter<"TbPhong"> | string
    TenPhong?: StringFilter<"TbPhong"> | string
    GhiChu?: StringNullableFilter<"TbPhong"> | string | null
    Status?: Enumtbphong_StatusFilter<"TbPhong"> | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFilter<"TbPhong"> | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFilter<"TbPhong"> | $Enums.thongbao_Status
    createAt?: DateTimeFilter<"TbPhong"> | Date | string
    updateAt?: DateTimeFilter<"TbPhong"> | Date | string
  }

  export type TbLoaiPhongCreateWithoutCacLinkAnhLoaiPhongInput = {
    id?: string
    MaKhachSan: string
    TenLoaiPhong: string
    GiaTheoGio: Decimal | DecimalJsLike | number | string
    GiaTheoNgay: Decimal | DecimalJsLike | number | string
    Phong?: TbPhongCreateNestedManyWithoutLoaiPhongInput
  }

  export type TbLoaiPhongUncheckedCreateWithoutCacLinkAnhLoaiPhongInput = {
    id?: string
    MaKhachSan: string
    TenLoaiPhong: string
    GiaTheoGio: Decimal | DecimalJsLike | number | string
    GiaTheoNgay: Decimal | DecimalJsLike | number | string
    Phong?: TbPhongUncheckedCreateNestedManyWithoutLoaiPhongInput
  }

  export type TbLoaiPhongCreateOrConnectWithoutCacLinkAnhLoaiPhongInput = {
    where: TbLoaiPhongWhereUniqueInput
    create: XOR<TbLoaiPhongCreateWithoutCacLinkAnhLoaiPhongInput, TbLoaiPhongUncheckedCreateWithoutCacLinkAnhLoaiPhongInput>
  }

  export type TbLoaiPhongUpsertWithoutCacLinkAnhLoaiPhongInput = {
    update: XOR<TbLoaiPhongUpdateWithoutCacLinkAnhLoaiPhongInput, TbLoaiPhongUncheckedUpdateWithoutCacLinkAnhLoaiPhongInput>
    create: XOR<TbLoaiPhongCreateWithoutCacLinkAnhLoaiPhongInput, TbLoaiPhongUncheckedCreateWithoutCacLinkAnhLoaiPhongInput>
    where?: TbLoaiPhongWhereInput
  }

  export type TbLoaiPhongUpdateToOneWithWhereWithoutCacLinkAnhLoaiPhongInput = {
    where?: TbLoaiPhongWhereInput
    data: XOR<TbLoaiPhongUpdateWithoutCacLinkAnhLoaiPhongInput, TbLoaiPhongUncheckedUpdateWithoutCacLinkAnhLoaiPhongInput>
  }

  export type TbLoaiPhongUpdateWithoutCacLinkAnhLoaiPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenLoaiPhong?: StringFieldUpdateOperationsInput | string
    GiaTheoGio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaTheoNgay?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Phong?: TbPhongUpdateManyWithoutLoaiPhongNestedInput
  }

  export type TbLoaiPhongUncheckedUpdateWithoutCacLinkAnhLoaiPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenLoaiPhong?: StringFieldUpdateOperationsInput | string
    GiaTheoGio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaTheoNgay?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Phong?: TbPhongUncheckedUpdateManyWithoutLoaiPhongNestedInput
  }

  export type TbDichVuCreateWithoutCacLinkAnhDichVuInput = {
    id?: string
    TenDichVu: string
    DonViTinh?: string | null
    GiaVon: Decimal | DecimalJsLike | number | string
    GiaBan: Decimal | DecimalJsLike | number | string
    ThoiLuong: number
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    NhomDichVu: TbNhomDichVuCreateNestedOneWithoutDichVuInput
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoCreateNestedManyWithoutDichVuInput
  }

  export type TbDichVuUncheckedCreateWithoutCacLinkAnhDichVuInput = {
    id?: string
    MaNhomDichVu: string
    TenDichVu: string
    DonViTinh?: string | null
    GiaVon: Decimal | DecimalJsLike | number | string
    GiaBan: Decimal | DecimalJsLike | number | string
    ThoiLuong: number
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedCreateNestedManyWithoutDichVuInput
  }

  export type TbDichVuCreateOrConnectWithoutCacLinkAnhDichVuInput = {
    where: TbDichVuWhereUniqueInput
    create: XOR<TbDichVuCreateWithoutCacLinkAnhDichVuInput, TbDichVuUncheckedCreateWithoutCacLinkAnhDichVuInput>
  }

  export type TbDichVuUpsertWithoutCacLinkAnhDichVuInput = {
    update: XOR<TbDichVuUpdateWithoutCacLinkAnhDichVuInput, TbDichVuUncheckedUpdateWithoutCacLinkAnhDichVuInput>
    create: XOR<TbDichVuCreateWithoutCacLinkAnhDichVuInput, TbDichVuUncheckedCreateWithoutCacLinkAnhDichVuInput>
    where?: TbDichVuWhereInput
  }

  export type TbDichVuUpdateToOneWithWhereWithoutCacLinkAnhDichVuInput = {
    where?: TbDichVuWhereInput
    data: XOR<TbDichVuUpdateWithoutCacLinkAnhDichVuInput, TbDichVuUncheckedUpdateWithoutCacLinkAnhDichVuInput>
  }

  export type TbDichVuUpdateWithoutCacLinkAnhDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenDichVu?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaVon?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFieldUpdateOperationsInput | number
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NhomDichVu?: TbNhomDichVuUpdateOneRequiredWithoutDichVuNestedInput
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUpdateManyWithoutDichVuNestedInput
  }

  export type TbDichVuUncheckedUpdateWithoutCacLinkAnhDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaNhomDichVu?: StringFieldUpdateOperationsInput | string
    TenDichVu?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaVon?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFieldUpdateOperationsInput | number
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedUpdateManyWithoutDichVuNestedInput
  }

  export type TbHangHoaCreateWithoutCacLinkAnhHangHoaInput = {
    id?: string
    TenHangHoa: string
    DonViTinh?: string | null
    GiaGocHangHoa: Decimal | DecimalJsLike | number | string
    GiaBanHangHoa: Decimal | DecimalJsLike | number | string
    SLTonKho: number
    DinhMucTonItNhat?: number | null
    DinhMucTonNhieuNhat?: number | null
    TrongLuong?: string | null
    MoTa?: string | null
    GhiChu?: string | null
    ViTri?: string | null
    StatusThongBao?: $Enums.thongbao_Status
    NhomHangHoa: TbNhomHangHoaCreateNestedOneWithoutHangHoaInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapCreateNestedManyWithoutHangHoaInput
  }

  export type TbHangHoaUncheckedCreateWithoutCacLinkAnhHangHoaInput = {
    id?: string
    MaNhomHangHoa: string
    TenHangHoa: string
    DonViTinh?: string | null
    GiaGocHangHoa: Decimal | DecimalJsLike | number | string
    GiaBanHangHoa: Decimal | DecimalJsLike | number | string
    SLTonKho: number
    DinhMucTonItNhat?: number | null
    DinhMucTonNhieuNhat?: number | null
    TrongLuong?: string | null
    MoTa?: string | null
    GhiChu?: string | null
    ViTri?: string | null
    StatusThongBao?: $Enums.thongbao_Status
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUncheckedCreateNestedManyWithoutHangHoaInput
  }

  export type TbHangHoaCreateOrConnectWithoutCacLinkAnhHangHoaInput = {
    where: TbHangHoaWhereUniqueInput
    create: XOR<TbHangHoaCreateWithoutCacLinkAnhHangHoaInput, TbHangHoaUncheckedCreateWithoutCacLinkAnhHangHoaInput>
  }

  export type TbHangHoaUpsertWithoutCacLinkAnhHangHoaInput = {
    update: XOR<TbHangHoaUpdateWithoutCacLinkAnhHangHoaInput, TbHangHoaUncheckedUpdateWithoutCacLinkAnhHangHoaInput>
    create: XOR<TbHangHoaCreateWithoutCacLinkAnhHangHoaInput, TbHangHoaUncheckedCreateWithoutCacLinkAnhHangHoaInput>
    where?: TbHangHoaWhereInput
  }

  export type TbHangHoaUpdateToOneWithWhereWithoutCacLinkAnhHangHoaInput = {
    where?: TbHangHoaWhereInput
    data: XOR<TbHangHoaUpdateWithoutCacLinkAnhHangHoaInput, TbHangHoaUncheckedUpdateWithoutCacLinkAnhHangHoaInput>
  }

  export type TbHangHoaUpdateWithoutCacLinkAnhHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenHangHoa?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaGocHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFieldUpdateOperationsInput | number
    DinhMucTonItNhat?: NullableIntFieldUpdateOperationsInput | number | null
    DinhMucTonNhieuNhat?: NullableIntFieldUpdateOperationsInput | number | null
    TrongLuong?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    ViTri?: NullableStringFieldUpdateOperationsInput | string | null
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    NhomHangHoa?: TbNhomHangHoaUpdateOneRequiredWithoutHangHoaNestedInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUpdateManyWithoutHangHoaNestedInput
  }

  export type TbHangHoaUncheckedUpdateWithoutCacLinkAnhHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaNhomHangHoa?: StringFieldUpdateOperationsInput | string
    TenHangHoa?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaGocHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFieldUpdateOperationsInput | number
    DinhMucTonItNhat?: NullableIntFieldUpdateOperationsInput | number | null
    DinhMucTonNhieuNhat?: NullableIntFieldUpdateOperationsInput | number | null
    TrongLuong?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    ViTri?: NullableStringFieldUpdateOperationsInput | string | null
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUncheckedUpdateManyWithoutHangHoaNestedInput
  }

  export type TbPhongCreateWithoutCacLinkAnhPhongInput = {
    id?: string
    TenPhong: string
    GhiChu?: string | null
    Status?: $Enums.tbphong_Status
    StatusDatCho?: $Enums.tbdatcho_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    NhomKhuVucPhong: TbNhomKhuVucPhongCreateNestedOneWithoutPhongInput
    LoaiPhong: TbLoaiPhongCreateNestedOneWithoutPhongInput
    DatCho?: TbDatChoCreateNestedManyWithoutPhongInput
  }

  export type TbPhongUncheckedCreateWithoutCacLinkAnhPhongInput = {
    id?: string
    MaLoaiPhong: string
    MaNhomKhuVucPhong: string
    TenPhong: string
    GhiChu?: string | null
    Status?: $Enums.tbphong_Status
    StatusDatCho?: $Enums.tbdatcho_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    DatCho?: TbDatChoUncheckedCreateNestedManyWithoutPhongInput
  }

  export type TbPhongCreateOrConnectWithoutCacLinkAnhPhongInput = {
    where: TbPhongWhereUniqueInput
    create: XOR<TbPhongCreateWithoutCacLinkAnhPhongInput, TbPhongUncheckedCreateWithoutCacLinkAnhPhongInput>
  }

  export type TbPhongUpsertWithoutCacLinkAnhPhongInput = {
    update: XOR<TbPhongUpdateWithoutCacLinkAnhPhongInput, TbPhongUncheckedUpdateWithoutCacLinkAnhPhongInput>
    create: XOR<TbPhongCreateWithoutCacLinkAnhPhongInput, TbPhongUncheckedCreateWithoutCacLinkAnhPhongInput>
    where?: TbPhongWhereInput
  }

  export type TbPhongUpdateToOneWithWhereWithoutCacLinkAnhPhongInput = {
    where?: TbPhongWhereInput
    data: XOR<TbPhongUpdateWithoutCacLinkAnhPhongInput, TbPhongUncheckedUpdateWithoutCacLinkAnhPhongInput>
  }

  export type TbPhongUpdateWithoutCacLinkAnhPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NhomKhuVucPhong?: TbNhomKhuVucPhongUpdateOneRequiredWithoutPhongNestedInput
    LoaiPhong?: TbLoaiPhongUpdateOneRequiredWithoutPhongNestedInput
    DatCho?: TbDatChoUpdateManyWithoutPhongNestedInput
  }

  export type TbPhongUncheckedUpdateWithoutCacLinkAnhPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaLoaiPhong?: StringFieldUpdateOperationsInput | string
    MaNhomKhuVucPhong?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DatCho?: TbDatChoUncheckedUpdateManyWithoutPhongNestedInput
  }

  export type TbPhieuNhapCreateWithoutNhaCungCapInput = {
    id?: string
    CacKhoanChiPhiPhatSinhHangHoa?: Decimal | DecimalJsLike | number | string | null
    TongTienCanTra: Decimal | DecimalJsLike | number | string
    TienDaTra: Decimal | DecimalJsLike | number | string
    Status?: $Enums.tbphieunhap_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    KhachSan: TbKhachSanCreateNestedOneWithoutPhieuNhapInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapCreateNestedManyWithoutPhieuNhapInput
  }

  export type TbPhieuNhapUncheckedCreateWithoutNhaCungCapInput = {
    id?: string
    MaKhachSan: string
    CacKhoanChiPhiPhatSinhHangHoa?: Decimal | DecimalJsLike | number | string | null
    TongTienCanTra: Decimal | DecimalJsLike | number | string
    TienDaTra: Decimal | DecimalJsLike | number | string
    Status?: $Enums.tbphieunhap_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUncheckedCreateNestedManyWithoutPhieuNhapInput
  }

  export type TbPhieuNhapCreateOrConnectWithoutNhaCungCapInput = {
    where: TbPhieuNhapWhereUniqueInput
    create: XOR<TbPhieuNhapCreateWithoutNhaCungCapInput, TbPhieuNhapUncheckedCreateWithoutNhaCungCapInput>
  }

  export type TbPhieuNhapCreateManyNhaCungCapInputEnvelope = {
    data: TbPhieuNhapCreateManyNhaCungCapInput | TbPhieuNhapCreateManyNhaCungCapInput[]
    skipDuplicates?: boolean
  }

  export type TbPhieuNhapUpsertWithWhereUniqueWithoutNhaCungCapInput = {
    where: TbPhieuNhapWhereUniqueInput
    update: XOR<TbPhieuNhapUpdateWithoutNhaCungCapInput, TbPhieuNhapUncheckedUpdateWithoutNhaCungCapInput>
    create: XOR<TbPhieuNhapCreateWithoutNhaCungCapInput, TbPhieuNhapUncheckedCreateWithoutNhaCungCapInput>
  }

  export type TbPhieuNhapUpdateWithWhereUniqueWithoutNhaCungCapInput = {
    where: TbPhieuNhapWhereUniqueInput
    data: XOR<TbPhieuNhapUpdateWithoutNhaCungCapInput, TbPhieuNhapUncheckedUpdateWithoutNhaCungCapInput>
  }

  export type TbPhieuNhapUpdateManyWithWhereWithoutNhaCungCapInput = {
    where: TbPhieuNhapScalarWhereInput
    data: XOR<TbPhieuNhapUpdateManyMutationInput, TbPhieuNhapUncheckedUpdateManyWithoutNhaCungCapInput>
  }

  export type TbNhomKhuVucPhongCreateWithoutPhongInput = {
    id?: string
    TenNhomKhuVuc: string
    GhiChu?: string | null
    KhachSan: TbKhachSanCreateNestedOneWithoutNhomKhuVucPhongInput
  }

  export type TbNhomKhuVucPhongUncheckedCreateWithoutPhongInput = {
    id?: string
    MaKhachSan: string
    TenNhomKhuVuc: string
    GhiChu?: string | null
  }

  export type TbNhomKhuVucPhongCreateOrConnectWithoutPhongInput = {
    where: TbNhomKhuVucPhongWhereUniqueInput
    create: XOR<TbNhomKhuVucPhongCreateWithoutPhongInput, TbNhomKhuVucPhongUncheckedCreateWithoutPhongInput>
  }

  export type TbLoaiPhongCreateWithoutPhongInput = {
    id?: string
    MaKhachSan: string
    TenLoaiPhong: string
    GiaTheoGio: Decimal | DecimalJsLike | number | string
    GiaTheoNgay: Decimal | DecimalJsLike | number | string
    CacLinkAnhLoaiPhong?: TbCacLinkAnhLoaiPhongCreateNestedManyWithoutLoaiPhongInput
  }

  export type TbLoaiPhongUncheckedCreateWithoutPhongInput = {
    id?: string
    MaKhachSan: string
    TenLoaiPhong: string
    GiaTheoGio: Decimal | DecimalJsLike | number | string
    GiaTheoNgay: Decimal | DecimalJsLike | number | string
    CacLinkAnhLoaiPhong?: TbCacLinkAnhLoaiPhongUncheckedCreateNestedManyWithoutLoaiPhongInput
  }

  export type TbLoaiPhongCreateOrConnectWithoutPhongInput = {
    where: TbLoaiPhongWhereUniqueInput
    create: XOR<TbLoaiPhongCreateWithoutPhongInput, TbLoaiPhongUncheckedCreateWithoutPhongInput>
  }

  export type TbDatChoCreateWithoutPhongInput = {
    id?: string
    NgayDatCho?: Date | string
    NgayNhanPhong: Date | string
    NgayTraPhong: Date | string
    SLNguoiLonDiKem?: number
    SLTreEmDiKem?: number
    LoaiKhach?: $Enums.loaikhach_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoCreateNestedManyWithoutDatChoInput
    KhachHang: TbKhachHangCreateNestedOneWithoutDatChoInput
  }

  export type TbDatChoUncheckedCreateWithoutPhongInput = {
    id?: string
    MaKH: string
    NgayDatCho?: Date | string
    NgayNhanPhong: Date | string
    NgayTraPhong: Date | string
    SLNguoiLonDiKem?: number
    SLTreEmDiKem?: number
    LoaiKhach?: $Enums.loaikhach_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedCreateNestedManyWithoutDatChoInput
  }

  export type TbDatChoCreateOrConnectWithoutPhongInput = {
    where: TbDatChoWhereUniqueInput
    create: XOR<TbDatChoCreateWithoutPhongInput, TbDatChoUncheckedCreateWithoutPhongInput>
  }

  export type TbDatChoCreateManyPhongInputEnvelope = {
    data: TbDatChoCreateManyPhongInput | TbDatChoCreateManyPhongInput[]
    skipDuplicates?: boolean
  }

  export type TbCacLinkAnhPhongCreateWithoutPhongInput = {
    id?: string
    LinkAnh: string
  }

  export type TbCacLinkAnhPhongUncheckedCreateWithoutPhongInput = {
    id?: string
    LinkAnh: string
  }

  export type TbCacLinkAnhPhongCreateOrConnectWithoutPhongInput = {
    where: TbCacLinkAnhPhongWhereUniqueInput
    create: XOR<TbCacLinkAnhPhongCreateWithoutPhongInput, TbCacLinkAnhPhongUncheckedCreateWithoutPhongInput>
  }

  export type TbCacLinkAnhPhongCreateManyPhongInputEnvelope = {
    data: TbCacLinkAnhPhongCreateManyPhongInput | TbCacLinkAnhPhongCreateManyPhongInput[]
    skipDuplicates?: boolean
  }

  export type TbNhomKhuVucPhongUpsertWithoutPhongInput = {
    update: XOR<TbNhomKhuVucPhongUpdateWithoutPhongInput, TbNhomKhuVucPhongUncheckedUpdateWithoutPhongInput>
    create: XOR<TbNhomKhuVucPhongCreateWithoutPhongInput, TbNhomKhuVucPhongUncheckedCreateWithoutPhongInput>
    where?: TbNhomKhuVucPhongWhereInput
  }

  export type TbNhomKhuVucPhongUpdateToOneWithWhereWithoutPhongInput = {
    where?: TbNhomKhuVucPhongWhereInput
    data: XOR<TbNhomKhuVucPhongUpdateWithoutPhongInput, TbNhomKhuVucPhongUncheckedUpdateWithoutPhongInput>
  }

  export type TbNhomKhuVucPhongUpdateWithoutPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomKhuVuc?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    KhachSan?: TbKhachSanUpdateOneRequiredWithoutNhomKhuVucPhongNestedInput
  }

  export type TbNhomKhuVucPhongUncheckedUpdateWithoutPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenNhomKhuVuc?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TbLoaiPhongUpsertWithoutPhongInput = {
    update: XOR<TbLoaiPhongUpdateWithoutPhongInput, TbLoaiPhongUncheckedUpdateWithoutPhongInput>
    create: XOR<TbLoaiPhongCreateWithoutPhongInput, TbLoaiPhongUncheckedCreateWithoutPhongInput>
    where?: TbLoaiPhongWhereInput
  }

  export type TbLoaiPhongUpdateToOneWithWhereWithoutPhongInput = {
    where?: TbLoaiPhongWhereInput
    data: XOR<TbLoaiPhongUpdateWithoutPhongInput, TbLoaiPhongUncheckedUpdateWithoutPhongInput>
  }

  export type TbLoaiPhongUpdateWithoutPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenLoaiPhong?: StringFieldUpdateOperationsInput | string
    GiaTheoGio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaTheoNgay?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    CacLinkAnhLoaiPhong?: TbCacLinkAnhLoaiPhongUpdateManyWithoutLoaiPhongNestedInput
  }

  export type TbLoaiPhongUncheckedUpdateWithoutPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TenLoaiPhong?: StringFieldUpdateOperationsInput | string
    GiaTheoGio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaTheoNgay?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    CacLinkAnhLoaiPhong?: TbCacLinkAnhLoaiPhongUncheckedUpdateManyWithoutLoaiPhongNestedInput
  }

  export type TbDatChoUpsertWithWhereUniqueWithoutPhongInput = {
    where: TbDatChoWhereUniqueInput
    update: XOR<TbDatChoUpdateWithoutPhongInput, TbDatChoUncheckedUpdateWithoutPhongInput>
    create: XOR<TbDatChoCreateWithoutPhongInput, TbDatChoUncheckedCreateWithoutPhongInput>
  }

  export type TbDatChoUpdateWithWhereUniqueWithoutPhongInput = {
    where: TbDatChoWhereUniqueInput
    data: XOR<TbDatChoUpdateWithoutPhongInput, TbDatChoUncheckedUpdateWithoutPhongInput>
  }

  export type TbDatChoUpdateManyWithWhereWithoutPhongInput = {
    where: TbDatChoScalarWhereInput
    data: XOR<TbDatChoUpdateManyMutationInput, TbDatChoUncheckedUpdateManyWithoutPhongInput>
  }

  export type TbCacLinkAnhPhongUpsertWithWhereUniqueWithoutPhongInput = {
    where: TbCacLinkAnhPhongWhereUniqueInput
    update: XOR<TbCacLinkAnhPhongUpdateWithoutPhongInput, TbCacLinkAnhPhongUncheckedUpdateWithoutPhongInput>
    create: XOR<TbCacLinkAnhPhongCreateWithoutPhongInput, TbCacLinkAnhPhongUncheckedCreateWithoutPhongInput>
  }

  export type TbCacLinkAnhPhongUpdateWithWhereUniqueWithoutPhongInput = {
    where: TbCacLinkAnhPhongWhereUniqueInput
    data: XOR<TbCacLinkAnhPhongUpdateWithoutPhongInput, TbCacLinkAnhPhongUncheckedUpdateWithoutPhongInput>
  }

  export type TbCacLinkAnhPhongUpdateManyWithWhereWithoutPhongInput = {
    where: TbCacLinkAnhPhongScalarWhereInput
    data: XOR<TbCacLinkAnhPhongUpdateManyMutationInput, TbCacLinkAnhPhongUncheckedUpdateManyWithoutPhongInput>
  }

  export type TbCacLinkAnhPhongScalarWhereInput = {
    AND?: TbCacLinkAnhPhongScalarWhereInput | TbCacLinkAnhPhongScalarWhereInput[]
    OR?: TbCacLinkAnhPhongScalarWhereInput[]
    NOT?: TbCacLinkAnhPhongScalarWhereInput | TbCacLinkAnhPhongScalarWhereInput[]
    id?: StringFilter<"TbCacLinkAnhPhong"> | string
    MaPhong?: StringFilter<"TbCacLinkAnhPhong"> | string
    LinkAnh?: StringFilter<"TbCacLinkAnhPhong"> | string
  }

  export type TbPhongCreateWithoutNhomKhuVucPhongInput = {
    id?: string
    TenPhong: string
    GhiChu?: string | null
    Status?: $Enums.tbphong_Status
    StatusDatCho?: $Enums.tbdatcho_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    LoaiPhong: TbLoaiPhongCreateNestedOneWithoutPhongInput
    DatCho?: TbDatChoCreateNestedManyWithoutPhongInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongCreateNestedManyWithoutPhongInput
  }

  export type TbPhongUncheckedCreateWithoutNhomKhuVucPhongInput = {
    id?: string
    MaLoaiPhong: string
    TenPhong: string
    GhiChu?: string | null
    Status?: $Enums.tbphong_Status
    StatusDatCho?: $Enums.tbdatcho_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    DatCho?: TbDatChoUncheckedCreateNestedManyWithoutPhongInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongUncheckedCreateNestedManyWithoutPhongInput
  }

  export type TbPhongCreateOrConnectWithoutNhomKhuVucPhongInput = {
    where: TbPhongWhereUniqueInput
    create: XOR<TbPhongCreateWithoutNhomKhuVucPhongInput, TbPhongUncheckedCreateWithoutNhomKhuVucPhongInput>
  }

  export type TbPhongCreateManyNhomKhuVucPhongInputEnvelope = {
    data: TbPhongCreateManyNhomKhuVucPhongInput | TbPhongCreateManyNhomKhuVucPhongInput[]
    skipDuplicates?: boolean
  }

  export type TbKhachSanCreateWithoutNhomKhuVucPhongInput = {
    id?: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserCreateNestedManyWithoutKhachSanInput
    HoaDon?: TbHoaDonCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuCreateNestedManyWithoutKhachSanInput
    ChiNhanh: TbChiNhanhCreateNestedOneWithoutKhachSanInput
  }

  export type TbKhachSanUncheckedCreateWithoutNhomKhuVucPhongInput = {
    id?: string
    MaChiNhanh: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    TaiKhoanSub?: SubUserUncheckedCreateNestedManyWithoutKhachSanInput
    HoaDon?: TbHoaDonUncheckedCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapUncheckedCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaUncheckedCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuUncheckedCreateNestedManyWithoutKhachSanInput
  }

  export type TbKhachSanCreateOrConnectWithoutNhomKhuVucPhongInput = {
    where: TbKhachSanWhereUniqueInput
    create: XOR<TbKhachSanCreateWithoutNhomKhuVucPhongInput, TbKhachSanUncheckedCreateWithoutNhomKhuVucPhongInput>
  }

  export type TbPhongUpsertWithWhereUniqueWithoutNhomKhuVucPhongInput = {
    where: TbPhongWhereUniqueInput
    update: XOR<TbPhongUpdateWithoutNhomKhuVucPhongInput, TbPhongUncheckedUpdateWithoutNhomKhuVucPhongInput>
    create: XOR<TbPhongCreateWithoutNhomKhuVucPhongInput, TbPhongUncheckedCreateWithoutNhomKhuVucPhongInput>
  }

  export type TbPhongUpdateWithWhereUniqueWithoutNhomKhuVucPhongInput = {
    where: TbPhongWhereUniqueInput
    data: XOR<TbPhongUpdateWithoutNhomKhuVucPhongInput, TbPhongUncheckedUpdateWithoutNhomKhuVucPhongInput>
  }

  export type TbPhongUpdateManyWithWhereWithoutNhomKhuVucPhongInput = {
    where: TbPhongScalarWhereInput
    data: XOR<TbPhongUpdateManyMutationInput, TbPhongUncheckedUpdateManyWithoutNhomKhuVucPhongInput>
  }

  export type TbKhachSanUpsertWithoutNhomKhuVucPhongInput = {
    update: XOR<TbKhachSanUpdateWithoutNhomKhuVucPhongInput, TbKhachSanUncheckedUpdateWithoutNhomKhuVucPhongInput>
    create: XOR<TbKhachSanCreateWithoutNhomKhuVucPhongInput, TbKhachSanUncheckedCreateWithoutNhomKhuVucPhongInput>
    where?: TbKhachSanWhereInput
  }

  export type TbKhachSanUpdateToOneWithWhereWithoutNhomKhuVucPhongInput = {
    where?: TbKhachSanWhereInput
    data: XOR<TbKhachSanUpdateWithoutNhomKhuVucPhongInput, TbKhachSanUncheckedUpdateWithoutNhomKhuVucPhongInput>
  }

  export type TbKhachSanUpdateWithoutNhomKhuVucPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUpdateManyWithoutKhachSanNestedInput
    HoaDon?: TbHoaDonUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUpdateManyWithoutKhachSanNestedInput
    ChiNhanh?: TbChiNhanhUpdateOneRequiredWithoutKhachSanNestedInput
  }

  export type TbKhachSanUncheckedUpdateWithoutNhomKhuVucPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaChiNhanh?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUncheckedUpdateManyWithoutKhachSanNestedInput
    HoaDon?: TbHoaDonUncheckedUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUncheckedUpdateManyWithoutKhachSanNestedInput
  }

  export type AvatarsCreateWithoutUserInput = {
    id?: string
    public_id: string
    url: string
  }

  export type AvatarsUncheckedCreateWithoutUserInput = {
    id?: string
    public_id: string
    url: string
  }

  export type AvatarsCreateOrConnectWithoutUserInput = {
    where: AvatarsWhereUniqueInput
    create: XOR<AvatarsCreateWithoutUserInput, AvatarsUncheckedCreateWithoutUserInput>
  }

  export type TbChiNhanhCreateWithoutTaiKhoanAdminInput = {
    id?: string
    TenChiNhanh: string
    SDTChiNhanh?: string | null
    DiaChiChiNhanh?: string | null
    KhachSan?: TbKhachSanCreateNestedManyWithoutChiNhanhInput
  }

  export type TbChiNhanhUncheckedCreateWithoutTaiKhoanAdminInput = {
    id?: string
    TenChiNhanh: string
    SDTChiNhanh?: string | null
    DiaChiChiNhanh?: string | null
    KhachSan?: TbKhachSanUncheckedCreateNestedManyWithoutChiNhanhInput
  }

  export type TbChiNhanhCreateOrConnectWithoutTaiKhoanAdminInput = {
    where: TbChiNhanhWhereUniqueInput
    create: XOR<TbChiNhanhCreateWithoutTaiKhoanAdminInput, TbChiNhanhUncheckedCreateWithoutTaiKhoanAdminInput>
  }

  export type TbChiNhanhCreateManyTaiKhoanAdminInputEnvelope = {
    data: TbChiNhanhCreateManyTaiKhoanAdminInput | TbChiNhanhCreateManyTaiKhoanAdminInput[]
    skipDuplicates?: boolean
  }

  export type AvatarsUpsertWithoutUserInput = {
    update: XOR<AvatarsUpdateWithoutUserInput, AvatarsUncheckedUpdateWithoutUserInput>
    create: XOR<AvatarsCreateWithoutUserInput, AvatarsUncheckedCreateWithoutUserInput>
    where?: AvatarsWhereInput
  }

  export type AvatarsUpdateToOneWithWhereWithoutUserInput = {
    where?: AvatarsWhereInput
    data: XOR<AvatarsUpdateWithoutUserInput, AvatarsUncheckedUpdateWithoutUserInput>
  }

  export type AvatarsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    public_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type AvatarsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    public_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type TbChiNhanhUpsertWithWhereUniqueWithoutTaiKhoanAdminInput = {
    where: TbChiNhanhWhereUniqueInput
    update: XOR<TbChiNhanhUpdateWithoutTaiKhoanAdminInput, TbChiNhanhUncheckedUpdateWithoutTaiKhoanAdminInput>
    create: XOR<TbChiNhanhCreateWithoutTaiKhoanAdminInput, TbChiNhanhUncheckedCreateWithoutTaiKhoanAdminInput>
  }

  export type TbChiNhanhUpdateWithWhereUniqueWithoutTaiKhoanAdminInput = {
    where: TbChiNhanhWhereUniqueInput
    data: XOR<TbChiNhanhUpdateWithoutTaiKhoanAdminInput, TbChiNhanhUncheckedUpdateWithoutTaiKhoanAdminInput>
  }

  export type TbChiNhanhUpdateManyWithWhereWithoutTaiKhoanAdminInput = {
    where: TbChiNhanhScalarWhereInput
    data: XOR<TbChiNhanhUpdateManyMutationInput, TbChiNhanhUncheckedUpdateManyWithoutTaiKhoanAdminInput>
  }

  export type TbChiNhanhScalarWhereInput = {
    AND?: TbChiNhanhScalarWhereInput | TbChiNhanhScalarWhereInput[]
    OR?: TbChiNhanhScalarWhereInput[]
    NOT?: TbChiNhanhScalarWhereInput | TbChiNhanhScalarWhereInput[]
    id?: StringFilter<"TbChiNhanh"> | string
    MaAdmin?: StringFilter<"TbChiNhanh"> | string
    TenChiNhanh?: StringFilter<"TbChiNhanh"> | string
    SDTChiNhanh?: StringNullableFilter<"TbChiNhanh"> | string | null
    DiaChiChiNhanh?: StringNullableFilter<"TbChiNhanh"> | string | null
  }

  export type SubAvatarsCreateWithoutSub_userInput = {
    id?: string
    public_id: string
    url: string
  }

  export type SubAvatarsUncheckedCreateWithoutSub_userInput = {
    id?: string
    public_id: string
    url: string
  }

  export type SubAvatarsCreateOrConnectWithoutSub_userInput = {
    where: SubAvatarsWhereUniqueInput
    create: XOR<SubAvatarsCreateWithoutSub_userInput, SubAvatarsUncheckedCreateWithoutSub_userInput>
  }

  export type TbHoaDonCreateWithoutTaiKhoanSubInput = {
    id?: string
    TongHoaDon?: Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: Date | string | null
    GhiChu?: string | null
    Status?: $Enums.tbhoadon_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    PhuongThucThanhToan?: $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoCreateNestedManyWithoutHoaDonInput
    KhachSan: TbKhachSanCreateNestedOneWithoutHoaDonInput
  }

  export type TbHoaDonUncheckedCreateWithoutTaiKhoanSubInput = {
    id?: string
    MaKhachSan: string
    TongHoaDon?: Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: Date | string | null
    GhiChu?: string | null
    Status?: $Enums.tbhoadon_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    PhuongThucThanhToan?: $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedCreateNestedManyWithoutHoaDonInput
  }

  export type TbHoaDonCreateOrConnectWithoutTaiKhoanSubInput = {
    where: TbHoaDonWhereUniqueInput
    create: XOR<TbHoaDonCreateWithoutTaiKhoanSubInput, TbHoaDonUncheckedCreateWithoutTaiKhoanSubInput>
  }

  export type TbHoaDonCreateManyTaiKhoanSubInputEnvelope = {
    data: TbHoaDonCreateManyTaiKhoanSubInput | TbHoaDonCreateManyTaiKhoanSubInput[]
    skipDuplicates?: boolean
  }

  export type TbKhachSanCreateWithoutTaiKhoanSubInput = {
    id?: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    HoaDon?: TbHoaDonCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuCreateNestedManyWithoutKhachSanInput
    ChiNhanh: TbChiNhanhCreateNestedOneWithoutKhachSanInput
  }

  export type TbKhachSanUncheckedCreateWithoutTaiKhoanSubInput = {
    id?: string
    MaChiNhanh: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
    HoaDon?: TbHoaDonUncheckedCreateNestedManyWithoutKhachSanInput
    PhieuNhap?: TbPhieuNhapUncheckedCreateNestedManyWithoutKhachSanInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedCreateNestedManyWithoutKhachSanInput
    NhomHangHoa?: TbNhomHangHoaUncheckedCreateNestedManyWithoutKhachSanInput
    NhomDichVu?: TbNhomDichVuUncheckedCreateNestedManyWithoutKhachSanInput
  }

  export type TbKhachSanCreateOrConnectWithoutTaiKhoanSubInput = {
    where: TbKhachSanWhereUniqueInput
    create: XOR<TbKhachSanCreateWithoutTaiKhoanSubInput, TbKhachSanUncheckedCreateWithoutTaiKhoanSubInput>
  }

  export type SubAvatarsUpsertWithoutSub_userInput = {
    update: XOR<SubAvatarsUpdateWithoutSub_userInput, SubAvatarsUncheckedUpdateWithoutSub_userInput>
    create: XOR<SubAvatarsCreateWithoutSub_userInput, SubAvatarsUncheckedCreateWithoutSub_userInput>
    where?: SubAvatarsWhereInput
  }

  export type SubAvatarsUpdateToOneWithWhereWithoutSub_userInput = {
    where?: SubAvatarsWhereInput
    data: XOR<SubAvatarsUpdateWithoutSub_userInput, SubAvatarsUncheckedUpdateWithoutSub_userInput>
  }

  export type SubAvatarsUpdateWithoutSub_userInput = {
    id?: StringFieldUpdateOperationsInput | string
    public_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type SubAvatarsUncheckedUpdateWithoutSub_userInput = {
    id?: StringFieldUpdateOperationsInput | string
    public_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type TbHoaDonUpsertWithWhereUniqueWithoutTaiKhoanSubInput = {
    where: TbHoaDonWhereUniqueInput
    update: XOR<TbHoaDonUpdateWithoutTaiKhoanSubInput, TbHoaDonUncheckedUpdateWithoutTaiKhoanSubInput>
    create: XOR<TbHoaDonCreateWithoutTaiKhoanSubInput, TbHoaDonUncheckedCreateWithoutTaiKhoanSubInput>
  }

  export type TbHoaDonUpdateWithWhereUniqueWithoutTaiKhoanSubInput = {
    where: TbHoaDonWhereUniqueInput
    data: XOR<TbHoaDonUpdateWithoutTaiKhoanSubInput, TbHoaDonUncheckedUpdateWithoutTaiKhoanSubInput>
  }

  export type TbHoaDonUpdateManyWithWhereWithoutTaiKhoanSubInput = {
    where: TbHoaDonScalarWhereInput
    data: XOR<TbHoaDonUpdateManyMutationInput, TbHoaDonUncheckedUpdateManyWithoutTaiKhoanSubInput>
  }

  export type TbKhachSanUpsertWithoutTaiKhoanSubInput = {
    update: XOR<TbKhachSanUpdateWithoutTaiKhoanSubInput, TbKhachSanUncheckedUpdateWithoutTaiKhoanSubInput>
    create: XOR<TbKhachSanCreateWithoutTaiKhoanSubInput, TbKhachSanUncheckedCreateWithoutTaiKhoanSubInput>
    where?: TbKhachSanWhereInput
  }

  export type TbKhachSanUpdateToOneWithWhereWithoutTaiKhoanSubInput = {
    where?: TbKhachSanWhereInput
    data: XOR<TbKhachSanUpdateWithoutTaiKhoanSubInput, TbKhachSanUncheckedUpdateWithoutTaiKhoanSubInput>
  }

  export type TbKhachSanUpdateWithoutTaiKhoanSubInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    HoaDon?: TbHoaDonUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUpdateManyWithoutKhachSanNestedInput
    ChiNhanh?: TbChiNhanhUpdateOneRequiredWithoutKhachSanNestedInput
  }

  export type TbKhachSanUncheckedUpdateWithoutTaiKhoanSubInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaChiNhanh?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    HoaDon?: TbHoaDonUncheckedUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUncheckedUpdateManyWithoutKhachSanNestedInput
  }

  export type UserCreateWithoutAvatarInput = {
    id?: string
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.tbtaikhoan_VaiTro
    ChiNhanh?: TbChiNhanhCreateNestedManyWithoutTaiKhoanAdminInput
  }

  export type UserUncheckedCreateWithoutAvatarInput = {
    id?: string
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.tbtaikhoan_VaiTro
    ChiNhanh?: TbChiNhanhUncheckedCreateNestedManyWithoutTaiKhoanAdminInput
  }

  export type UserCreateOrConnectWithoutAvatarInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAvatarInput, UserUncheckedCreateWithoutAvatarInput>
  }

  export type UserUpsertWithoutAvatarInput = {
    update: XOR<UserUpdateWithoutAvatarInput, UserUncheckedUpdateWithoutAvatarInput>
    create: XOR<UserCreateWithoutAvatarInput, UserUncheckedCreateWithoutAvatarInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAvatarInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAvatarInput, UserUncheckedUpdateWithoutAvatarInput>
  }

  export type UserUpdateWithoutAvatarInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoan_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoan_VaiTro
    ChiNhanh?: TbChiNhanhUpdateManyWithoutTaiKhoanAdminNestedInput
  }

  export type UserUncheckedUpdateWithoutAvatarInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoan_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoan_VaiTro
    ChiNhanh?: TbChiNhanhUncheckedUpdateManyWithoutTaiKhoanAdminNestedInput
  }

  export type SubUserCreateWithoutSubAvatarInput = {
    id?: string
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role: $Enums.tbtaikhoancon_VaiTro
    HoaDon?: TbHoaDonCreateNestedManyWithoutTaiKhoanSubInput
    KhachSan?: TbKhachSanCreateNestedOneWithoutTaiKhoanSubInput
  }

  export type SubUserUncheckedCreateWithoutSubAvatarInput = {
    id?: string
    MaKhachSan?: string | null
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role: $Enums.tbtaikhoancon_VaiTro
    HoaDon?: TbHoaDonUncheckedCreateNestedManyWithoutTaiKhoanSubInput
  }

  export type SubUserCreateOrConnectWithoutSubAvatarInput = {
    where: SubUserWhereUniqueInput
    create: XOR<SubUserCreateWithoutSubAvatarInput, SubUserUncheckedCreateWithoutSubAvatarInput>
  }

  export type SubUserUpsertWithoutSubAvatarInput = {
    update: XOR<SubUserUpdateWithoutSubAvatarInput, SubUserUncheckedUpdateWithoutSubAvatarInput>
    create: XOR<SubUserCreateWithoutSubAvatarInput, SubUserUncheckedCreateWithoutSubAvatarInput>
    where?: SubUserWhereInput
  }

  export type SubUserUpdateToOneWithWhereWithoutSubAvatarInput = {
    where?: SubUserWhereInput
    data: XOR<SubUserUpdateWithoutSubAvatarInput, SubUserUncheckedUpdateWithoutSubAvatarInput>
  }

  export type SubUserUpdateWithoutSubAvatarInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoancon_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoancon_VaiTro
    HoaDon?: TbHoaDonUpdateManyWithoutTaiKhoanSubNestedInput
    KhachSan?: TbKhachSanUpdateOneWithoutTaiKhoanSubNestedInput
  }

  export type SubUserUncheckedUpdateWithoutSubAvatarInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoancon_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoancon_VaiTro
    HoaDon?: TbHoaDonUncheckedUpdateManyWithoutTaiKhoanSubNestedInput
  }

  export type TbKhachSanCreateManyChiNhanhInput = {
    id?: string
    TenKhachSan: string
    DiaChiKhachSan?: string | null
    SDTKhachSan?: string | null
    EmailKhachSan?: string | null
  }

  export type TbKhachSanUpdateWithoutChiNhanhInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUpdateManyWithoutKhachSanNestedInput
    HoaDon?: TbHoaDonUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUpdateManyWithoutKhachSanNestedInput
  }

  export type TbKhachSanUncheckedUpdateWithoutChiNhanhInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    TaiKhoanSub?: SubUserUncheckedUpdateManyWithoutKhachSanNestedInput
    HoaDon?: TbHoaDonUncheckedUpdateManyWithoutKhachSanNestedInput
    PhieuNhap?: TbPhieuNhapUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomKhuVucPhong?: TbNhomKhuVucPhongUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomHangHoa?: TbNhomHangHoaUncheckedUpdateManyWithoutKhachSanNestedInput
    NhomDichVu?: TbNhomDichVuUncheckedUpdateManyWithoutKhachSanNestedInput
  }

  export type TbKhachSanUncheckedUpdateManyWithoutChiNhanhInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenKhachSan?: StringFieldUpdateOperationsInput | string
    DiaChiKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    SDTKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
    EmailKhachSan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TbChiTietDichVuDatChoCreateManyDatChoInput = {
    id?: string
    MaDichVu?: string | null
    MaHoaDon?: string | null
    MoTa?: string | null
    createAt?: Date | string
  }

  export type TbChiTietDichVuDatChoUpdateWithoutDatChoInput = {
    id?: StringFieldUpdateOperationsInput | string
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DichVu?: TbDichVuUpdateOneWithoutChiTietDichVuDatChoNestedInput
    HoaDon?: TbHoaDonUpdateOneWithoutChiTietDichVuDatChoNestedInput
  }

  export type TbChiTietDichVuDatChoUncheckedUpdateWithoutDatChoInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    MaHoaDon?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbChiTietDichVuDatChoUncheckedUpdateManyWithoutDatChoInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    MaHoaDon?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbChiTietDichVuDatChoCreateManyDichVuInput = {
    id?: string
    MaDatCho: string
    MaHoaDon?: string | null
    MoTa?: string | null
    createAt?: Date | string
  }

  export type TbCacLinkAnhDichVuCreateManyDichVuInput = {
    id?: string
    LinkAnh: string
  }

  export type TbChiTietDichVuDatChoUpdateWithoutDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DatCho?: TbDatChoUpdateOneRequiredWithoutChiTietDichVuDatChoNestedInput
    HoaDon?: TbHoaDonUpdateOneWithoutChiTietDichVuDatChoNestedInput
  }

  export type TbChiTietDichVuDatChoUncheckedUpdateWithoutDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaDatCho?: StringFieldUpdateOperationsInput | string
    MaHoaDon?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbChiTietDichVuDatChoUncheckedUpdateManyWithoutDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaDatCho?: StringFieldUpdateOperationsInput | string
    MaHoaDon?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbCacLinkAnhDichVuUpdateWithoutDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhDichVuUncheckedUpdateWithoutDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhDichVuUncheckedUpdateManyWithoutDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbDichVuCreateManyNhomDichVuInput = {
    id?: string
    TenDichVu: string
    DonViTinh?: string | null
    GiaVon: Decimal | DecimalJsLike | number | string
    GiaBan: Decimal | DecimalJsLike | number | string
    ThoiLuong: number
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbDichVuUpdateWithoutNhomDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenDichVu?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaVon?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFieldUpdateOperationsInput | number
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUpdateManyWithoutDichVuNestedInput
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuUpdateManyWithoutDichVuNestedInput
  }

  export type TbDichVuUncheckedUpdateWithoutNhomDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenDichVu?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaVon?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFieldUpdateOperationsInput | number
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedUpdateManyWithoutDichVuNestedInput
    CacLinkAnhDichVu?: TbCacLinkAnhDichVuUncheckedUpdateManyWithoutDichVuNestedInput
  }

  export type TbDichVuUncheckedUpdateManyWithoutNhomDichVuInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenDichVu?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaVon?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ThoiLuong?: IntFieldUpdateOperationsInput | number
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbCacLinkAnhHangHoaCreateManyHangHoaInput = {
    id?: string
    LinkAnh: string
  }

  export type TbChiTietNoiDungNhapCreateManyHangHoaInput = {
    id?: string
    MaPhieuNhap: string
    ThanhTien: Decimal | DecimalJsLike | number | string
    SLNhap: number
    GiamGia?: Decimal | DecimalJsLike | number | string | null
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbCacLinkAnhHangHoaUpdateWithoutHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhHangHoaUncheckedUpdateWithoutHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhHangHoaUncheckedUpdateManyWithoutHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbChiTietNoiDungNhapUpdateWithoutHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    ThanhTien?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLNhap?: IntFieldUpdateOperationsInput | number
    GiamGia?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PhieuNhap?: TbPhieuNhapUpdateOneRequiredWithoutChiTietNoiDungNhapNestedInput
  }

  export type TbChiTietNoiDungNhapUncheckedUpdateWithoutHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaPhieuNhap?: StringFieldUpdateOperationsInput | string
    ThanhTien?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLNhap?: IntFieldUpdateOperationsInput | number
    GiamGia?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbChiTietNoiDungNhapUncheckedUpdateManyWithoutHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaPhieuNhap?: StringFieldUpdateOperationsInput | string
    ThanhTien?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLNhap?: IntFieldUpdateOperationsInput | number
    GiamGia?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbChiTietNoiDungNhapCreateManyPhieuNhapInput = {
    id?: string
    MaHangHoa: string
    ThanhTien: Decimal | DecimalJsLike | number | string
    SLNhap: number
    GiamGia?: Decimal | DecimalJsLike | number | string | null
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbChiTietNoiDungNhapUpdateWithoutPhieuNhapInput = {
    id?: StringFieldUpdateOperationsInput | string
    ThanhTien?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLNhap?: IntFieldUpdateOperationsInput | number
    GiamGia?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    HangHoa?: TbHangHoaUpdateOneRequiredWithoutChiTietNoiDungNhapNestedInput
  }

  export type TbChiTietNoiDungNhapUncheckedUpdateWithoutPhieuNhapInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaHangHoa?: StringFieldUpdateOperationsInput | string
    ThanhTien?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLNhap?: IntFieldUpdateOperationsInput | number
    GiamGia?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbChiTietNoiDungNhapUncheckedUpdateManyWithoutPhieuNhapInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaHangHoa?: StringFieldUpdateOperationsInput | string
    ThanhTien?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLNhap?: IntFieldUpdateOperationsInput | number
    GiamGia?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbHangHoaCreateManyNhomHangHoaInput = {
    id?: string
    TenHangHoa: string
    DonViTinh?: string | null
    GiaGocHangHoa: Decimal | DecimalJsLike | number | string
    GiaBanHangHoa: Decimal | DecimalJsLike | number | string
    SLTonKho: number
    DinhMucTonItNhat?: number | null
    DinhMucTonNhieuNhat?: number | null
    TrongLuong?: string | null
    MoTa?: string | null
    GhiChu?: string | null
    ViTri?: string | null
    StatusThongBao?: $Enums.thongbao_Status
  }

  export type TbHangHoaUpdateWithoutNhomHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenHangHoa?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaGocHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFieldUpdateOperationsInput | number
    DinhMucTonItNhat?: NullableIntFieldUpdateOperationsInput | number | null
    DinhMucTonNhieuNhat?: NullableIntFieldUpdateOperationsInput | number | null
    TrongLuong?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    ViTri?: NullableStringFieldUpdateOperationsInput | string | null
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaUpdateManyWithoutHangHoaNestedInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUpdateManyWithoutHangHoaNestedInput
  }

  export type TbHangHoaUncheckedUpdateWithoutNhomHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenHangHoa?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaGocHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFieldUpdateOperationsInput | number
    DinhMucTonItNhat?: NullableIntFieldUpdateOperationsInput | number | null
    DinhMucTonNhieuNhat?: NullableIntFieldUpdateOperationsInput | number | null
    TrongLuong?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    ViTri?: NullableStringFieldUpdateOperationsInput | string | null
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    CacLinkAnhHangHoa?: TbCacLinkAnhHangHoaUncheckedUpdateManyWithoutHangHoaNestedInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUncheckedUpdateManyWithoutHangHoaNestedInput
  }

  export type TbHangHoaUncheckedUpdateManyWithoutNhomHangHoaInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenHangHoa?: StringFieldUpdateOperationsInput | string
    DonViTinh?: NullableStringFieldUpdateOperationsInput | string | null
    GiaGocHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    GiaBanHangHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    SLTonKho?: IntFieldUpdateOperationsInput | number
    DinhMucTonItNhat?: NullableIntFieldUpdateOperationsInput | number | null
    DinhMucTonNhieuNhat?: NullableIntFieldUpdateOperationsInput | number | null
    TrongLuong?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    ViTri?: NullableStringFieldUpdateOperationsInput | string | null
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
  }

  export type TbChiTietDichVuDatChoCreateManyHoaDonInput = {
    id?: string
    MaDatCho: string
    MaDichVu?: string | null
    MoTa?: string | null
    createAt?: Date | string
  }

  export type TbChiTietDichVuDatChoUpdateWithoutHoaDonInput = {
    id?: StringFieldUpdateOperationsInput | string
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DatCho?: TbDatChoUpdateOneRequiredWithoutChiTietDichVuDatChoNestedInput
    DichVu?: TbDichVuUpdateOneWithoutChiTietDichVuDatChoNestedInput
  }

  export type TbChiTietDichVuDatChoUncheckedUpdateWithoutHoaDonInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaDatCho?: StringFieldUpdateOperationsInput | string
    MaDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbChiTietDichVuDatChoUncheckedUpdateManyWithoutHoaDonInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaDatCho?: StringFieldUpdateOperationsInput | string
    MaDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    MoTa?: NullableStringFieldUpdateOperationsInput | string | null
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbDatChoCreateManyKhachHangInput = {
    id?: string
    MaPhong: string
    NgayDatCho?: Date | string
    NgayNhanPhong: Date | string
    NgayTraPhong: Date | string
    SLNguoiLonDiKem?: number
    SLTreEmDiKem?: number
    LoaiKhach?: $Enums.loaikhach_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbDatChoUpdateWithoutKhachHangInput = {
    id?: StringFieldUpdateOperationsInput | string
    NgayDatCho?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayNhanPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayTraPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    SLNguoiLonDiKem?: IntFieldUpdateOperationsInput | number
    SLTreEmDiKem?: IntFieldUpdateOperationsInput | number
    LoaiKhach?: Enumloaikhach_StatusFieldUpdateOperationsInput | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUpdateManyWithoutDatChoNestedInput
    Phong?: TbPhongUpdateOneRequiredWithoutDatChoNestedInput
  }

  export type TbDatChoUncheckedUpdateWithoutKhachHangInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaPhong?: StringFieldUpdateOperationsInput | string
    NgayDatCho?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayNhanPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayTraPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    SLNguoiLonDiKem?: IntFieldUpdateOperationsInput | number
    SLTreEmDiKem?: IntFieldUpdateOperationsInput | number
    LoaiKhach?: Enumloaikhach_StatusFieldUpdateOperationsInput | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedUpdateManyWithoutDatChoNestedInput
  }

  export type TbDatChoUncheckedUpdateManyWithoutKhachHangInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaPhong?: StringFieldUpdateOperationsInput | string
    NgayDatCho?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayNhanPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayTraPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    SLNguoiLonDiKem?: IntFieldUpdateOperationsInput | number
    SLTreEmDiKem?: IntFieldUpdateOperationsInput | number
    LoaiKhach?: Enumloaikhach_StatusFieldUpdateOperationsInput | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubUserCreateManyKhachSanInput = {
    id?: string
    name: string
    phone_number?: number | null
    address?: string | null
    password: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role: $Enums.tbtaikhoancon_VaiTro
  }

  export type TbHoaDonCreateManyKhachSanInput = {
    id?: string
    MaTaiKhoanSub?: string | null
    TongHoaDon?: Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: Date | string | null
    GhiChu?: string | null
    Status?: $Enums.tbhoadon_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    PhuongThucThanhToan?: $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type TbPhieuNhapCreateManyKhachSanInput = {
    id?: string
    MaNhaCungCap?: string | null
    CacKhoanChiPhiPhatSinhHangHoa?: Decimal | DecimalJsLike | number | string | null
    TongTienCanTra: Decimal | DecimalJsLike | number | string
    TienDaTra: Decimal | DecimalJsLike | number | string
    Status?: $Enums.tbphieunhap_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbNhomKhuVucPhongCreateManyKhachSanInput = {
    id?: string
    TenNhomKhuVuc: string
    GhiChu?: string | null
  }

  export type TbNhomHangHoaCreateManyKhachSanInput = {
    id?: string
    TenNhomHangHoa: string
  }

  export type TbNhomDichVuCreateManyKhachSanInput = {
    id?: string
    TenNhomDichVu: string
  }

  export type SubUserUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoancon_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoancon_VaiTro
    subAvatar?: SubAvatarsUpdateOneWithoutSub_userNestedInput
    HoaDon?: TbHoaDonUpdateManyWithoutTaiKhoanSubNestedInput
  }

  export type SubUserUncheckedUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoancon_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoancon_VaiTro
    subAvatar?: SubAvatarsUncheckedUpdateOneWithoutSub_userNestedInput
    HoaDon?: TbHoaDonUncheckedUpdateManyWithoutTaiKhoanSubNestedInput
  }

  export type SubUserUncheckedUpdateManyWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: Enumtbtaikhoancon_VaiTroFieldUpdateOperationsInput | $Enums.tbtaikhoancon_VaiTro
  }

  export type TbHoaDonUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    TongHoaDon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbhoadon_StatusFieldUpdateOperationsInput | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PhuongThucThanhToan?: NullableEnumtbhoadon_PhuongThucThanhToanFieldUpdateOperationsInput | $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUpdateManyWithoutHoaDonNestedInput
    TaiKhoanSub?: SubUserUpdateOneWithoutHoaDonNestedInput
  }

  export type TbHoaDonUncheckedUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaTaiKhoanSub?: NullableStringFieldUpdateOperationsInput | string | null
    TongHoaDon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbhoadon_StatusFieldUpdateOperationsInput | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PhuongThucThanhToan?: NullableEnumtbhoadon_PhuongThucThanhToanFieldUpdateOperationsInput | $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedUpdateManyWithoutHoaDonNestedInput
  }

  export type TbHoaDonUncheckedUpdateManyWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaTaiKhoanSub?: NullableStringFieldUpdateOperationsInput | string | null
    TongHoaDon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbhoadon_StatusFieldUpdateOperationsInput | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PhuongThucThanhToan?: NullableEnumtbhoadon_PhuongThucThanhToanFieldUpdateOperationsInput | $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type TbPhieuNhapUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    CacKhoanChiPhiPhatSinhHangHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFieldUpdateOperationsInput | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NhaCungCap?: TbNhaCungCapUpdateOneWithoutPhieuNhapNestedInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUpdateManyWithoutPhieuNhapNestedInput
  }

  export type TbPhieuNhapUncheckedUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaNhaCungCap?: NullableStringFieldUpdateOperationsInput | string | null
    CacKhoanChiPhiPhatSinhHangHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFieldUpdateOperationsInput | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUncheckedUpdateManyWithoutPhieuNhapNestedInput
  }

  export type TbPhieuNhapUncheckedUpdateManyWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaNhaCungCap?: NullableStringFieldUpdateOperationsInput | string | null
    CacKhoanChiPhiPhatSinhHangHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFieldUpdateOperationsInput | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbNhomKhuVucPhongUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomKhuVuc?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Phong?: TbPhongUpdateManyWithoutNhomKhuVucPhongNestedInput
  }

  export type TbNhomKhuVucPhongUncheckedUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomKhuVuc?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Phong?: TbPhongUncheckedUpdateManyWithoutNhomKhuVucPhongNestedInput
  }

  export type TbNhomKhuVucPhongUncheckedUpdateManyWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomKhuVuc?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TbNhomHangHoaUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomHangHoa?: StringFieldUpdateOperationsInput | string
    HangHoa?: TbHangHoaUpdateManyWithoutNhomHangHoaNestedInput
  }

  export type TbNhomHangHoaUncheckedUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomHangHoa?: StringFieldUpdateOperationsInput | string
    HangHoa?: TbHangHoaUncheckedUpdateManyWithoutNhomHangHoaNestedInput
  }

  export type TbNhomHangHoaUncheckedUpdateManyWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomHangHoa?: StringFieldUpdateOperationsInput | string
  }

  export type TbNhomDichVuUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomDichVu?: StringFieldUpdateOperationsInput | string
    DichVu?: TbDichVuUpdateManyWithoutNhomDichVuNestedInput
  }

  export type TbNhomDichVuUncheckedUpdateWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomDichVu?: StringFieldUpdateOperationsInput | string
    DichVu?: TbDichVuUncheckedUpdateManyWithoutNhomDichVuNestedInput
  }

  export type TbNhomDichVuUncheckedUpdateManyWithoutKhachSanInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenNhomDichVu?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhLoaiPhongCreateManyLoaiPhongInput = {
    id?: string
    LinkAnh: string
  }

  export type TbPhongCreateManyLoaiPhongInput = {
    id?: string
    MaNhomKhuVucPhong: string
    TenPhong: string
    GhiChu?: string | null
    Status?: $Enums.tbphong_Status
    StatusDatCho?: $Enums.tbdatcho_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbCacLinkAnhLoaiPhongUpdateWithoutLoaiPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhLoaiPhongUncheckedUpdateWithoutLoaiPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhLoaiPhongUncheckedUpdateManyWithoutLoaiPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbPhongUpdateWithoutLoaiPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NhomKhuVucPhong?: TbNhomKhuVucPhongUpdateOneRequiredWithoutPhongNestedInput
    DatCho?: TbDatChoUpdateManyWithoutPhongNestedInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongUpdateManyWithoutPhongNestedInput
  }

  export type TbPhongUncheckedUpdateWithoutLoaiPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaNhomKhuVucPhong?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DatCho?: TbDatChoUncheckedUpdateManyWithoutPhongNestedInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongUncheckedUpdateManyWithoutPhongNestedInput
  }

  export type TbPhongUncheckedUpdateManyWithoutLoaiPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaNhomKhuVucPhong?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbPhieuNhapCreateManyNhaCungCapInput = {
    id?: string
    MaKhachSan: string
    CacKhoanChiPhiPhatSinhHangHoa?: Decimal | DecimalJsLike | number | string | null
    TongTienCanTra: Decimal | DecimalJsLike | number | string
    TienDaTra: Decimal | DecimalJsLike | number | string
    Status?: $Enums.tbphieunhap_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbPhieuNhapUpdateWithoutNhaCungCapInput = {
    id?: StringFieldUpdateOperationsInput | string
    CacKhoanChiPhiPhatSinhHangHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFieldUpdateOperationsInput | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    KhachSan?: TbKhachSanUpdateOneRequiredWithoutPhieuNhapNestedInput
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUpdateManyWithoutPhieuNhapNestedInput
  }

  export type TbPhieuNhapUncheckedUpdateWithoutNhaCungCapInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    CacKhoanChiPhiPhatSinhHangHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFieldUpdateOperationsInput | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChiTietNoiDungNhap?: TbChiTietNoiDungNhapUncheckedUpdateManyWithoutPhieuNhapNestedInput
  }

  export type TbPhieuNhapUncheckedUpdateManyWithoutNhaCungCapInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    CacKhoanChiPhiPhatSinhHangHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    TongTienCanTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TienDaTra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Status?: Enumtbphieunhap_StatusFieldUpdateOperationsInput | $Enums.tbphieunhap_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbDatChoCreateManyPhongInput = {
    id?: string
    MaKH: string
    NgayDatCho?: Date | string
    NgayNhanPhong: Date | string
    NgayTraPhong: Date | string
    SLNguoiLonDiKem?: number
    SLTreEmDiKem?: number
    LoaiKhach?: $Enums.loaikhach_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbCacLinkAnhPhongCreateManyPhongInput = {
    id?: string
    LinkAnh: string
  }

  export type TbDatChoUpdateWithoutPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    NgayDatCho?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayNhanPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayTraPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    SLNguoiLonDiKem?: IntFieldUpdateOperationsInput | number
    SLTreEmDiKem?: IntFieldUpdateOperationsInput | number
    LoaiKhach?: Enumloaikhach_StatusFieldUpdateOperationsInput | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUpdateManyWithoutDatChoNestedInput
    KhachHang?: TbKhachHangUpdateOneRequiredWithoutDatChoNestedInput
  }

  export type TbDatChoUncheckedUpdateWithoutPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKH?: StringFieldUpdateOperationsInput | string
    NgayDatCho?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayNhanPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayTraPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    SLNguoiLonDiKem?: IntFieldUpdateOperationsInput | number
    SLTreEmDiKem?: IntFieldUpdateOperationsInput | number
    LoaiKhach?: Enumloaikhach_StatusFieldUpdateOperationsInput | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedUpdateManyWithoutDatChoNestedInput
  }

  export type TbDatChoUncheckedUpdateManyWithoutPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKH?: StringFieldUpdateOperationsInput | string
    NgayDatCho?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayNhanPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    NgayTraPhong?: DateTimeFieldUpdateOperationsInput | Date | string
    SLNguoiLonDiKem?: IntFieldUpdateOperationsInput | number
    SLTreEmDiKem?: IntFieldUpdateOperationsInput | number
    LoaiKhach?: Enumloaikhach_StatusFieldUpdateOperationsInput | $Enums.loaikhach_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbCacLinkAnhPhongUpdateWithoutPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhPhongUncheckedUpdateWithoutPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbCacLinkAnhPhongUncheckedUpdateManyWithoutPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    LinkAnh?: StringFieldUpdateOperationsInput | string
  }

  export type TbPhongCreateManyNhomKhuVucPhongInput = {
    id?: string
    MaLoaiPhong: string
    TenPhong: string
    GhiChu?: string | null
    Status?: $Enums.tbphong_Status
    StatusDatCho?: $Enums.tbdatcho_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
  }

  export type TbPhongUpdateWithoutNhomKhuVucPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    LoaiPhong?: TbLoaiPhongUpdateOneRequiredWithoutPhongNestedInput
    DatCho?: TbDatChoUpdateManyWithoutPhongNestedInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongUpdateManyWithoutPhongNestedInput
  }

  export type TbPhongUncheckedUpdateWithoutNhomKhuVucPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaLoaiPhong?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DatCho?: TbDatChoUncheckedUpdateManyWithoutPhongNestedInput
    CacLinkAnhPhong?: TbCacLinkAnhPhongUncheckedUpdateManyWithoutPhongNestedInput
  }

  export type TbPhongUncheckedUpdateManyWithoutNhomKhuVucPhongInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaLoaiPhong?: StringFieldUpdateOperationsInput | string
    TenPhong?: StringFieldUpdateOperationsInput | string
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbphong_StatusFieldUpdateOperationsInput | $Enums.tbphong_Status
    StatusDatCho?: Enumtbdatcho_StatusFieldUpdateOperationsInput | $Enums.tbdatcho_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TbChiNhanhCreateManyTaiKhoanAdminInput = {
    id?: string
    TenChiNhanh: string
    SDTChiNhanh?: string | null
    DiaChiChiNhanh?: string | null
  }

  export type TbChiNhanhUpdateWithoutTaiKhoanAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenChiNhanh?: StringFieldUpdateOperationsInput | string
    SDTChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    DiaChiChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    KhachSan?: TbKhachSanUpdateManyWithoutChiNhanhNestedInput
  }

  export type TbChiNhanhUncheckedUpdateWithoutTaiKhoanAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenChiNhanh?: StringFieldUpdateOperationsInput | string
    SDTChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    DiaChiChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    KhachSan?: TbKhachSanUncheckedUpdateManyWithoutChiNhanhNestedInput
  }

  export type TbChiNhanhUncheckedUpdateManyWithoutTaiKhoanAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    TenChiNhanh?: StringFieldUpdateOperationsInput | string
    SDTChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    DiaChiChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TbHoaDonCreateManyTaiKhoanSubInput = {
    id?: string
    MaKhachSan: string
    TongHoaDon?: Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: Date | string | null
    GhiChu?: string | null
    Status?: $Enums.tbhoadon_Status
    StatusThongBao?: $Enums.thongbao_Status
    createAt?: Date | string
    updateAt?: Date | string
    PhuongThucThanhToan?: $Enums.tbhoadon_PhuongThucThanhToan | null
  }

  export type TbHoaDonUpdateWithoutTaiKhoanSubInput = {
    id?: StringFieldUpdateOperationsInput | string
    TongHoaDon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbhoadon_StatusFieldUpdateOperationsInput | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PhuongThucThanhToan?: NullableEnumtbhoadon_PhuongThucThanhToanFieldUpdateOperationsInput | $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUpdateManyWithoutHoaDonNestedInput
    KhachSan?: TbKhachSanUpdateOneRequiredWithoutHoaDonNestedInput
  }

  export type TbHoaDonUncheckedUpdateWithoutTaiKhoanSubInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TongHoaDon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbhoadon_StatusFieldUpdateOperationsInput | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PhuongThucThanhToan?: NullableEnumtbhoadon_PhuongThucThanhToanFieldUpdateOperationsInput | $Enums.tbhoadon_PhuongThucThanhToan | null
    ChiTietDichVuDatCho?: TbChiTietDichVuDatChoUncheckedUpdateManyWithoutHoaDonNestedInput
  }

  export type TbHoaDonUncheckedUpdateManyWithoutTaiKhoanSubInput = {
    id?: StringFieldUpdateOperationsInput | string
    MaKhachSan?: StringFieldUpdateOperationsInput | string
    TongHoaDon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    KhachThanhToan?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    NgayThanhToan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
    Status?: Enumtbhoadon_StatusFieldUpdateOperationsInput | $Enums.tbhoadon_Status
    StatusThongBao?: Enumthongbao_StatusFieldUpdateOperationsInput | $Enums.thongbao_Status
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PhuongThucThanhToan?: NullableEnumtbhoadon_PhuongThucThanhToanFieldUpdateOperationsInput | $Enums.tbhoadon_PhuongThucThanhToan | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use TbChiNhanhCountOutputTypeDefaultArgs instead
     */
    export type TbChiNhanhCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbChiNhanhCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbDatChoCountOutputTypeDefaultArgs instead
     */
    export type TbDatChoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbDatChoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbDichVuCountOutputTypeDefaultArgs instead
     */
    export type TbDichVuCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbDichVuCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbNhomDichVuCountOutputTypeDefaultArgs instead
     */
    export type TbNhomDichVuCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbNhomDichVuCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbHangHoaCountOutputTypeDefaultArgs instead
     */
    export type TbHangHoaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbHangHoaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbPhieuNhapCountOutputTypeDefaultArgs instead
     */
    export type TbPhieuNhapCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbPhieuNhapCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbNhomHangHoaCountOutputTypeDefaultArgs instead
     */
    export type TbNhomHangHoaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbNhomHangHoaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbHoaDonCountOutputTypeDefaultArgs instead
     */
    export type TbHoaDonCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbHoaDonCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbKhachHangCountOutputTypeDefaultArgs instead
     */
    export type TbKhachHangCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbKhachHangCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbKhachSanCountOutputTypeDefaultArgs instead
     */
    export type TbKhachSanCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbKhachSanCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbLoaiPhongCountOutputTypeDefaultArgs instead
     */
    export type TbLoaiPhongCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbLoaiPhongCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbNhaCungCapCountOutputTypeDefaultArgs instead
     */
    export type TbNhaCungCapCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbNhaCungCapCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbPhongCountOutputTypeDefaultArgs instead
     */
    export type TbPhongCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbPhongCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbNhomKhuVucPhongCountOutputTypeDefaultArgs instead
     */
    export type TbNhomKhuVucPhongCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbNhomKhuVucPhongCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubUserCountOutputTypeDefaultArgs instead
     */
    export type SubUserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubUserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbChiNhanhDefaultArgs instead
     */
    export type TbChiNhanhArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbChiNhanhDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbChiTietDichVuDatChoDefaultArgs instead
     */
    export type TbChiTietDichVuDatChoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbChiTietDichVuDatChoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbDatChoDefaultArgs instead
     */
    export type TbDatChoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbDatChoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbDichVuDefaultArgs instead
     */
    export type TbDichVuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbDichVuDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbNhomDichVuDefaultArgs instead
     */
    export type TbNhomDichVuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbNhomDichVuDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbHangHoaDefaultArgs instead
     */
    export type TbHangHoaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbHangHoaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbPhieuNhapDefaultArgs instead
     */
    export type TbPhieuNhapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbPhieuNhapDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbChiTietNoiDungNhapDefaultArgs instead
     */
    export type TbChiTietNoiDungNhapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbChiTietNoiDungNhapDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbNhomHangHoaDefaultArgs instead
     */
    export type TbNhomHangHoaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbNhomHangHoaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbHoaDonDefaultArgs instead
     */
    export type TbHoaDonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbHoaDonDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbKhachHangDefaultArgs instead
     */
    export type TbKhachHangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbKhachHangDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbKhachSanDefaultArgs instead
     */
    export type TbKhachSanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbKhachSanDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbLoaiPhongDefaultArgs instead
     */
    export type TbLoaiPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbLoaiPhongDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbCacLinkAnhLoaiPhongDefaultArgs instead
     */
    export type TbCacLinkAnhLoaiPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbCacLinkAnhLoaiPhongDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbCacLinkAnhDichVuDefaultArgs instead
     */
    export type TbCacLinkAnhDichVuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbCacLinkAnhDichVuDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbCacLinkAnhHangHoaDefaultArgs instead
     */
    export type TbCacLinkAnhHangHoaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbCacLinkAnhHangHoaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbCacLinkAnhPhongDefaultArgs instead
     */
    export type TbCacLinkAnhPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbCacLinkAnhPhongDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbNhaCungCapDefaultArgs instead
     */
    export type TbNhaCungCapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbNhaCungCapDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbPhongDefaultArgs instead
     */
    export type TbPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbPhongDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbNhomKhuVucPhongDefaultArgs instead
     */
    export type TbNhomKhuVucPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TbNhomKhuVucPhongDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubUserDefaultArgs instead
     */
    export type SubUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubUserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AvatarsDefaultArgs instead
     */
    export type AvatarsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AvatarsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubAvatarsDefaultArgs instead
     */
    export type SubAvatarsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubAvatarsDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}